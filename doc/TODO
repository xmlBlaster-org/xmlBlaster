FEATURES
--------
o Integrate XmlRpc v3 from BalÃ¡zs

o build deploy_war-only
  fails for JDK 1.5

o Add receiveTimestampHumanReadable to QueryQos (SubscribeQos and GetQos)

o JDBC service fails with JDK 1.5

o Subscribe can have a timeout

o Erase variant which respects existing subscriptions

o Client request can inhibit the session refresh

o Security demo with Bit Cypher: http://www.alphaworks.ibm.com/tech/abc?open

o Change to Sun coding convention: http://checkstyle.sourceforge.net/

o Handle QueueProperty.java similar to CbQueueProperty.java in ConnectQos.java

o XmlBlaster internal statistic overview with http://www.object-refinery.com/jfreechart/

o SMS protocol driver with http://www.imail.gr/jsmsengine/index.php

o Transaction support, based on:
    Java(tm) Transaction Service (JTS) 1.0 Specification.
    JTS specifies the implementation of a Transaction Manager which
    supports the Java(tm) Transaction API (JTA) 1.0 Specification.
    http://java.sun.com/products/jts/

o Embeed RDBMS http://axion.tigris.org/features.html

o SOAP support
  RMI-SOAP gateway: http://www.sys-con.com/java/articleprint.cfm?id=1479
  Or embeed SOAP: http://www.soapanywhere.org/saw/index.jsp
     (uses mixture of LGPL and APACHE)
   http://www.w3.org/TR/SOAP/
   http://www.soap-wrc.com
   http://www.alphaWorks.ibm.com/tech/soap4j
   http://msdn.microsoft.com/xml/general/toolkit_intro.asp
   http://msdn.microsoft.com/msdnmag/issues/0300/soap/soap.asp (tutorial)
   http://windows.oreilly.com/news/soapreview_0600.html (IBM versus M$ comparison)

o Use http://xdoclet.sourceforge.net/ for our xmlBlaster.war (web archive)

o Use xdoc http://jakarta.apache.org/site/jakarta-site2.htm for homepage

o xmlBlaster mirroring / object persistence with object persistence
  - http://www.prevayler.org/wiki.jsp?topic=StartingPoints

o Embed BeanShell or Javascript scripting

o Journaled Communication (History)
  For auditing/logging and play back of events (error recovery).

o Allowing compound messages

o Choosing the port for the server/callback server (e.g. XmlRpc):
  Java has a feature whereby you can specify Port 0 when opening a
  ServerSocket which results in opening the Socket on "any available
  port".  This can be very convenient when the port does not need to be
  predefined.

o JMX integration

o Client should be able to query which subscriptions he has


JDBC persistence
----------------

o Make queue properties manually editable in DB

o Add XB_ATTR_NUM XB_ATTR_STRING to hold for example
  logicalUniqueId from a publish and be able to remove
  old variants from a queue.
  For example a online status: only the current is of interest
  and older in a callback queue can be removed when the newest arrive

o Add XB_QUEUE with queueName and 1:n to XB_ENTRY

o On Startup lazy loading (for performance reasons)

o Cache should only be reloaded on demand 
 
o New Implementation should be transactional: transaction 
  manager and possibility to commit/rollback a series of
  queue operations.

o I_Entry.isStored() should be removed
  Used by CacheQueueInterceptorPlugin.java only.

o peek() only reads RAM queue, but with history queue we like
  to browse swapped messages as well

o If reference queues are RAM based and MsgUnitStore is
  JDBC based and persistent message are processed:
  After a server crash the reference counter is outdated

o unsecure login -> verify if no security whole is possible

o CacheQueueInterceptorPlugin.java:469
  - transient.put is not necessary for transient size == 0
  - take() with exceeding (if condition) is wrong

o XMlBlasterAccess.leaveServer() should do a
  dispatchManager.shutdown

o queue/history/maxEntriesCache=1 can't be reconfigured.
  It must be deleted and new created to change

o Add I_Map change() to testsuite

o Reference counter in separate column

o Separate table for queueName (1:N relation)

o Check if dataId is uniqueue or necessary a compund key with queueName

o Create index for priority

o Blob is of form Xbf (or XML)

o Collect all sql statements during a typical operation and tune (limit 1) etc

o Refill cache only when cache is half filled and not on every item
  needsLoading=true is true in case of one entry fits into cache (in none swapping mode?)

o Column 'sizeInBytes' for numOfBytes of the object to calculate / limit easily the number of bytes to load to cache



PERFORMANCE
-----------

o Normalizing the DOM tree

o Profiling http://www.optimizeit.com/ or http://www.klg.com/ - JProbe or whatever

o Evaluate other query engines for better performance, see
  http://www-db.research.bell-labs.com/user/simeon/xquery.html

o Performance analysis with garbage collector http://wireless.java.sun.com/midp/articles/garbage/
  - Port to http://gongolo.usr.dsi.unimi.it/~vigna/fastUtil/?
  - Port to use Piccolo SAX parser ?
  - http://www.thoughtcrime.org/profiler.html


C and C++:
----------

o Port deprecated sprintf, sscanf etc. for VC8 2005 (Windows)
  Warnings are currently supressed with '/wd4996' in build.xml

o Port deprecated  gethostbyname to getaddrinfo etc. for Windows IPv6 support.
  The Windows Platform SDK includes a tool called Checkv4.exe.
  Checkv4.exe scans source code files to identify code that needs to be changed to support IPv6.

TEST
----

o Add automatic testssuite for C++, Perl, PHP
o http://xradar.sourceforge.net
  The batch-processing framework produces HTML/SVG reports of the systems current state and the development over time 
o http://www.fitnesse.org/
  Standalone wiki, and acceptance testing framework
o http://checkstyle.sourceforge.net/
  Write Java code that adheres to a coding standard

AUTHENTICATE / AUTHORIZATION
----------------------------

o xmlBlaster.idl
    * rename AuthServer to AuthenticationService
    * rename Server to xmlBlaster

o Authorization (ACL access control lists)
    Our ACL should be XML based, so its possible to
    query who may do what through XPath on Client meta informations which
    are XML based, simple approach:

    [User]  [Action]  [Data]
    Martin  read      marketing-paper
    Joe     write     homepage-layout

    User:   may be any user based information like role, group, property etc. (XPath query)
    Action: read, write, erase, change
    Data:   Any data in xmlBlaster (XPath query)

