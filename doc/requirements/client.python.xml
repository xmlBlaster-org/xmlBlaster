<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">


<requirement id='client.python' type='NEW' prio='HIGH' status='CLOSED'>
   <topic>
      XmlBlaster provides a client library written in Python.
   </topic>
   <description>
     We have three Python client variants available.
     <p>
     <ol>
     <li>pyBlaster from Peter Arwanitis (spex66 @ gmx . net)
         This is a fairly complete python client to xmlBlaster
         using XmlRpc as access protocol.
         It is simple and brilliant.
         See <a href="client.python.xmlrpc.html">XmlRpc access</a>.
     </li>
     <li>CORBA access with omniORBpy by Oleg Orlov (orlov@diasoft.ru)
         This is a smart and powerful example how to access xmlBlaster from Python
         with CORBA.
         See <a href="client.python.corba.html">Corba access</a>
     </li>
     <li>A simple XmlRpc based access client from Marcel Ruff
         This is outdated and was a first step for access verification.
         See <a href="http://www.xmlBlaster.org/xmlBlaster/demo/python/deprecated/README">README</a>
     </li>
     </ol>
     </p>
   </description>

   <example lang="PYTHON">
      <p><a NAME="example"></a></p>
   <pre>
   </pre>
   </example>

   <configuration where="client">
   </configuration>

   <todo where="client">
      <p>
     We need to cleanup all above approaches and layer the protocol
     (like CORBA or XmlRpc) below some general python classes
     to simplify xmlBlaster access from Python
     </p>
   </todo>

   <see type="REQ">interface</see>
   <see type="REQ">client.python.xmlrpc</see>
   <see type="REQ">client.python.corba</see>
   <see type="INTERNET" lang="PYTHON">http://www.xmlBlaster.org/xmlBlaster/src/python/README</see>
   <see type="INTERNET" lang="PYTHON">http://www.xmlBlaster.org/xmlBlaster/demo/python/README</see>

   <author><a href="mailto:xmlblaster@marcelruff.info">Marcel Ruff</a></author>
   <date>2004 01 24</date>
   <revision>$Revision: 1.3 $</revision>
</requirement>

