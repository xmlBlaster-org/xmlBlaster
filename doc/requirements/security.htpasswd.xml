<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='security.htpasswd' type='NEW' prio='HIGH' status="CLOSED">
   <topic>XmlBlaster provides a crypt password based authentication plugin</topic>
   <description>
      <p>
      Authentication in xmlBlaster is based on plugins. The plugin described here
      is based on the UNIX <code>/etc/passwd</code> crypt password schema.
      </p>
      <h2>The password file</h2>
      <p>
      To get started with htpasswd authentication please
      setup a htpasswd file.
      Todo that, there are two methods to create a crypted password:
      </p>
      <ol>
        <li>Use httpasswd command found in Apache distribution</li>
        <li>Use jcrypt delivered with the xmlBlaster distribution
            (thanks to http://locutus.kingwoodcable.com/jfd/crypt.html and Eric Young, eay@psych.uq.oz.au)</li>
      </ol>
      <pre>
java org.xmlBlaster.authentication.plugins.htpasswd.jcrypt &lt;salt> &lt;password>

[mad@kawa]$ java org.xmlBlaster.authentication.plugins.htpasswd.jcrypt yZ secret
            [yZ] [secret] => [yZ24stvIel1j6]
      </pre>
      <p>
       Cut/paste the password (here <code>yZ24stvIel1j6</code>) in your htpassword file
       (here <code>xmlBlaster.htpasswd</code>):
      </p>
       <pre>
Joel:yZ24stvIel1j6
       </pre>
       <p>
       Lines starting with '#' are comments and are ignored. Consequently you can't have
       user names starting with a '#' with the current implementation.
       Empty lines are ignored.
       </p>

       <h2>Configure xmlBlaster</h2>
       <p>To configure xmlBlaster for that htpasswd auth plugin add these lines in xmlBlaster.properties
       </p>
       <pre>
#for server :
Security.Server.Plugin[htpasswd][1.0]=org.xmlBlaster.authentication.plugins.htpasswd.Manager
Security.Server.Plugin.htpasswd.secretfile=${user.home}${file.separator}xmlBlaster.htpasswd

#for client :
Security.Client.Plugin[htpasswd][1.0]=org.xmlBlaster.authentication.plugins.htpasswd.ClientPlugin
        </pre>

      <h2>Get it running</h2>
      <p>Start the xmlBlaster server</p>

      <pre>
java -jar lib/xmlBlaster.jar
      </pre>

      <p>Start a client (all in one line), e.g.</p>

      <pre>
java HelloWorld3 -Security.Client.DefaultPlugin htpasswd,1.0
                 -session.name &lt;username> -passwd &lt;username>

java HelloWorld3 -Security.Client.DefaultPlugin htpasswd,1.0 
                 -session.name Joel -passwd secret
      </pre>

   <p>In the log output of xmlBlaster server you should see something like:</p>

   <pre>
SecurityPluginManager] Plugin 'org.xmlBlaster.authentication.plugins.htpasswd.Manager'
                       successfully initialized 
   </pre>

   <p>Congratulations, you were authenticated by HTPASSWD !</p>

   <p>The used connect() QoS which you can directly use from Python or Perl clients looks like this:</p>

  <pre>
&lt;securityService type="htpasswd" version="1.0">
   &lt;user>Joel&lt;/user>
   &lt;passwd>secret&lt;/passwd>
&lt;/securityService>
  </pre>

   <p>Now try an invalid password:</p>

      <pre>
java HelloWorld3 -Security.Client.DefaultPlugin htpasswd,1.0 
                 -session.name Joel -passwd BadPassword
      </pre>
   <p>You should get an authentication error from HTPASSWD</p>

   <p>
   That is not the best performing way for authentification, but it's very simple for managing 1 to 500 users.
   </p>

   <h2>Reload</h2>
   <p>
   The password file is reloaded on each login.
   </p>

   <h2>Wildcard user names</h2>
    <p>
    It is possible that the password file just contains a <b>*</b> instead
    of (username,password) tuples -> any username and password combination is authenticated.
    Same if setting <code>Security.Server.Plugin.htpasswd.secretfile=NONE</code>
    </p>
    <p>
    Additionally you can add a <b>*:&lt;password></b> entry, for example '*:sd7aksf1f'.
    This is used if the user is not found explicitly in the password file
    and the wildcard setting is used as the general fallback password.
    </p>

   <h2>Partial user names</h2>
   <p>You can switch on authentication with partial user name by setting
     <code>Security.Server.Plugin.htpasswd.allowPartialUsername=true</code>.
     In this case if a username starts with or ends with the token given in the htpasswd file that password is used</p>
     <p>This may be useful for example for email based login names where all clients from the same email domain
     have the same password.</p>
   </description>

   <example lang="Java" type="HTML">
      <p>
      Here is a password file which authenticates the internal user <code>__sys__jdbc</code>
      with the password <code>secret</code>.
      </p>
      <pre>
__sys__jdbc:yZ24stvIel1j6
      </pre>
   </example>

   <configuration where="server">
      <h3>Server side configuration</h3>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default / Example</th>
            <th>Description</th>
            <th>Impl</th>
         </tr>

         <tr>
            <td>Security.Server.Plugin[htpasswd][1.0]</td>
            <td>org.xmlBlaster. authentication.plugins. htpasswd.Manager</td>
            <td>Load/activate this plugin</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>Security.Server.Plugin. htpasswd.secretfile</td>
            <td>NONE</td>
            <td>Configure where to find the password file, <code>NONE</code> switches
            the passwd check off. A good name could be <code>${user.home} ${file.separator} xmlBlaster.htpasswd</code></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>Security.Server.Plugin. htpasswd.allowPartialUsername</td>
            <td>false</td>
            <td>Setting it to true allows to add the starting letters of
            login names to the password files. All users starting with this
            token are authenticated by the same password. This simplifies
            authentication administration.</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
      </table>
   </configuration>
   <configuration where="client">
      <h3>Additional client side configuration</h3>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default</th>
            <th>Description</th>
            <th>Impl</th>
         </tr>

         <tr>
            <td>Security.Client.Plugin[htpasswd][1.0]</td>
            <td>org.xmlBlaster.authentication. plugins.htpasswd.ClientPlugin</td>
            <td>Load the plugin on client side</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
      </table>
   </configuration>
   <todo type="HTML">
   <ol>
      <li>
      Add a variant to have a unique password for all users
      with such a htpasswd entry
      <code>*:94nizw80s</code>
      </li>
   </ol>
   </todo>
   <see type="REQ">security.introduction</see>
   <see type="REQ">security.development.serverPlugin.howto</see>
   <see type="REQ">security.ldap</see>
   <see type="API">org.xmlBlaster.authentication.plugins.htpasswd.HtPasswd</see>
   <see type="LOCAL">../../src/java/org/xmlBlaster/authentication/plugins/htpasswd/README</see>
   <author>cyrille@ktaland.com</author>
   <author>xmlBlaster@marcelruff.info</author>
   <author>astelzl@avitech.de</author>
   <date>2001 11 02</date>
   <revision>$Revision: 1.3 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.authentication.TestAuthenticationHtPassWd</test>
   </testcase>
</requirement>

