<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='protocol.local' type='NEW' prio='HIGH' status="CLOSED">
   <topic>XmlBlaster supports native client server communication in the same JVM</topic>
   <description>
      <p>
      If a client connects to XmlBlaster with the <code>XmlBlasterAccess</code> client interface
      it can choose the communication protocol like Corba, SOCKET, XmlRpc and more.
      But if the client runs in the same JVM we can avoid the communication over a socket
      by choosing the <b>LOCAL</b> protocol plugin. This improves speed and 
      avoids using OS resources like ports and threads.<br />
      Switching the protocol is just a configuration setting, so any existing
      client can choose to communicate locally. </p>
      <p>Client that want's to be able to use the local protocol must however have access to the serverside "singleton" org.xmlBlaster.engine.Global, either directly or through a global wich contains the serverside global i is ObjectEntry under the key: <code>ServerNodeScope</code>. Futhermore, it must see to it than any cloning it does of its global (for example to be able to use more than one XmlBlasterAccess) contians this ServerNodeScope entry. The <code>org.xmlBlaster.j2ee.util.GlobalUtil</code> may be used to do just that.</p>
    <p>There are currently three ways to do this.</p>
      <p>
      It is possible to start xmlBlaster clients with the runlevel manager of xmlBlaster.
      Like this the client is started on xmlBlaster startup in the same JVM as the server
      in a configurable sequence with other services (see our runlevel manager requirement).Note that the client must implement the
      <code>I_Plugin</code> interface to be loadable as a plugin, this is described in
      the <i>engine.runlevel</i> requirement.
      </p>
    <p>If one starts an embedded XmlBlaster it is also possible to access the engine.Global: <code>serverThread.getMain().getGlobal()</code></p>
    <p>When using the JBoss/JMX service to start XmlBlaster it is also possible to specify a JNDIname where an instance of GlobalUtil should be bound. This GlobalUtil instance will contain a reference to the engine global as long as its looked up in the same VM.</p>
    </description>

    <example lang="Java" type="HTML">
      <p>The following demo code is a client which can be started as a standalone client or
      it can be loaded dynamically by the runlevel manager to run in the same JVM as the server:
      </p>
    <pre bgcolor="#ffffff" text="#000000" class="embed" style="CODE.Java" title="javaclients.HelloWorldNative">
    <a name="line1" href="#line1"> 1</a> <font color="#444444">// xmlBlaster/demo/javaclients/HelloWorldNative.java</font>
    <a name="line2" href="#line2"> 2</a> <font color="0000ff"><strong>package javaclients;</strong></font>
    <a name="line3" href="#line3"> 3</a> <font color="0000ff"><strong>import org.xmlBlaster.client.qos.ConnectQos;</strong></font>
    <a name="line4" href="#line4"> 4</a> <font color="0000ff"><strong>import org.xmlBlaster.client.I_XmlBlasterAccess;</strong></font>
    <a name="line5" href="#line5"> 5</a> <font color="0000ff"><strong>import org.xmlBlaster.client.XmlBlasterAccess;</strong></font>
    <a name="line6" href="#line6"> 6</a> <font color="0000ff"><strong>import org.xmlBlaster.util.Global;</strong></font>
    <a name="line7" href="#line7"> 7</a> <font color="0000ff"><strong>import org.xmlBlaster.util.XmlBlasterException;</strong></font>
    <a name="line8" href="#line8"> 8</a> <font color="0000ff"><strong>import org.xmlBlaster.util.MsgUnit;</strong></font>
    <a name="line9" href="#line9"> 9</a> <font color="0000ff"><strong>import org.xmlBlaster.util.plugin.I_Plugin;</strong></font>
    <a name="line10" href="#line10">10</a> <font color="0000ff"><strong>import org.xmlBlaster.util.plugin.PluginInfo;</strong></font>
    <a name="line11" href="#line11">11</a> 
    <a name="line12" href="#line12">12</a> 
    <a name="line13" href="#line13">13</a> <font color="#444444"><i>/**
    <a name="line14" href="#line14">14</a>  * This native client plugin is loaded by xmlBlaster on startup, 
    <a name="line15" href="#line15">15</a>  * it then connects to xmlBlaster and gets synchronous a message and disconnects. 
    <a name="line16" href="#line16">16</a>  * &lt;p /&gt;
    <a name="line17" href="#line17">17</a>  * You need to add this plugin to xmlBlasterPlugins.xml, for example:
    <a name="line18" href="#line18">18</a>  * &lt;pre&gt;
    <a name="line19" href="#line19">19</a>  *  &amp;lt;plugin id='HelloWorldNative' className='javaclients.HelloWorldNative'&gt;
    <a name="line20" href="#line20">20</a>  *     &amp;lt;action do='LOAD' onStartupRunlevel='9' sequence='5'
    <a name="line21" href="#line21">21</a>  *                          onFail='resource.configuration.pluginFailed'/&gt;
    <a name="line22" href="#line22">22</a>  *     &amp;lt;action do='STOP' onShutdownRunlevel='6' sequence='4'/&gt;
    <a name="line23" href="#line23">23</a>  *  &amp;lt;/plugin&gt;
    <a name="line24" href="#line24">24</a>  * &lt;/pre&gt;
    <a name="line25" href="#line25">25</a>  * As a protocol driver to talk to xmlBlaster it has configured &quot;LOCAL&quot;, this
    <a name="line26" href="#line26">26</a>  * plugin works only if client and server is in the same virtual machine (JVM).
    <a name="line27" href="#line27">27</a>  * Other protocols like CORBA or SOCKET would work as well but carry the overhead
    <a name="line28" href="#line28">28</a>  * of sending the message over TCP/IP.
    <a name="line29" href="#line29">29</a>  * @see &lt;a href=&quot;http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.runlevel.html&quot;
    <a name="line30" href="#line30">30</a>  *       target=&quot;others&quot;&gt;run level requirement&lt;/a&gt;
    <a name="line31" href="#line31">31</a>  * @see javaclients.HelloWorldNative2
    <a name="line32" href="#line32">32</a>  */</i></font>
    <a name="line33" href="#line33">33</a> <strong>public</strong> <strong>class</strong> <font color="#2040a0">HelloWorldNative</font> <strong>implements</strong> <font color="#2040a0">I_Plugin</font>
    <a name="line34" href="#line34">34</a> <font color="4444FF"><strong>{</strong></font>
    <a name="line35" href="#line35">35</a>    <strong>private</strong> <font color="#2040a0">Global</font> <font color="#2040a0">glob</font><font color="4444FF">;</font>
    <a name="line42" href="#line42">42</a> 
    <a name="line43" href="#line43">43</a>    <strong>private</strong> <strong>final</strong> <strong>void</strong> <font color="#2040a0">queryServerMemory</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font>
    <a name="line44" href="#line44">44</a>       <strong>try</strong> <font color="4444FF"><strong>{</strong></font>
    <a name="line45" href="#line45">45</a>          <font color="#2040a0">System</font>.<font color="#2040a0">err</font>.<font color="#2040a0">println</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;HelloWorldNative: Connecting with protocol 'LOCAL'<font color="#77dd77">\n</font>&quot;</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line46" href="#line46">46</a>          <font color="#2040a0">I_XmlBlasterAccess</font> <font color="#2040a0">con</font> <font color="4444FF">=</font> <strong>new</strong> <font color="#2040a0">XmlBlasterAccess</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">glob</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line47" href="#line47">47</a> 
    <a name="line48" href="#line48">48</a>          <font color="#2040a0">ConnectQos</font> <font color="#2040a0">qos</font> <font color="4444FF">=</font> <strong>new</strong> <font color="#2040a0">ConnectQos</font><font color="4444FF"><strong>(</strong></font><strong>this</strong>.<font color="#2040a0">glob</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font> <font color="#444444">/* Client side object */</font>
    <a name="line49" href="#line49">49</a>          <font color="#2040a0">qos</font>.<font color="#2040a0">setUserId</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;A-NATIVE-CLIENT-PLUGIN&quot;</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line50" href="#line50">50</a>          <font color="#2040a0">qos</font>.<font color="#2040a0">getSessionQos</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font>.<font color="#2040a0">setSessionTimeout</font><font color="4444FF"><strong>(</strong></font><font color="#FF0000">0L</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line51" href="#line51">51</a>          <font color="#2040a0">con</font>.<font color="#2040a0">connect</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">qos</font>, <strong>null</strong><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>  <font color="#444444">// Login as &quot;A-NATIVE-CLIENT-PLUGIN&quot;</font>
    <a name="line52" href="#line52">52</a> 
    <a name="line53" href="#line53">53</a>          <font color="#2040a0">MsgUnit</font><font color="4444FF"><strong>[</strong></font><font color="4444FF"><strong>]</strong></font> <font color="#2040a0">msgs</font> <font color="4444FF">=</font> <font color="#2040a0">con</font>.<font color="#2040a0">get</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;&lt;key oid='__cmd:?freeMem'/&gt;&quot;</font>, <strong>null</strong><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line54" href="#line54">54</a> 
    <a name="line55" href="#line55">55</a>          <font color="#2040a0">System</font>.<font color="#2040a0">out</font>.<font color="#2040a0">println</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;<font color="#77dd77">\n</font>HelloWorldNative: xmlBlaster has currently &quot;</font> <font color="4444FF">+</font>
    <a name="line56" href="#line56">56</a>                 <strong>new</strong> <font color="#2040a0">String</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">msgs</font><font color="4444FF"><strong>[</strong></font><font color="#FF0000">0</font><font color="4444FF"><strong>]</strong></font>.<font color="#2040a0">getContent</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF">+</font> <font color="#008000">&quot; bytes of free memory<font color="#77dd77">\n</font>&quot;</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line57" href="#line57">57</a> 
    <a name="line58" href="#line58">58</a>          <font color="#2040a0">con</font>.<font color="#2040a0">disconnect</font><font color="4444FF"><strong>(</strong></font><strong>null</strong><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line59" href="#line59">59</a>       <font color="4444FF"><strong>}</strong></font>
    <a name="line60" href="#line60">60</a>       <strong>catch</strong> <font color="4444FF"><strong>(</strong></font><font color="#2040a0">Exception</font> <font color="#2040a0">e</font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font>
    <a name="line61" href="#line61">61</a>          <font color="#2040a0">System</font>.<font color="#2040a0">err</font>.<font color="#2040a0">println</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;HelloWorldNative: Exception: &quot;</font><font color="4444FF">+</font><font color="#2040a0">e</font>.<font color="#2040a0">toString</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line62" href="#line62">62</a>       <font color="4444FF"><strong>}</strong></font>
    <a name="line63" href="#line63">63</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line64" href="#line64">64</a> 
    <a name="line65" href="#line65">65</a>    <strong>public</strong> <strong>void</strong> <font color="#2040a0">init</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">org</font>.<font color="#2040a0">xmlBlaster</font>.<font color="#2040a0">util</font>.<font color="#2040a0">Global</font> <font color="#2040a0">glob</font>, <font color="#2040a0">PluginInfo</font> <font color="#2040a0">pluginInfo</font><font color="4444FF"><strong>)</strong></font>
    <a name="line66" href="#line66">66</a>                                                     <strong>throws</strong> <font color="#2040a0">XmlBlasterException</font> <font color="4444FF"><strong>{</strong></font>
    <a name="line67" href="#line67">67</a>       <strong>this</strong>.<font color="#2040a0">glob</font> <font color="4444FF">=</font> <font color="#2040a0">glob</font>.<font color="#2040a0">getClone</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">glob.getNativeConnectArgs()</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line68" href="#line68">68</a>       <strong>this</strong>.<font color="#2040a0">glob</font>.<font color="#2040a0">addObjectEntry</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;ServerNodeScope&quot;</font>, 
    <a name="line69" href="#line69">69</a>                                <font color="#2040a0">glob</font>.<font color="#2040a0">getObjectEntry</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;ServerNodeScope&quot;</font><font color="4444FF"><strong>)</strong></font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line70" href="#line70">70</a>       <font color="#2040a0">System</font>.<font color="#2040a0">out</font>.<font color="#2040a0">println</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;<font color="#77dd77">\n</font>HelloWorldNative: init(): The plugin is loaded&quot;</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line71" href="#line71">71</a>       <font color="#2040a0">queryServerMemory</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line72" href="#line72">72</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line73" href="#line73">73</a> 
    <a name="line74" href="#line74">74</a>    <strong>public</strong> <font color="#2040a0">String</font> <font color="#2040a0">getType</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font>
    <a name="line75" href="#line75">75</a>       <strong>return</strong> <font color="#008000">&quot;HelloWorldNative&quot;</font><font color="4444FF">;</font>
    <a name="line76" href="#line76">76</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line77" href="#line77">77</a> 
    <a name="line78" href="#line78">78</a>    <strong>public</strong> <font color="#2040a0">String</font> <font color="#2040a0">getVersion</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font>
    <a name="line79" href="#line79">79</a>       <strong>return</strong> <font color="#008000">&quot;1.0&quot;</font><font color="4444FF">;</font>
    <a name="line80" href="#line80">80</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line81" href="#line81">81</a> 
    <a name="line82" href="#line82">82</a>    <strong>public</strong> <strong>void</strong> <font color="#2040a0">shutdown</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font> <strong>throws</strong> <font color="#2040a0">XmlBlasterException</font> <font color="4444FF"><strong>{</strong></font>
    <a name="line83" href="#line83">83</a>       <font color="#2040a0">System</font>.<font color="#2040a0">err</font>.<font color="#2040a0">println</font><font color="4444FF"><strong>(</strong></font><font color="#008000">&quot;<font color="#77dd77">\n</font>HelloWorldNative: shutdown()<font color="#77dd77">\n</font>&quot;</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line84" href="#line84">84</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line85" href="#line85">85</a> 
    <a name="line86" href="#line86">86</a>    <font color="#444444"><i>/** To start as a plugin */</i></font>
    <a name="line87" href="#line87">87</a>    <strong>public</strong> <font color="#2040a0">HelloWorldNative</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font><font color="4444FF"><strong>}</strong></font>
    <a name="line88" href="#line88">88</a> 
    <a name="line89" href="#line89">89</a>    <font color="#444444"><i>/** To start as a standalone client: java javaclients.HelloWorldNative */</i></font>
    <a name="line90" href="#line90">90</a>    <strong>public</strong> <font color="#2040a0">HelloWorldNative</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">String</font> <font color="#2040a0">args</font><font color="4444FF"><strong>[</strong></font><font color="4444FF"><strong>]</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font>
    <a name="line91" href="#line91">91</a>       <strong>this</strong>.<font color="#2040a0">glob</font> <font color="4444FF">=</font> <strong>new</strong> <font color="#2040a0">Global</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">args</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line92" href="#line92">92</a>       <font color="#2040a0">queryServerMemory</font><font color="4444FF"><strong>(</strong></font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line93" href="#line93">93</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line94" href="#line94">94</a> 
    <a name="line95" href="#line95">95</a>    <strong>public</strong> <strong>static</strong> <strong>void</strong> <font color="#2040a0">main</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">String</font> <font color="#2040a0">args</font><font color="4444FF"><strong>[</strong></font><font color="4444FF"><strong>]</strong></font><font color="4444FF"><strong>)</strong></font> <font color="4444FF"><strong>{</strong></font>
    <a name="line96" href="#line96">96</a>       <strong>new</strong> <font color="#2040a0">HelloWorldNative</font><font color="4444FF"><strong>(</strong></font><font color="#2040a0">args</font><font color="4444FF"><strong>)</strong></font><font color="4444FF">;</font>
    <a name="line97" href="#line97">97</a>    <font color="4444FF"><strong>}</strong></font>
    <a name="line98" href="#line98">98</a> <font color="4444FF"><strong>}</strong></font>

    </pre>

    <p>To tell the runlevel manager when to load the plugin you need to edit xmlBlasterPlugins.xml and
    register the plugin:
    </p>
    <pre>
&lt;plugin id='HelloWorldNative' className='javaclients.HelloWorldNative'>
   &lt;action do='LOAD' onStartupRunlevel='9' sequence='5'
              onFail='resource.configuration.pluginFailed'/>
   &lt;action do='STOP' onShutdownRunlevel='6' sequence='4'/>
&lt;/plugin>
    </pre>
    <p>Please read the requirement <i>engine.runlevel.howto</i> for further details
    </p>
    <p>The example <i>HelloWorldNative2</i> provides an extended example how to do publish/subscribe
    from a plugin and how to pass plugin specific attributes/parameters to the plugin.
    </p>
    </example>

   <example lang="Java" type="HTML">
    <p>Looking up a GlobalUtil and using it in a JBoss environment:</p>
    <pre>
      Global Util globalUtil = (GlobalUtil)new InitialContext().lookup(jndiName);
      Global glob = globalUtil.newGlobal( propFile, props );
      I_XmlBlasterAccess conOne = glob.getXmlBlasterAccess();
      I_XmlBlasterAccess conTwo = globalUtil.getClone( glob ).getXmlBlasterAccess();
    </pre>
    <p>Using it when embedding XmlBlaster:</p>
    <pre>
      EmbeddedXmlBlaster serverThread = EmbeddedXmlBlaster.startXmlBlaster(args);
      GlobalUtil globalUtil = new GlobalUtil( serverThread.getMain().getGlobal() );
      Global runglob = globalUtil.getClone( glob );
      con = runglob.getXmlBlasterAccess();
      ConnectQos qos = new ConnectQos(runglob, name, passwd);
      I_XmlBlasterAccess con.connect(qos, this); // Login to xmlBlaster
    </pre>
   </example>

   <configuration where="client">
      <p>On <b>client side</b> we need to register the <b>LOCAL</b> protocol
      plugin to be available in the Java client library.
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default / Example</th>
            <th>Description</th>
            <th>Implemented</th>
         </tr>

         <tr>
            <td>ClientProtocolPlugin[LOCAL][1.0]</td>
            <td>org.xmlBlaster.client.protocol.local.LocalConnection</td>
            <td>Specify the plugin to get support of direct client/server communication
            in the same JVM
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>ClientCbServerProtocolPlugin[LOCAL][1.0]</td>
            <td>org.xmlBlaster.client.protocol.local.LocalCallbackImpl</td>
            <td>Specify the native callback plugin
                </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

      </table>
   </configuration>
  <configuration where="server">
    <p>On <b>serverside side</b> we need to register the <b>LOCAL</b> protocol serverside callback driver.
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default / Example</th>
            <th>Description</th>
            <th>Implemented</th>
         </tr>

         <tr>
            <td>CbProtocolPlugin[LOCAL][1.0]</td>
            <td>org.xmlBlaster.protocol.local.CallbackLocalDriver</td>
            <td>Specify the callback driver on the serverside.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

      </table>
  </configuration>
   <todo type="HTML">
   <ol>
      <li>Example of a I_Plugin client.
      </li>
   </ol>
   </todo>
  <see type="REQ">protocol</see>
  <see type="REQ">engine.runlevel.howto</see>
  <see type="API">javaclients.HelloWorldNative</see>
  <see type="INTERNET">http://www.xmlBlaster.org/xmlBlaster/demo/javaclients/HelloWorldNative.java.html</see>
  <see type="API">javaclients.HelloWorldNative2</see>
  <see type="INTERNET">http://www.xmlBlaster.org/xmlBlaster/demo/javaclients/HelloWorldNative2.java.html</see>
  <see type="API">org.xmlBlaster.client.protocol.local.LocalConnection</see>
  <see type="API">org.xmlBlaster.client.protocol.local.LocalCallbackImpl</see>
  <see type="API">org.xmlBlaster.protocol.local.CallbackLocalDriver</see>
  <see type="API">org.xmlBlaster.j2ee.util.GlobalUtil</see>
  <see type="API">org.xmlBlaster.j2ee.jmx.XmlBlasterService</see>
   <author>xmlBlaster@marcelruff.info</author>
  <author>pra@tim.se</author>
   <date>2003 09 18</date>
   <revision>$Revision: 1.5 $</revision>
   <testcase status="OPEN">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.client.TestLocalProtocol</test>
   </testcase>
</requirement>

