<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='queue.jdbc.hsqldb' type='NEW' prio='MIDDLE' status='CLOSED'>
   <topic>
        XmlBlaster has an advanced queuing facility. As the default persistence layer HSQLDB is used
        as an embedded java database.
    </topic>
    <description>
       <p>As default xmlBlaster comes with persistence switched on. The default database is HSQLDB which
       can be used in embedded mode. This means that there is no need to have an external database 
       running. It runs in the same virtual machine as xmlBlaster. Configuration of the DB is therefore
       kept to an absolute minimum for default behaviour. If you want to deactivate persistence, or if 
       you want to choose another database please look at the comments in the xmlBlaster.properties 
       file (which normally resides in your home directory).
        </p>
        <h3>Setup hsqldb</h3>
        <ol>
        <li>Setup <a href="http://www.xmlBlaster.org/xmlBlaster/config/xmlBlaster.properties.template" target="others">
            xmlBlaster.properties</a> as described in the example section below</li>
        </ol>

    </description>

    <example lang="Java" type="HTML">
    <p>This is a configuration example from xmlBlaster.properties:
    </p>
    <pre>
JdbcStorage[HSQLDatabaseEngine]=org.xmlBlaster.util.queue.jdbc.JdbcQueueCommonTablePlugin,\
  url=jdbc:hsqldb:xmlblaster,\
  user=sa,\
  password=,\
  connectionPoolSize=1,\
  connectionBusyTimeout=90000,\
  maxWaitingThreads=300,\
  tableNamePrefix=XB_,\
  entriesTableName=ENTRIES,\
  dbAdmin=true

StoragePlugin[JDBC][1.0]=${JdbcStorage[HSQLDatabaseEngine]}

QueuePlugin[JDBC][1.0]=${JdbcStorage[HSQLDatabaseEngine]}

JdbcDriver.mapping[HSQLDatabaseEngine]=\
string=VARCHAR,longint=BIGINT,int=INTEGER,blob=BINARY,\
boolean=CHAR

    </pre>
   </example>
   <configuration where="server">

      <p>
      These parameters allow to configure a cache queue running with hsqldb
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default</th>
            <th>Description</th>
            <th>Hot</th>
            <th>Impl</th>
         </tr>
         <tr>
            <td>QueuePlugin[CACHE][1.0]</td>
            <td>org.xmlBlaster.util.queue.cache.CacheQueueInterceptorPlugin</td>
            <td>specifies the cache implementing class to be used</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/maxEntries</td>
            <td>1000</td>
            <td>specifies the maximum number of entries allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/maxBytes</td>
            <td>10485760</td>
            <td>(10MB) specifies the maximum total size allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/persistent/url</td>
            <td>jdbc:hsqldb:xmlblaster</td>
            <td>the url which specifies where to find the DB.</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
            <tr>
            <td>queue/persistent/user</td>
            <td>sa</td>
            <td>The db user under which to run</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/persistent/password</td>
            <td></td>
            <td>The password used together with the user 'sa'</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

        </table>
        Additionally the configuration parameters for the ram queue and the jdbc queue must be defined.
   </configuration>

   <see type="INTERNET">http://hsqldb.sourceforge.net/</see>
   <see type="API">org.xmlBlaster.util.queue.I_Queue</see>
   <see type="API">org.xmlBlaster.util.queue.jdbc.CacheQueuePlugin</see>
   <see type="API">org.xmlBlaster.util.queue.QueuePluginManager</see>
   <see type="API">org.xmlBlaster.util.queue.I_QueueEntry</see>
   <see type="API">org.xmlBlaster.util.qos.storage.QueuePropertyBase</see>
   <see type="API">org.xmlBlaster.util.I_Plugin</see>
   <see type="API">org.xmlBlaster.util.Global</see>
   <see type="REQ">queue</see>

   <author>laghi@swissinfo.org</author>
   <date>2003 06 27</date>
   <revision>$Revision: 1.3 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.I_QueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.JdbcQueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.CacheQueueTest</test>
   </testcase>
</requirement>

