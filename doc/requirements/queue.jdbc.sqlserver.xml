<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='queue.jdbc.sqlserver' type='NEW' prio='MIDDLE' status='CLOSED'>
   <topic>
        XmlBlaster has an advanced queuing facility. Among others one tested persistence layer is offered by
        communicating with Microsoft SQL Server 2000 and 2005 database.
    </topic>
    <description>
       <p>The generic plugin for jdbc based queues has been tested against Microsoft SQL Server by
        Zhang Zhi Wei (zzwzyz@163.com) and Marcel Ruff.</p>
        <p>SQL Server is available from <a href='http://www.microsoft.com/sql/' target='others'>http://www.microsoft.com/sql/</a>
        where you can find all
        necessary information and instructions on how to make Microsoft SQL Server run.
        </p>
        <p>Once you have a running database you can configure xmlBlaster to make it run against it.
        Before you need to download the jdbc driver. You must
        put these files in the CLASSPATH (for example you can put them into $XMLBLASTER_HOME/lib and add them to the
        CLASSPATH.
        </p>
        <p>
        The tests where made with the type 4 JDBC driver of Microsoft with this extended CLASSPATH:
<pre>
set CLASSPATH=\tmp\msbase.jar;\tmp\mssqlserver.jar;\tmp\msutil.jar;%CLASSPATH%
</pre>
        </p>
        <h3>Setup SQL Server</h3>
        <ol>
        <li>Setup xmlBlaster.properties as described in the example section below</li>
        <li>Create database in SQL Server, as for this demo ,it is <code>xmlBlaster</code></li>
        <li>xmlBlaster creates on startup automatically the needed table</li>
        </ol>

        <h3>Note on temporary memory consumption</h3>
        <p>Expect the Microsoft JDBC driver to temporary allocate the 5 fold
        of the real message size during writing to persistence.
        If your persistent message is of size 40 MByte,
        xmlBlaster may for a short period of time allocate 240 MBytes of RAM
        (200 MBytes are allocated by the JDBC driver and 40 MBytes by xmlBlaster
        for the message itself).
        This is no JDBC driver memory leak as it is only temporary.
        The amount is depending on the
        quality of the used JDBC driver.
        </p>

    </description>

    <example lang="Java" type="HTML">
        <h2>Setup SQL Server 2000</h2>
    <p>This is a configuration example from xmlBlaster.properties, please adjust
    it with your password:
    </p>
    <pre>
JdbcDriver.drivers=com.microsoft.jdbc.sqlserver.SQLServerDriver

JdbcStorage[MicrosoftSQLServer]=\
  org.xmlBlaster.util.queue.jdbc.JdbcQueueCommonTablePlugin,\
  url=jdbc:microsoft:sqlserver://localhost:1433;SelectMethod=cursor;DatabaseName=xmlBlaster,\
  user=sa,\
  password=,\
  connectionPoolSize=5,\
  connectionBusyTimeout=90000,\
  maxWaitingThreads=300,\
  tableNamePrefix=XB_,\
  entriesTableName=ENTRIES,\
  colNamePrefix=XB_,\
  dbAdmin=true

StoragePlugin[JDBC][1.0]=${JdbcStorage[MicrosoftSQLServer]}

QueuePlugin[JDBC][1.0]=${JdbcStorage[MicrosoftSQLServer]}

JdbcDriver.mapping[MicrosoftSQLServer]=\
  string=CHAR(128),longint=numeric (19),boolean=char(1),blob=image
    </pre>
    <p>After starting xmlBlaster (without errors) you can query a table:</p>
    <pre>
MS-Dos Command line:

osql -E
1> use  xmlBlaster
2> go
1> select * from XB_ENTRIES
2> go
    </pre>
   </example>

    <example lang="Java" type="HTML">
        <h2>Setup SQL Server 2005</h2>
    <p>This is a configuration example from xmlBlaster.properties, please adjust
    it with your password:
    </p>
    <pre>
JdbcDriver.drivers=com.microsoft.sqlserver.jdbc.SQLServerDriver

JdbcStorage[MicrosoftSQLServer2005]=org.xmlBlaster.util.queue.jdbc.JdbcQueueCommonTablePlugin,\
                  url=jdbc:sqlserver://localhost:1433/database=xmlBlaster,\
                  user=sa,\
                  password=xxx,\
                  connectionPoolSize=5,\
                  connectionBusyTimeout=90000,\
                  maxWaitingThreads=300,\
                  tableNamePrefix=XB_,\
                  entriesTableName=ENTRIES,\
                  colNamePrefix=XB_,\
                  dbAdmin=true
StoragePlugin[JDBC][1.0]=${JdbcStorage[MicrosoftSQLServer2005]}
QueuePlugin[JDBC][1.0]=${JdbcStorage[MicrosoftSQLServer2005]}
JdbcDriver.mapping[MicrosoftSQLServer2005]=string=VARCHAR(128),longint=numeric (19),boolean=char(1),blob=image
    </pre>
    <p>After starting xmlBlaster (without errors) you can query a table:</p>
    <pre>
MS-Dos Command line:

osql -E
1> use  xmlBlaster
2> go
1> select * from XB_ENTRIES
2> go
    </pre>
   </example>

   <example lang="Java" type="HTML">
   <p>
   Before the first usage you have to create a database <i>'xmlBlaster'</i> in SQL Server.
   You can use the <i>SQL Server Enterprise Manager</i> GUI tool or start
   this script file <tt>'xmlBlaster.sql'</tt> from a MS-DOS box:
   </p>
   <pre>
-- File:    xmlBlaster.sql
--
-- Create 'xmlBlaster' database for MS-SQLServer
--
-- Invoke:  osql -E -i xmlBlaster.sql
--

use master 

if exists (select * from sysdatabases where name='xmlBlaster')
begin
  raiserror('Dropping existing xmlBlaster database ....',0,1)
  DROP database xmlBlaster
end
go

create database xmlBlaster on default
go

   </pre>
   <p>The final step is to create a user with a password and add this
   to xmlBlaster.properties.
   </p>
   </example>

   <configuration where="server">

      <p>
      These parameters allow to configure a cache queue running with Microsoft SQL Server
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default</th>
            <th>Description</th>
            <th>Hot</th>
            <th>Impl</th>
         </tr>
         <tr>
            <td>QueuePlugin[CACHE][1.0]</td>
            <td>org.xmlBlaster.util.queue.<br/>
                cache.CacheQueueInterceptorPlugin</td>
            <td>specifies the cache implementing class to be used for storing the queue entries</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>StoragePlugin[CACHE][1.0]</td>
            <td>org.xmlBlaster.util.queue.<br/>
                cache.CacheQueueInterceptorPlugin</td>
            <td>specifies the cache implementing class to be used for storing the message content</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/maxEntries</td>
            <td>1000</td>
            <td>specifies the maximum number of entries allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/maxBytes</td>
            <td>10485760</td>
            <td>(10MB) specifies the maximum total size allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/persistent/url</td>
            <td>jdbc:microsoft:sqlserver://localhost:1433</td>
            <td>the url which specifies where to find the DB.</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
            <tr>
            <td>queue/persistent/user</td>
            <td>xmlblaster</td>
            <td>The db user under which to run</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/persistent/password</td>
            <td>secret</td>
            <td>The password used together with the user 'xmlblaster'</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

        </table>
        Additionally the configuration parameters for the ram queue and the jdbc queue must be defined.
   </configuration>

   <see type="API">org.xmlBlaster.util.queue.I_Queue</see>
   <see type="API">org.xmlBlaster.util.queue.jdbc.CacheQueuePlugin</see>
   <see type="API">org.xmlBlaster.util.queue.QueuePluginManager</see>
   <see type="API">org.xmlBlaster.util.queue.I_QueueEntry</see>
   <see type="API">org.xmlBlaster.util.qos.storage.QueuePropertyBase</see>
   <see type="API">org.xmlBlaster.util.I_Plugin</see>
   <see type="API">org.xmlBlaster.util.Global</see>
   <see type="REQ">queue</see>
   <see type="INTERNET" label="Download Microsoft JDBC driver">http://www.microsoft.com/sql/downloads</see>
   <see type="INTERNET" label="SQLServer tutorial">http://www.akadia.com/services/sqlsrv_programming.html</see>

   <author>zzwzyz@163.com</author>
   <date>2003 06 09</date>
   <revision>$Revision: 1.7 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.I_QueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.JdbcQueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.CacheQueueTest</test>
   </testcase>
</requirement>

