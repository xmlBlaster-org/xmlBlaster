<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='util.property' type='NEW' prio='LOW' status="CLOSED">
   <topic>XmlBlaster provides a property file to allow a simple configuration</topic>
   <description>
      <p>
      The xmlBlaster.properties file allows to customize the behavior of xmlBlaster.
      </p>
     <p>Here we describe he sequence by which xmlBlaster looks into the file system to find the
        properties file.
     </p>
     <p>To monitor the lookup sequence (outputs with System.out), use the property <code>property.debug</code>, whereat
        0=nothing, 1=info and 2=trace.
        <pre class="BORDER">
java -Dproperty.verbose=2 ...
java -Dproperty.verbose=2 org.xmlBlaster.Main

java MyApp -property.verbose 2
        </pre>
     </p>
     <p>
       Some plugins can be configured both in the <i>xmlBlaster.properties</i> file and in the <i>xmlBlasterPlugins.xml</i> file. 
       Normally plugins which are loaded by the runlevel manager are defined in the <i>xmlBlasterPlugins.xml</i> file, while such plugins 
       which are loaded dynamically are defined and configured in the <i>xmlBlaster.properties</i> file. There are however cases where the
       plugins can be loaded in either ways, for instance if a plugin fulfils two different purposes and implements different plugin interfaces
       for example one which is loaded dynamically as the I_PublishFilter and an I_Plugin which is loaded by the runlevel manager.
       For such cases you can -and in some cases you must- define the plugin in either files. The parameters/properties/attributes of the 
       plugin however should only be defined in one of the two files.
     </p>
     <p>
       <b>If you define it in both -in the xmlBlaster.properties file by specifying
       data after the comma (',') and in the <i>xmlBlasterPlugins.xml</i> by having <i>attribute</i> subtags, you will get a warning and the
       properties in the <i>xmlBlasterPlugins.xml</i> will be ignored.</b>
     </p>
     <table border="1">
      <tr>
        <th>Location</th>
        <th>Example</th>
        <th>Comment</th>
      </tr>
       <tr>
         <td>user.dir</td>
         <td>/opt/xmlBlaster</td>
         <td>The current directory</td>
       </tr>
       <tr>
         <td>-propertyFile</td>
         <td>/tmp/xy.properties </td>
         <td>full property file name (complete with path)</td>
       </tr>
       <tr>
         <td>-pluginsFile</td>
         <td>/tmp/plugins.xml </td>
         <td>full plugins-property file name (complete with path)</td>
       </tr>
       <tr>
         <td>http:// or ftp://</td>
         <td>file:xy.properties</td>
         <td>Supports downloading a configuration or resource file, for example
         http://www.xmlblaster.org/xmlBlaster/config/xmlBlaster.properties.template</td>
       </tr>
       <tr>
          <td>PROJECT_HOME</td>
          <td>java -DPROJECT_HOME=/opt/xmlBlaster</td>
          <td>global property</td>
       </tr>
       <tr>
          <td>user.home</td>
          <td>/home/joe</td>
          <td>Your home directory</td>
       </tr>
       <tr>
          <td>CLASSPATH</td>
          <td>lib/xmlBlaster.jar:/opt/classes.zip</td>
          <td>The complete given classpath</td>
       </tr>
       <tr>
          <td>java.ext.dirs</td>
          <td>/opt/jdk1.2.2/jre/trb/ext</td>
          <td>Your JVM installations ext directory</td>
       </tr>
       <tr>
          <td>java.home</td>
          <td>/opt/jdk1.2.2/jre/trb</td>
          <td>Your JVM installation (JAVA_HOME)</td>
       </tr>
     </table>
   </description>
   <example lang="Java" type="HTML">
     <p>
      Example to force the configuration files:
        <pre class="BORDER">
java org.xmlBlaster.Main -propertyFile somewhere/xmlBlaster.properties -pluginsFile somewhere/plugins.xml
        </pre>
     </p>
   </example>
   <see type="REQ">util.property.env</see>
   <see type="API">org.xmlBlaster.util.property.Property</see>
   <author>xmlBlaster@marcelruff.info</author>
   <date>2000 02 24</date>
   <revision>$Revision: 1.18 $</revision>
   <testcase status="CLOSED">
      <name>xmlBlaster@marcelruff.info</name>
      <comment>
      The property file is used everywhere in the xmlBlaster code.
      The modules test their property variables in their own test cases.
      </comment>
      <test tool="SUITE">org.xmlBlaster.test.AllTests</test>
   </testcase>
</requirement>

