<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='engine.service.rdbms.jdbcpool' type='NEW' prio='LOW' status="CLOSED">
   <topic>
      XmlBlaster provides a 'named' JDBC connection pool for optimized performance of database access.
   </topic>
   <description>
      <p>
      The JDBC pool allows accessing any number of different databases with
      arbitrary login users.<br />
      Every database user is separately pooled for maximum performance.<br />
      </p>
      <p>
      Every DB request needs to pass the DB-url, login name and password,
      since the clients are not permanently connected.<br />
      </p>
      <p>
      Unused connection pools are freed after some time,
      the timeout parameters and pool size is adjustable (see example below).
      </p>
      <p>
      The connections are established on demand (lazy allocation).<br />
      Pre-allocation is currently not implemented.<br />
      The first SQL request (for example with Oracle) consumes about
      1 second to establish the connection, the following requests
      get this connection from the pool, which is below 1 millisecond.<br />
      If many SQL requests are done simultaneously, the pool
      increases the number of parallel connections until 'maxInstances' is reached.<br />
      Further parallel connections would throw an exception.
      </p>
   </description>
   
   <configuration where="server">
      <p>
      These parameters allow to configure the JDBC pool behavior:
      </p>
      <p>
      They can be set on command line or in the xmlBlaster.properties file.
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default / Example</th>
            <th>Description</th>
            <th>Implemented</th>
         </tr>

         <tr>
            <td>JdbcPool.eraseUnusedPoolTimeout</td>
            <td>60*60*1000L [msec]</td>
            <td>If a user disappears for one hour, delete his pool</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>JdbcPool.maxInstances</td>
            <td>20</td>
            <td>Max. number of simultaneous connections per user</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>JdbcPool.busyToIdleTimeout</td>
            <td>0 [msec]</td>
            <td>Max. busy time of this resource in milli seconds.<br />
               On timeout it changes state from 'busy' to 'idle'.<br />
               You can overwrite this value for each resource instance<br />
               0 switches it off<br />
               -1 uses default (switched off)<br />
               You get called back through I_PoolManager.busyToIdle() on timeout
               allowing you to code some specific handling.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>JdbcPool.idleToEraseTimeout</td>
            <td>10*60*1000L [msec]</td>
            <td>
               Max. idle time span of this resource in milli seconds<br />
               An unused connection is shutdown after 10 min, freeing resources after peak usage<br />
               On timeout it changes state from 'idle' to 'undef' (it is deleted).<br />
               You can overwrite this value for each resource instance<br />
               0 switches it off<br />
               -1 uses default (10 min) (xmlBlaster.properties)<br />
               You get called back through I_PoolManager.toErased() on timeout
               allowing you to code some specific handling.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>JdbcPool.maxResourceExhaustRetries</td>
            <td>5</td>
            <td>If pool is exhausted (all connections are busy) a new request tries the
                given number of times to get a connection from the pool, between the
                retries we sleep JdbcPool.resourceExhaustSleepGap times.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

         <tr>
            <td>JdbcPool.resourceExhaustSleepGap</td>
            <td>1000L [msec]</td>
            <td>How long to sleep between retries (see JdbcPool.maxResourceExhaustRetries)</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

      </table>
   </configuration>

   <see type="REQ">engine.service.rdbms</see>
   <see type="API">org.xmlBlaster.protocol.jdbc.NamedConnectionPool</see>
   <author>xmlBlaster@marcelruff.info</author>
   <hacker>xmlBlaster@marcelruff.info</hacker>
   <effort>2</effort>
   <date>2000 07 07</date>
   <revision>$Revision: 1.8 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>The test is included in NamedConnectionPool.java main()</comment>
      <test tool="MANUAL">java org.xmlBlaster.protocol.jdbc.NamedConnectionPool</test>
   </testcase>
</requirement>

