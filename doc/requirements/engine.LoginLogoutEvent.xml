<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='engine.LoginLogoutEvent' type='NEW' prio='LOW' status="DEPRECATED">
   <topic>Clients can be notified about other clients login or logout events. <br />
   <b>Deprecated: Please use events as described in requirement <i>admin.events</i></b></topic>
   <description>
      There are two internal messages which hold login and logout events. 
      You can subscribe to "<tt>__sys__Login</tt>" to be notified when a new client logs in,
      and to "<tt>__sys__Logout</tt>" to be notified when a client logs out.
      The message content contains the login name of this client.
      <p>
         The public Session Id is passed in the client properties with the key "<tt>__publicSessionId</tt>",
         it is of type <tt>long</tt>. Further the absolute, cluster wide unique name is available
         with the key "<tt>__absoluteName</tt>", it is of type <tt>String</tt>.
      </p>
   </description>

   <example lang="Java" type="HTML">
<p class="celltitel"><b>Work around</b> to receive events with new EventPlugin</p>
<a name="workaround"/>

<p>To reveive the login/logout event with the new framework please add this to <code>xmlBlasterPlugins.xml</code>:</p>

<pre class="BORDER">
   &lt;plugin create='true' id='connectEvent' className='org.xmlBlaster.engine.EventPlugin'>
      &lt;action do='LOAD' onStartupRunlevel='8' sequence='4'/>
      &lt;action do='STOP' onShutdownRunlevel='7' sequence='4'/>
      &lt;attribute id='eventTypes'>client/*/session/*/event/connect&lt;/attribute>
      &lt;attribute id='destination.publish'>
         "publish.key=&lt;key oid='__sys__Login'>&lt;__sys__internal/>&lt;/key>",
         "publish.qos=&lt;qos>&lt;expiration lifeTime='0'/>&lt;topic destroyDelay='30000'>&lt;persistence relating='msgUnitStore' type='RAM'/>&lt;queue relating='history' type='RAM'/>&lt;/topic>&lt;/qos>"
      &lt;/attribute>
   &lt;/plugin>

   &lt;plugin create='true' id='disconnectEvent' className='org.xmlBlaster.engine.EventPlugin'>
      &lt;action do='LOAD' onStartupRunlevel='8' sequence='4'/>
      &lt;action do='STOP' onShutdownRunlevel='7' sequence='4'/>
      &lt;attribute id='eventTypes'>client/*/session/*/event/disconnect&lt;/attribute>
      &lt;attribute id='destination.publish'>
         "publish.key=&lt;key oid='__sys__Logout'>&lt;__sys__internal/>&lt;/key>",
         "publish.qos=&lt;qos>&lt;expiration lifeTime='0'/>&lt;topic destroyDelay='30000'>&lt;persistence relating='msgUnitStore' type='RAM'/>&lt;queue relating='history' type='RAM'/>&lt;/topic>&lt;/qos>"
      &lt;/attribute>
   &lt;/plugin>

   &lt;plugin create='true' id='clientListEvent' className='org.xmlBlaster.engine.EventPlugin'>
      &lt;action do='LOAD' onStartupRunlevel='8' sequence='4'/>
      &lt;action do='STOP' onShutdownRunlevel='7' sequence='4'/>
      &lt;attribute id='eventTypes'>client/*/session/*/event/connect,client/*/session/*/event/disconnect&lt;/attribute>
      &lt;attribute id='destination.publish'>
         "publish.key=&lt;key oid='__sys__UserList'>&lt;__sys__internal/>&lt;/key>",
         "publish.content=$_{clientList}",
         "publish.qos=&lt;qos>&lt;expiration lifeTime='0'/>&lt;topic destroyDelay='30000'>&lt;persistence relating='msgUnitStore' type='RAM'/>&lt;queue relating='history' type='RAM'/>&lt;/topic>&lt;/qos>"
      &lt;/attribute>
   &lt;/plugin>
</pre>
   <p>The returned client properties contain all need informations:</p>
<pre class="BORDER">
content:
  client/*/session/*/event/connect
content (example for __sys__UserList):
  __RequestBroker_internal[heron],Martin,SimpleReaderGui,Joe
  ...
qos:
  ...
  &lt;clientProperty name='_eventType'>client/*/session/*/event/connect&lt;/clientProperty>
  &lt;clientProperty name='_subjectId'>Martin&lt;/clientProperty>
  &lt;clientProperty name='_publicSessionId' type='long'>1&lt;/clientProperty>
  &lt;clientProperty name='_summary'>Login of client /node/xmlBlaster_127_0_0_2_3412/client/Martin/1&lt;/clientProperty>
  &lt;clientProperty name='_absoluteName'>/node/heron/client/Martin/1&lt;/clientProperty>
  ...
</pre>


   <p>See http://www.xmlblaster.org/xmlBlaster/doc/requirements/admin.events.html</p>

   <p>You can as well query the <code>__sys__UserList</code> information as follows:</p>
<pre>
java javaclients.HelloWorldGet -oid __cmd:?clientList
</pre>
</example>


   <example lang="Java" type="HTML">
   <p>The following Java code snippet shows the access to the client login events:</p>
<pre>
// subscribe on login events:
String xmlKey = "&lt;key oid='__sys__Login' queryType='EXACT'>&lt;/key>";
String qos = "&lt;qos>&lt;/qos>";
try {
   xmlBlaster.subscribe(xmlKey, qos);
} catch(XmlBlasterException e) {
}

...

// in the update() method you receive a message on client login:
// Example for a client session "/node/heron/client/joe/2":

// Access "joe"
String loginName = new String(content);

// Access "2"
long publicSessionId = updateQos.getClientProperty("__publicSessionId", 0L);
System.out.println("Client " + loginName + " logged in with session " + publicSessionId);

// Access "/node/heron/client/joe/2"
String absoluteName = updateQos.getClientProperty("__absoluteName", "");
System.out.println("Client is '" + absoluteName + "'");
</pre>
   </example>



   <configuration where="server">
      <p>
      These parameters allow to configure the plugin.
      </p>
<p class="celltitel">Email data sink specific settings</p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default / Example</th>
            <th>Description</th>
            <th>Impl</th>
         </tr>
         <tr>
            <td>loginEvent</td>
            <td>true</td>
            <td>Send an event on client login using topic name <code>__sys__Login</code>.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>logoutEvent</td>
            <td>true</td>
            <td>Send an event on client logout using topic name <code>__sys__Logout</code>.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>userListEvent</td>
            <td>true</td>
            <td>Send complete user list when a client comes or goes using topic name <code>__sys__UserList</code>.
            </td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
      </table>
   </configuration>

   <see type="REQ">admin</see>
   <see type="REQ" name="New event approach 'admin.events'">admin.events</see>
   <author>xmlBlaster@marcelruff.info</author>
   <date>2000 03 25</date>
   <revision>$Revision: 1.5 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.authentication.TestLoginLogoutEvent</test>
   </testcase>
</requirement>

