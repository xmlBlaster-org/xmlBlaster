<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='j2ee.jmx' type='NEW' prio='LOW' status="CLOSED">
   <topic>
      JMX MBean version of XmlBlaster server.
   </topic>
   <description>
    <p>This is a JMX compliant MBean version of the embedable XmlBlaster. Potentially it should be possible to install in any JMX server, but it has only been testen on JBoss, th 3.x series.</p>

    <h3>JBoss</h3>
    <p>Since it has only been tested on JBoss, we describe only features in the context of a JBoss install.</p>
    <p>The mbean is distributed in a JBoss service archive. To install the server, copy the xmlBlaster.sar file to the deploy directoy of JBoss, e.g. <code>lib/xmlBlaster.sar server/default/deploy/</code>. You must however do some more things:</p>
    <ul>
     <li>JBoss uses an older version of concurrent.jar, therefore the concurrent.jar in xmlBlaster must be copyed over the JBoss version in the top lin directory of the JBoss distribution.</li>
     <li>If using an RMIDriver, a SecurityManager must be installed. For this to work a java.security.policy file must be specifyed when starting JBoss, eg, <code>sh run.sh -Djava.security.policy=../server/default/conf/server.policy</code></li>
   </ul>
   </description>
   <configuration>
    <p>Configuration of the server (for JBoss) is possible to do in two places:</p>
    <ul>
     <li>In the jboss-service.xml embedded in the sar-file.</li>
     <li>In a xmlBlaster.properties file</li>
    </ul>
   <p>There is only a small subset of all possible configurations you may set in the jboss-service.xml. The most important is the PropertyFileName attribute. It is <b>important</b> to note that the loading of the property file does not follow normal xmlBlaster conventions: first, the property file name specifyed is first looked up in the current context class loader. Only if it is not found there will it be searched the normal way. Its important to note that  the values from the property file will override any system properties.This embedded version does also not use the standard xmlBlasterPlugins.xml, but a striped one. If you want to ad drivers to your configuration, you must edit the one embedded in xmlBlaster.sar.</p>
      <p>It is also important to note that many of the default values in XmlBlaster is not possible to use with JBoss, since the resources are already in use in JBoss. The XmlBlaster sar file contains a default xmlBlaster.properties file which contains non standard XmlBlaster values for some importand properties. To chane these open the sar and edit either the embedded xmlBlaster.properties or specify a new PropertyFileName in jboss-service.xml.</p>
      <p>In the default configuration all persistence is turned of beacuse of
      incompatibilities with the XmlBlaster requirements on HSQLDB and the
      version in JBoss 3.0.</p>
      <p>To be able to use the LOCAL protocol from clients embedded in the same VM a JNDIName should be specifyed. When this is done a GlobalUtil will be bound in JNDI which may be looked up by clients, and which will have access to the engine global.</p>
   </configuration>
   <see type="LOCAL">../../src/java/org/xmlBlaster/j2ee/jmx</see>
   <see type="API">org.xmlBlaster.j2ee.jmx.XmlBlasterService</see>
  <see type="REQ">protocol.local</see>
   <author>pra@tim.se</author>
   <date>2003 09 08</date>
   <revision>$Revision: 1.4 $</revision>
  <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.j2ee.TestJ2eeServices</test>
   </testcase>
</requirement>