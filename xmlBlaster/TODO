
TODO for release 0.80
---------------------

(1) Generic support for DOM  and SAX in the xmlBlaster (JAXP)  [ok]
(2) Integrate persistence support with Xindice                 [ok]
(3) Perl support(src/perl) with xmlrpc and not with COPE.      [ok]
(4) Suport for searching in our Maillinglist                   [ok]
(5) Integrate XmlRpc                                           [ok]
(6) Integrate XmlRpc for Python                                [ok]
(7) Autoconf for C++                                           [ok]
(8) XmlBlaster-Matrix                                          [--]
(9) Documentation (some samll HOWTOs)                          [--]
(10) Integrate JacOrb 1.2.1                                    [ok]
(11) SOAP  ?                                                   [--]
(12) Configure the xmlBlaster by xmlBlaster.xml                [--]
(13) CLASSPATH is to long                                      [ok]
(14) xmlBlaster HP support for all browsers                    [ok]
(15) New callback framework                                    [ok]
(16) Embed BeanShell or Javascript scripting                   [--]
(17) drop xerces in lib/ant                                    [--]


URI based loginName handling:
-----------------------------

This URI does a login and delivers some qos:

   xmlBlaster.login://joe:mypassword@server.xmlBlaster.org:7609?qos.master=IOR:0000345&qos.topic.type=EXACT&qos.topic=WindVeloc
   xmlBlaster.publish://joe:mypassword@server.xmlBlaster.org:7609?key.oid=MyMessage&content=Hello&nbsp;world&sessionId=09278cn88sa

   http://joe:mypassword@172.24.64.70:8080?method=xmlBlaster.publish&key.oid=MyMessage&content=Hello&nbsp;world

   joe:mypassword@server.xmlBlaster.org:8080


Some small TODO's for the next release
--------------------------------------
(1) Documenation based on XML2PDF
(2) Journaled Communication (History)
    For auditing/logging and play back of events (error recovery).
(3) Allowing compound messages.
(4) Online demos'

Choosing the port for the server/callback server (e.g. XmlRpl):
  Java has a feature whereby you can specify Port 0 when opening a
  ServerSocket which results in opening the Socket on "any available
  port".  This can be very convenient when the port does not need to be
  predefined.  We doe not have a mechanism for
  finding out what port was selected.
  An easy modification code to fix this is to add a
  method "getServerPort" that retrieves the port value from serverSocket
  and returns it.  [michael wilke]

Using dynamic Proxies for logging etc. see
  http://java.sun.com/j2se/1.3/docs/guide/reflection/proxy.html

--------------------------- TODO for the future ------------------------


PERFORMANCE
-----------
(1) Normalizing the DOM tree
(2) Profiling http://www.optimizeit.com/ or http://www.klg.com/ - JProbe (no Linux!?) or whatever
(3) Use SML instead of XML? http://www.xml.com/pub/1999/11/sml/index.html
(4) Evaluate other query engines for better performance, see
    http://www-db.research.bell-labs.com/user/simeon/xquery.html

TECHNOLOGY
----------
(1) XML Schema support. Necessary to use XPATH DTD-ID:
    An element node may have a unique identifier (ID).
    This is the value of the attribute that is declared in the Schema/DTD as type ID

(2) Support for Wireless Application Protocol (WAP)

(3) proprietary Protocol plugins (not CORBA)
    ----------------------------------------
    - Protocol plugins (www.webdav.com)
    - state less protocols (email, http, webDav)
    For HTTP and XML see XML-RPC:
      http://www.xmlrpc.com/spec
    and SOAP:
      http://www.w3.org/TR/SOAP/
      http://www.soap-wrc.com
      http://www.alphaWorks.ibm.com/tech/soap4j
      http://msdn.microsoft.com/xml/general/toolkit_intro.asp
      http://msdn.microsoft.com/msdnmag/issues/0300/soap/soap.asp (tutorial)
      http://windows.oreilly.com/news/soapreview_0600.html (IBM versus M$ comparison)
    - http protocol Java servlet (including a Java web server):
      http://www.mortbay.com/software/iX.html

SERVER
------
    Transaction support, based on:
    Java(tm) Transaction Service (JTS) 1.0 Specification.
    JTS specifies the implementation of a Transaction Manager which
    supports the Java(tm) Transaction API (JTA) 1.0 Specification.
    http://java.sun.com/products/jts/

CLIENT
------
(1) Client should be able to query which subscriptions he has

(2) Automatic disconnect detection of a client e.g. [ Closing connection to 192.168.1.1:1424 ]
    this is important if the client didn't logout properly.
    There is no standard way to get a callback from CORBA on socket EOF.

(3) Tcl/Tk

(4) Phyton
    Python language: http://www.python.org
    Python CORBA:    http://www.dstc.edu.au/Fnorb (not free for commercial use!)
    Python XML:      http://www.python.org/sigs/xml-sig/
    Python XSL:      http://fourthought.com/4Suite/4XSLT  ftp://FourThought.com/pub/4Suite/4XSLT/


AUTHENTICATE
------------
(1) Add an AuthenticateException type

(2) xmlBlaster.idl
    * rename AuthServer to AuthenticationService
    * rename Server to xmlBlaster

AUTHORIZATION
-------------
(1) Authorization (ACL access control lists)
    Our ACL should be XML based, so its possible to
    query who may do what through XPath on Client meta informations which
    are XML based, simple approach:

    [User]  [Action]  [Data]
    Martin  read      marketing-paper
    Joe     write     homepage-layout

    User:   may be any user based information like role, group, property etc. (XPath query)
    Action: read, write, erase, change
    Data:   Any data in xmlBlaster (XPath query)

HOMEPAGE
--------
(1) cvsweb access using  http://www.lyra.org/viewcvs/

(2) Documentation formatting from XML to PDF (XSL-FO):  Unicorn Formatting Objects (UFO)
    http://www.unicorn-enterprises.com/

TESTSUITE:
----------
    Move to newer JUnit http://www.junit.org/


BUILD ENVIRONMENT
-----------------

(1) drop xerces in lib/ant
    The ant release we're using right now needs xerces, that's hy it is located in lib/ant.
    xerces.jar is included in the CLASSPATH for the environment in build.sh and build.bat.
    It will not be included in xmlBlaster.jar and in the CLASSPATH in manifest.xmlBlaster.

