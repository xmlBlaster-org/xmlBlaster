This proxy allows clients to access xmlBlaster with XML-RPC.

See http://www.xmlrpc.com

   XML-RPC Library for Java
   Copyright (c) 1999 Hannes Wallnoefer, hannes@helma.at
   http://helma.at/hannes/xmlrpc/


Install:
========

  Add xmlBlaster/lib/xmlrpc.jar to your CLASSPATH.


  Make sure to have the following set in your $HOME/xmlBlaster.properties file:

    Protocol.Drivers=...,XML-RPC:org.xmlBlaster.protocol.xmlrpc.XmlRpcDriver,...
    Protocol.CallbackDrivers=...,XML-RPC:org.xmlBlaster.protocol.xmlrpc.CallbackXmlRpcDriver,...

  This loads XmlRpc support into xmlBlaster.
  It should be there already, since it is default.


Todo:
=====
  Add filter to allow only wanted clients:
     acceptClient(java.lang.String address)
     setParanoid(boolean p)
  See API of helma.xmlrpc.WebServer
  Make addresses configurable with xmlBlaster.properties


Test the driver:
================

   $JAVA_WRAP org.xmlBlaster.Main

   java javaclients.ClientSub -client.protocol XML-RPC

   The $JAVA_WRAP is an environment variable which points to the correct java wrapper depending on
   which CORBA implementation you are using (it points to jaco for JacORB and to
   $XMLBLASTER_HOME/config/java_orbacus.sh for ORBACUS).

   If you allways want to use XML-RPC instead of CORBA put this line
   into xmlBlaster.properties:

      client.protocol=XML-RPC


To further Test the driver:
===========================
   jaco -Dsax.driver=com.sun.xml.parser.Parser org.xmlBlaster.Main -call true

   java -Dsax.driver=com.sun.xml.parser.Parser helma.xmlrpc.XmlRpcClient http://localhost:8080 authenticate.login "ben" "secret" "<qos></qos>" "mySessionId"

   java -Dsax.driver=com.sun.xml.parser.Parser helma.xmlrpc.XmlRpcClient http://localhost:8080 xmlBlaster.subscribe "mySessionId" "<key oid='__sys__Login'></key>" "<qos></qos>"

   java -Dsax.driver=xp  helma.xmlrpc.XmlRpcClient http://localhost:8080 xmlBlaster.subscribe "mySessionId" "<key oid='cpuinfo'></key>" "<qos></qos>"

and the proxy receives the updates.
