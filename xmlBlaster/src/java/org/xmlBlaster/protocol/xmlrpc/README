This proxy allows clients to access xmlBlaster with XML-RPC.

See http://www.xmlrpc.com

You need to download:

   XML-RPC Library for Java
   Copyright (c) 1999 Hannes Wallnoefer, hannes@helma.at
   http://helma.at/hannes/xmlrpc/

and add xmlrpc.jar to your CLASSPATH.


Test the driver:
================

   $JAVA_WRAP -Dsax.driver=com.sun.xml.parser.Parser org.xmlBlaster.Main
   java -Dsax.driver=com.sun.xml.parser.Parser org.xmlBlaster.client.protocol.xmlrpc.XmlBlasterProxy

   The $JAVA_WRAP is an environment variable which points to the correct java wrapper depending on 
   which CORBA implementation you are using (it points to jaco for JacORB and to 
   $XMLBLASTER_HOME/config/java_orbacus.sh for ORBACUS).


To further Test the driver:
===========================
   jaco -Dsax.driver=com.sun.xml.parser.Parser org.xmlBlaster.Main

   java -Dsax.driver=com.sun.xml.parser.Parser helma.xmlrpc.XmlRpcClient http://localhost:8080 authenticate.login "ben" "secret" "<qos></qos>" "mySessionId"

   java -Dsax.driver=com.sun.xml.parser.Parser helma.xmlrpc.XmlRpcClient http://localhost:8080 xmlBlaster.subscribe "mySessionId" "<key oid='__sys__Login'></key>" "<qos></qos>"



Using the proxy - Deprecated
============================
Start the server:

   java org.xmlBlaster.Main

Start the xml-rpc proxy:

   java -Dsax.driver=com.sun.xml.parser.Parser org.xmlBlaster.protocol.xmlrpc.XmlRpcProxy

  or with James Clark xml parser:

   java -Dsax.driver=xp org.xmlBlaster.protocol.xmlrpc.XmlRpcProxy


Start an xml-rpc client:

    java -Dsax.driver=xp   helma.xmlrpc.XmlRpcClient http://localhost:8080 proxy.subscribe "<key oid='cpuinfo'></key>" "<qos></qos>"
    java -Dsax.driver=javax.xml.parsers.SAXParser helma.xmlrpc.XmlRpcClient http://localhost:8080 proxy.subscribe "<key oid='cpuinfo'></key>" "<qos></qos>"

and the proxy receives the updates.

TODO:
 - Implement a native xml-rpc driver.
 - Transform MessageUnitContainer[] into <array>
   for the get() call
 - How to do asynchronous callbacks?
 - How to do authentication
 - Much more.

