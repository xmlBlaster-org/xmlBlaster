/*
 * This Java file has been generated by smidump 0.3.1. Do not edit!
 * It is intended to be used within a Java AgentX sub-agent environment.
 *
 * $Id$
 */
package org.xmlBlaster.engine.admin.extern.snmp;

/**
    This class represents a Java AgentX (JAX) implementation of
    the table sessionTable defined in XMLBLASTER-MIB.

    @version 1
    @author  smidump 0.3.1
    @see     AgentXTable
 */

import java.util.Vector;

import jax.AgentXOID;
import jax.AgentXVarBind;
import jax.AgentXResponsePDU;
import jax.AgentXSetPhase;
import jax.AgentXTable;
import jax.AgentXEntry;

public class SessionTable extends AgentXTable
{

    // entry OID
    private final static long[] OID = {1, 3, 6, 1, 4, 1, 11662, 1, 5, 1};

    // constructors
    public SessionTable()
    {
        oid = new AgentXOID(OID);

        // register implemented columns
        columns.addElement(new Long(2));
        columns.addElement(new Long(3));
        columns.addElement(new Long(4));
        columns.addElement(new Long(5));
        columns.addElement(new Long(6));
        columns.addElement(new Long(7));
    }

    public SessionTable(boolean shared)
    {
        super(shared);

        oid = new AgentXOID(OID);

        // register implemented columns
        columns.addElement(new Long(2));
        columns.addElement(new Long(3));
        columns.addElement(new Long(4));
        columns.addElement(new Long(5));
        columns.addElement(new Long(6));
        columns.addElement(new Long(7));
    }

    public AgentXVarBind getVarBind(AgentXEntry entry, long column)
    {
        AgentXOID oid = new AgentXOID(getOID(), column, entry.getInstance());

        switch ((int)column) {
        case 2: // sessionName
        {
            byte[] value = ((SessionEntry)entry).get_sessionName();
            return new AgentXVarBind(oid, AgentXVarBind.OCTETSTRING, value);
        }
        case 3: // cbQueueNumEntries
        {
            long value = ((SessionEntry)entry).get_cbQueueNumEntries();
            return new AgentXVarBind(oid, AgentXVarBind.GAUGE32, value);
        }
        case 4: // cbQueueMaxEntries
        {
            long value = ((SessionEntry)entry).get_cbQueueMaxEntries();
            return new AgentXVarBind(oid, AgentXVarBind.GAUGE32, value);
        }
        case 5: // cbQueueThreshold
        {
            long value = ((SessionEntry)entry).get_cbQueueThreshold();
            return new AgentXVarBind(oid, AgentXVarBind.GAUGE32, value);
        }
        case 6: // clearCbQueue
        {
            int value = ((SessionEntry)entry).get_clearCbQueue();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 7: // closeSession
        {
            int value = ((SessionEntry)entry).get_closeSession();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        }

        return null;
    }

    public int setEntry(AgentXSetPhase phase,
                        AgentXEntry entry,
                        long column,
                        AgentXVarBind vb)
    {

        switch ((int)column) {
        case 4: // cbQueueMaxEntries
        {
            if (vb.getType() != AgentXVarBind.GAUGE32)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((SessionEntry)entry).set_cbQueueMaxEntries(phase, vb.longValue());
        }
        case 5: // cbQueueThreshold
        {
            if (vb.getType() != AgentXVarBind.GAUGE32)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((SessionEntry)entry).set_cbQueueThreshold(phase, vb.longValue());
        }
        case 6: // clearCbQueue
        {
            if (vb.getType() != AgentXVarBind.INTEGER)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((SessionEntry)entry).set_clearCbQueue(phase, vb.intValue());
        }
        case 7: // closeSession
        {
            if (vb.getType() != AgentXVarBind.INTEGER)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((SessionEntry)entry).set_closeSession(phase, vb.intValue());
        }
        }

        return AgentXResponsePDU.NOT_WRITABLE;
    }

}

