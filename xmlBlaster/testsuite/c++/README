These are examples on how to access xmlBlaster from a C++ client

- clientBOA.cc and clientPOA.cc use the MICO (C++) CORBA library

- xmlBlaster runs with JacORB (Java)


1.) Install MICO (2.3) and set the environment variable to point to MICO

   export MICO_HOME=/usr/local/mico


2) Compile the clients with

   make all



To run the clients:


Using BOA (clientBOA.cc):

3) Start the xmlBlaster server

         jaco org.xmlBlaster.Main -iorFile /tmp/ior.dat


4) And connect with the C++ client (cd $XMLBLASTER_HOME/testsuite/c++/bin)

         ./TestGet  -ior `cat /tmp/ior.dat`


Using POA (clientPOA.cc) with a naming service:

You need to have a running web server and set the DocumentRoot to e.g.

   export DocumentRoot=/usr/local/httpd/html

3) Start the naming service (with a running web server)

   jaco jacorb.naming.NameServer ${DocumentRoot}/NS_Ref


4) Start the xmlBlaster server (The web server URL is in jacorb.properties)

   jaco org.xmlBlaster.Main


5) And connect with the C++ client

   ./clientPOA -ORBNamingIOR `cat ${DocumentRoot}/NS_Ref`


On problems edit $HOME/jacorb.properties and set
   jacorb.verbosity=1

