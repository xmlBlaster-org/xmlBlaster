#------------------------------------------------------------------------------
# Name:      xmlBlaster.properties
# Project:   xmlBlaster.org
# Copyright: xmlBlaster.org, see xmlBlaster-LICENSE file
# Comment:   Properties for xmlBlaster MOM server, copy into you home directory
#
#All JVM system variables are supported, e.g.
#   ${user.dir}
#   ${user.home}
#could be used and would be replaced to the current directory and
#the users home directory respectively.
#
#Further you can reference all variables in this file or from command line
#with ${...}
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# Authentication and Authorization
Security.Server.allowSimpleDriver=true
Security.Server.Plugin[simple][1.0]=org.xmlBlaster.authentication.plugins.simple.Manager
Security.Server.Plugin[gui][1.0]=org.xmlBlaster.authentication.plugins.demo.Manager
Security.Server.Plugin[a2Blaster][1.0]=org.xmlBlaster.authentication.plugins.a2Blaster.Manager
Security.Server.Plugin[ldap][1.0]=org.xmlBlaster.authentication.plugins.ldap.Manager
Security.Server.Plugin[htpasswd][1.0]=org.xmlBlaster.authentication.plugins.htpasswd.Manager
Security.Server.Plugin.htpasswd.secretfile=${user.home}${file.separator}xmlBlaster.htpasswd

# Force on client side a specified plugin (as default)
# Only if you access xmlBlaster with java clients and
# use our helper class XmlBlasterConnection.java
# With "gui,1.0" will the server popup a GUI panel
#Security.Client.DefaultPlugin=gui,1.0
Security.Client.Plugin[gui][1.0]=org.xmlBlaster.authentication.plugins.demo.ClientPlugin
Security.Client.Plugin[simple][1.0]=org.xmlBlaster.authentication.plugins.simple.ClientPlugin
Security.Client.Plugin[a2Blaster][1.0]=org.xmlBlaster.authentication.plugins.a2Blaster.ClientPlugin
Security.Client.Plugin[ldap][1.0]=org.xmlBlaster.authentication.plugins.ldap.ClientPlugin
Security.Client.Plugin[htpasswd][1.0]=org.xmlBlaster.authentication.plugins.htpasswd.ClientPlugin
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# List of all xmlBlaster access protocol drivers (I_Driver and I_Callback implementations)
# <protocol-type>:<driverClass>,<protocol-type>:<driverClass>,...
# For supported protocol types see xmlBlaster/src/java/org/xmlBlaster/protocol directory

# Switch on the CORBA, RMI and XML-RPC driver and the JDBC service:
Protocol.Drivers=IOR:org.xmlBlaster.protocol.corba.CorbaDriver,\
                 RMI:org.xmlBlaster.protocol.rmi.RmiDriver,\
                 XML-RPC:org.xmlBlaster.protocol.xmlrpc.XmlRpcDriver,\
                 JDBC:org.xmlBlaster.protocol.jdbc.JdbcDriver
Protocol.CallbackDrivers=IOR:org.xmlBlaster.protocol.corba.CallbackCorbaDriver,\
                         RMI:org.xmlBlaster.protocol.rmi.CallbackRmiDriver,\
                         XML-RPC:org.xmlBlaster.protocol.xmlrpc.CallbackXmlRpcDriver,\
                         JDBC:org.xmlBlaster.protocol.jdbc.CallbackJdbcDriver

# Example to switch on CORBA driver only:
#Protocol.Drivers=IOR:org.xmlBlaster.protocol.corba.CorbaDriver
#Protocol.CallbackDrivers=IOR:org.xmlBlaster.protocol.corba.CallbackCorbaDriver

# Enable the email callback driver (demo hack only):
#Protocol.CallbackDrivers=IOR:org.xmlBlaster.protocol.corba.CallbackCorbaDriver,\
#                         EMAIL:org.xmlBlaster.protocol.email.CallbackEmailDriver

# Switch on the demo native, CORBA, RMI and XML-RPC driver and the JDBC service:
#Protocol.Drivers=IOR:org.xmlBlaster.protocol.corba.CorbaDriver,\
#                 RMI:org.xmlBlaster.protocol.rmi.RmiDriver,\
#                 XML-RPC:org.xmlBlaster.protocol.xmlrpc.XmlRpcDriver,\
#                 JDBC:org.xmlBlaster.protocol.jdbc.JdbcDriver, \
#                 NativeDemo:org.xmlBlaster.protocol.nativ.NativeDriver
#Protocol.CallbackDrivers=IOR:org.xmlBlaster.protocol.corba.CallbackCorbaDriver,\
#                         RMI:org.xmlBlaster.protocol.rmi.CallbackRmiDriver,\
#                         XML-RPC:org.xmlBlaster.protocol.xmlrpc.CallbackXmlRpcDriver,\
#                         JDBC:org.xmlBlaster.protocol.jdbc.CallbackJdbcDriver, \
#                         NativeDemo:org.xmlBlaster.protocol.nativ.CallbackNativeDriver
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# List of all jdbc drivers to initalize for the XmlDBAdapter
JdbcDriver.drivers=sun.jdbc.odbc.JdbcOdbcDriver
#JdbcDriver.drivers=oracle.jdbc.driver.OracleDriver
#JdbcDriver.drivers=oracle.jdbc.driver.OracleDriver,org.gjt.mm.mysql.Driver,postgresql.Driver,de.sag.jdbc.adabasd.ADriver,sun.jdbc.odbc.JdbcOdbcDriver,com.sybase.jdbc2.jdbc.SybDriver
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# Adjust if you want to use the EMAIL plugin:
EmailDriver.smtpHost=localhost
EmailDriver.from=xmlblast@localhost
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# When an XmlBlasterException is thrown, log it to console
Log.exception=false

# Control logging output format (examples are provided below)
# <timestamp>:<levelStr>:<instance>:<text>
#
# Apr 29, 2000 4:43:35 PM:INFO :Main:Published AuthServer IOR on port 7609
LogFormat=[{0} {1} {2}] {3}
#LogFormat={0}:{1}:{2}:{3}
#
# Apr 29, 2000 5:36:21 PM INFO  Published AuthServer IOR on port 7609
#LogFormat={0} {1} {3}
#
# INFO :Published AuthServer IOR on port 7609
#LogFormat={1}:{3}
#
# Published AuthServer IOR on port 7609
#LogFormat={3}
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# How to format Date and Time in logging output
#
# Choose one of SHORT, MEDIUM, LONG, FULL
#   SHORT is completely numeric, such as 12.13.52 or 3:30pm 
#   MEDIUM is longer, such as Jan 12, 1952 
#   LONG is longer, such as January 12, 1952 or 3:30:32pm 
#   FULL is pretty completely specified, such as Tuesday, April 12, 1952 AD or 3:30:42pm PST. 
LogFormat.Date=MEDIUM
LogFormat.Time=MEDIUM

# Choose language - lowercase two-letter ISO-639 code.
# Choose country - uppercase two-letter ISO-3166 code
# Defaults to local computer setting
#LogFormat.Language=en
#LogFormat.Country=US

#LogFormat.Language=fr
#LogFormat.Country=FR

#LogFormat.Language=de
#LogFormat.Country=DE
#------------------------------------------------------------------------------


#------------------- Global setting for the persistence -----------------------
# FileDrivers are for the xmlBlaster persistence: 
#   org.xmlBlaster.engine.persistence.filestore.FileDriver (Filestore)
#   org.xmlBlaster.engine.persistence.mudb.MuDbDriver      (MessageUnit database)
#
# Lazy recover (not at server startup but on demand) is not yet supported.
Persistence.Driver=org.xmlBlaster.engine.persistence.filestore.FileDriver
Persistence.Path=${user.home}${file.separator}tmp
Persistence.LazyRecovery=true

#-------------------  Filestore database --------------------------------------
# at the moment 'nothing'.
#-------------------  MessageUnit database ------------------------------------
#
#   Setup your Cachesize in byte default is 2MB
#mudb.Cachesize=1000000
#
#   Setup max size of a message in byte default is 5kbyte
#mudb.Messagesize=100
#
#   Setup the Isolation Level. Overview on the possible lock modes:
#   The IsolationLevel "uncommitted" corresponds to the weakest level (0),
#   "serializable" to the strongest level (4).
#
#                  ANSI    Dirty   Non Repreatable  Phantom Read
#     LOCK                 Read    Read
#     ----------------------------------------------------------
#     UNCOMMITED    0       X           X               X
#     COMMITED      1       -           X               X
#     REPEATABLE    2       -           -               X
#     SERIALIZABLE  3       -           -               -
#
#   Example for UNCOMMITED:
#mudb.Isolationslevel=0
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# Any other custom properties can be added here. 
# These are available through the API e.g.
# String str = XmlBlasterProperty.get("MyApp.mykey", "defaultValue");
#------------------------------------------------------------------------------

