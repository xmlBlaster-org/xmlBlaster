Release notes for xmlBlaster @version@ (http://www.xmlBlaster.org)

Changes for x.xxx [xxx, xx xxxx]
================================

TODO:

* Compile next release with ant instead of Makefile as ant replaces
  version number and timestamp in util.Global.java
* Test message expiry lifecycle (some implementation is missing)
* Add support to reconnect to previous session again on reconnect
* PtP with session destination
* PtP in cluster environment
* RequestBroker.get() the return QoS should be merged with UpdateQos
* Test (implement?) forceUpdate=false with same content
* Remove thread save gap in RequestBroker:publish() for PtP messages
* Test: Perl client ...
* Security demo with Bit Cypher: http://www.alphaworks.ibm.com/tech/abc?open
* Change to Sun coding convention: http://checkstyle.sourceforge.net/
* Handle QueueProperty.java similar to CbQueueProprty.java in ConnectQos.java
* Implement cb.burstMode.collectTimeOneway
* Use XMLunit http://xmlunit.sourceforge.net/ in testsuite.
* XmlBlaster internal statistic overview with http://www.object-refinery.com/jfreechart/
* SMS protocol driver with http://www.imail.gr/jsmsengine/index.php
* Performance analysis with garbage collector http://wireless.java.sun.com/midp/articles/garbage/
  - Port to http://gongolo.usr.dsi.unimi.it/~vigna/fastUtil/?
  - Port to use Piccolo SAX parser ?
  - http://www.thoughtcrime.org/profiler.html
* Embeed RDBMS http://axion.tigris.org/features.html
* RMI-SOAP gateway: http://www.sys-con.com/java/articleprint.cfm?id=1479
  Or embeed SOAP: http://www.soapanywhere.org/saw/index.jsp
     (uses mixture of LGPL and APACHE)
* Use http://xdoclet.sourceforge.net/ for our xmlBlaster.war (web archive)

BUGS:

* PtP isDurable redelivery


Changes for 0.79dev [xxx, xx 200x]
==================================
  - Added proper logout on runlevel change to HALTED

  - New PHP demo client, see
      xmlBlaster/demo/php/xmlrpc/README

  - Updated Perl demo client, see
      xmlBlaster/demo/perl/xmlrpc/README

  - Changed to generate key oid without special characters which
    prevents oid to be used as file name, bug reported by
    Doug.Palmer@csiro.au

  - Fixed isVolatile() memory leak reported by liuwen@onewaveinc.com

  - Removed CLASSPATH settings from build.sh/build.bat
    They are now in build.xml

  - Bugfix in HtPasswd for "name starts with" mode.

  - Added JacORB1_3_30 bugfix in lib/jacorb.jar
    Patched JacORB1_3_30/lib/org/jacorb/orb/BasicAdapter\$Listener.class:
    Changed to if( address_string.indexOf( "/" ) >= 0 )
    to fix bug when IP has no DNS entry

  - Updated to use newest JUnit from cvs

  - Added new documentation (all are CLOSED), see
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/interface.update.html
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/interface.connect.html
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/interface.disconnect.html

  - Added clearSession QoS for disconnect() invocations
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/interface.disconnect.html

  - Added requirement describing message priorities
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/engine.qos.publish.priority.html
    
  - You can now suppress the initial update on subscribe
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/engine.qos.subscribe.initialUpdate.html

  - Added message erase events for subscribers, see
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/interface.update.html
    NOTE: You have to cope with different sorts of update messages
          now.

  - Bugfix for client side -hostname parameter.

  - Automatic detection of the local IP for dial in hosts
    with dynamic IP. In most cases you don't need to
    specify the callback server hostname any more.

  - Added <duplicateUpdates>true/false</duplicateUpdates> to ConnectQos
    This allows for multiple subscribes of one client sessions on
    the same me message to only receive on update.
    Defaults to true.
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/engine.qos.subscribe.duplicate.html

  - Added more administrative introspection properties:
    nodeId, version, buildTimestamp, buildJavaVendor, buildJavaVersion
    numNodes, nodeList etc.
    Parts of them are burned during compilation with ant/build.xml

  - Removed internal messages __sys__FreeMem, __sys__TotalMem and __sys__UsedMem
    Please use __cmd:?freeMem, __cmd:?totalMem and __cmd:?usedMem instead.


Changes for 0.79f [Jun, 17 2002]
================================

  - Added runlevel listener framework to allow switching between
    run levels like RUNNING, CLEANUP, STANDBY and HALTED
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/engine.runlevel.html
 
  - Multithreading publish() bug in RequestBroker.java fixed (with synchronize)
 
  - Added framework for xmlBlaster administration (SNMP/JMX/telnet/message based).
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/admin.html
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/admin.telnet.html
    http://www.xmlblaster.org/xmlBlaster/doc/requirements/admin.commands.html
 
  - Added full administration access from telnet on properties and
    xmlBlaster core attributes
    This is based on remotecons.jar 1.0
    See http://wttools.sourceforge.net/ and
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/admin.telnet.html

  - Changed default security plugin from 'simple' to Cyrilles 'htpasswd'
    http://www.xmlBlaster.org/xmlBlaster/src/java/org/xmlBlaster/authentication/plugins/htpasswd/README
 
    HtPassWd is now extended to accept partial usernames. e.g. if the passwordsfile contains
     "Username", HtPassWd also accepts "User". Additionally if the passwordfile just contains
     "*" any username and password is accepted [Andreas Stelzl]
 
  - Added support for dirty reads in clusters
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/cluster.dirtyRead.html
 
  - Added support for filtering published messages
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/mime.plugin.publishfilter.html
 
  - You can automatically build an xmlBlaster distribution, see:
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/admin.deploy.html

  - Added support to ping the callback client side server, see
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.callback.html

  - Rewritten callback handling

  - PtP bugfix if a client disappears silently

  - Added invocation recorder plugin framework to queue
    messages on client side on failure:
    1. RamRecorder.java
    2. FileRecorder.java
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/util.recorder.html

  - Bugfix for similar XPath subscriptions of many clients

  - Bugfix for volatile message deletion with multiple subscribers

  - Sepcific logging, examples:
    -trace[cluster] true   Trace cluster
    -trace[mime] true      Trace mime plugins
    -call[core] true       Show function calls in core
    -dump[corba] true      Dump message sent/received by corba plugin

  - XmlBlasterProperty is deprecated to use directly, use Global instead:
      glob.getProperty().get("myProp", "defaultVal");
    Added Global argument to many classes, but you can access
    the first Global instance with:
      Global glob = Global.instance();

  - Log.java is deprecated to use directly, use Global with LogChannel instead:
      glob.getProperty().getLog("corba").warn("X", "Y");

  - Testsuite: Ported from Junit 1.0 to Junit 3.7

  - Splitted PropertyQueue class to handle client connect queue
    and server callback queue

  - The generated key oid now contains the node id

  - The default boot strap port is now 3412,
    the IANA assigned xmlblaster port.
    XmlBlaster listens with its tiny internal
    http server on 3412 to deliver the CORBA IOR
    and in future other informations.
    Port 7609 is not used as a default any more.

  - Server internal changes:
    Tuned performance for internal messages

  - Changed subscriptionId to contain a prefix
 
  - Changed (bugfix?) message erase behavior: When a message
    is deleted, the subscribe on it is not destroyed but placed as
    a reservation.

  - Added support to unSubscribe not only with subscribeId but
    with the key-oid as well

  - Added basic cluster support, see
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/cluster.html

  - Extended C++ compile support with build.xml and ant,
    runs fine on Linux/gcc, needs to be adapted on Windows

  - Bugfix:
    The persistent http servlet is now fully configurable with web.xml

  - Bugfix:
    The startup options "-logFile x.log -logConsole false" work again

  - Bugfix:
    The internal logged in user "__user..." have now unlimited session
    timeouts.

  - Bugfix:
    In the XmlBlaster GUI the XPath query failed (login is not supported any more)
    since 0.79e, this is fixed now

  - Renamed SubscribeFilter to AccessFilter
    Renamed SubscribePluginManager to AccessPluginManager
    Added filter support to get() QoS

  - Changed C++ client to use as a default the newest
    mico 2.3.7 and xerces 1.7.0
    Removed 'loginName' parameter in update() method

  - A get() which doesn't find a message returns now a MessageUnit[]
    of length 0.
    In older releases there was thrown an XmlBlasterException.

  - Changed behaviour for java client method disconnect()
    disconnect now shutdown the protocol driver and callback server as well.
    See javadoc API of XmlBlasterConnection.

  - Incompatible changes:
    ---------------------
    * publish() returns now XML string instead of the plain oid
      Introduced PublishRetQos, see
      http://www.xmlBlaster.org/xmlBlaster/doc/requirements/interface.publish.html

    * Incompatible change of ConnectQos:
      The constructor expects now a Global instance as the
      first argument (you can pass null).

    * Incompatible change of command line options:
      -client.failSave.retryInterval   ->  -delay
      -client.failSave.pingInterval    ->  -pingInterval
      -client.failSave.retries         ->  -retries
      -client.failSave.maxInvocations  ->  -queue.maxMsg
      -client.publishOneway.collectTime->  -burstMode.collectTimeOneway

    * Incompatible change:
      Removed XmlKeyBase.java, use XmlKey.java instead
      XmlKeyBase.DEFAULT_contentMimeExtended -> Constants.DEFAULT_CONTENT_MIME_EXTENDED

    * Incompatible change of file name:
      UpdateQoS.java -> UpdateQos.java

    * Incompatible change of command line options:
      -iorHost  ->  -hostname
      -iorPort  ->  -port
      -iorFile  ->  -ior.file
 
    * Incompatible change of QoS returns:
      Old: "<qos><state>OK</state></qos>"
      New: "<qos><state id="OK"/></qos>"
   

Changes for 0.79e [Mar, 27 2002]
================================

  - SOCKET protocol driver performance tune:
    Using now read() and write() with large buffer
    See xmlBlaster/src/java/org/xmlBlaster/protocol/socket/Parser.java

  - Added client side burst mode for publishOneway
    in java client helper classes.
    See -client.publishOneway.collectTime 500

  - Extended Perl support (from Cyrille)

  - RMI and XmlRpc interface changes.
    see CORBA changes in
    xmlBlaster/src/java/org/xmlBlaster/protocol/corba/xmlBlaster.idl

  - CORBA changes in xmlBlaster.idl
    (xmlBlaster/src/java/org/xmlBlaster/protocol/corba/xmlBlaster.idl)
    
    The xmlBlaster server:
     Added:
       oneway void publishOneway(in MessageUnitArr msgUnitArr);
       string ping(in string qos);
     Removed:
       boolean ping()
  
    The authentication server:
     Added:
       string ping(in string qos);
  
    The callback server:
     Added:
       oneway void updateOneway(in string sessionId, in serverIdl::MessageUnitArr msgUnitArr);
       string ping(in string qos);
     Changed:
       The update() is changed to receive a cbSessionId and to return a String[]
       It may throw an exception now, since it is not oneway anymore.

  - Java client helper classes:
    The update() method changed incompatible !!
    * The first argument now returns the callback sessionId.
      This is the id you passed on registering your callback server
      and allows you to authenticate the callback invoker.
    * You need to return a QoS string in this version.
      For the time being just return an empty String "" (not null).

  - Changes to Java client library. We now support separate
    instantiation of callback protocol drivers and client drivers.
    See: xmlBlaster/testsuite/org/xmlBlaster/TestCorbaThreads.java
         for an example.

  - Added a framework to add your own MIME based plugins to filter subscriptions
    Please read
       http://www.xmlblaster.org/xmlBlaster/doc/requirements/mime.plugin.subscribe.html
    to find out what this is about (it contains a nice picture)
    and
       http://www.xmlblaster.org/xmlBlaster/doc/requirements/mime.plugin.subscribe.howto.html
    how to code your own plugin. 

  - For PtP messages <forceQueuing> is now an
    attribute of <destination forceQueuing='true'>

  - For PtP messages <forceUpdate> defaults now to true

  - Added support for dead letters on failure
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.qos.login.session.html

  - Added support for multiple sessions per client.
    A user may now login multiple times with the same login name.
    The different login sessions are timeout controlled, see
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.qos.login.session.html

  - Added support for sophisticated queueing, priority messages,
    guaranteed sequence, burst mode (sending messages in a bulk)
    and much more, see:
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.queue.html
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.callback.html
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.message.html

  - PublisQosWrapper, setting boolean values require a parameter now:
    setReadonly()    -> setReadonly(true)
    setForceUpdate() -> setForceUpdate(true)

  - Change get() and subscribe() QoS:
    <noMeta/>    to <meta>false</meta>
    <noContent/> to <content>false</content>
    <noLocal/>   to <local>false</local>
    Constructor of SubscribeQosWrapper() is inverted!
    Constructor of GetQosWrapper() is inverted!

  - New high performing Timestamp supporting unique message timestamps
    with simulated nanoseconds

  - Behavior change [Ruff]:
    <forceUpdate> defaults now to true

  - Changed subscribe() return value to be always a unique subscription ID
    (thanks to Wolfgang Kleinertz)

  - IANA has assigned following ports for us:
      xmlblaster      3412/tcp                        # xmlBlaster
      xmlblaster      3412/udp                        # xmlBlaster
    The contacts are:
      Michelle S. Cotton
      IANA Administrator
      Internet Assigned Numbers Authority (IANA)
      4676 Admiralty Way, Suite 330
      Marina del Rey, California 90292
      Voice: (310) 823-9358
      FAX:   (310) 823-8649
      email: iana@iana.org

  - Heinrich has made the plugin interface more generic.
    See xmlBlaster/src/java/org/xmlBlaster/util/I_Plugin.java

  - Native XML persistence support added.
    Heinrich has added Xindice (a native XML DB) support as persistence
    layer of xmlBlaster.
    See xmlBlaster/src/java/org/xmlBlaster/engine/persistence/xmldb/README

  - build.sh and build.bat have new targets:
       build.sh dist          (collect xmlblaster server files)
       build.sh dist-client   (collects java client classes in xmlBlasterClient.jar,
                               with many variants)
       build.sh cpp-lib       (builds a C++ client shared library or dll)
       build.sh cpp-test      (compiles/links C++ CORBA clients)
    Try
       build.sh usage
    to see all possible options.

  - Behavior change [Juergen Freidling]:
    xmlBlaster now respects multiple subscriptions
    on the same message, and will deliver this message multiple times
    to the same client.

  - Bugfixed jutils.jar added:
    * Removed JDBC pool code (does not compile with JDK 1.4)
    * Bugfix for xmlBlaster.properties file in CLASSPATH

  - Added complete demo code how to access xmlBlaster
    from C using XmlRpc
         Read xmlBlaster/demo/c/xmlrpc/README

  - Added OS independend C++ compile support with ant
    TODO: Adapt to run on Windows as well.

  - Reduced necessary environment settings to
      JAVA_HOME=<pathToJdk>
      CLASSPATH=<xmlBlaster>/lib/xmlBlaster.jar


Changes for 0.79d [Dec, 30 2001]
================================

  - CORBA/C++ client helper classes now support http IOR download, e.g.:
       TestGet -iorHost myHost -iorPort 7609

  - Changed/Enhanced property file lookup for C++ clients
    see xmlBlaster/src/c++/util/Property.h

  - Changed to support security QoS tags for login() method
    Performance changes to avoid double qos parsing of connect QoS
    (bug reported by Cyrille, again keeping me busy :-)

  - Added SVG sample code for persistent http callback, see

      demo/http/svg/systemInfo

  - Ported persistent http callback framework to tomcat 3.2.4, use

      build.sh deploy_war

  - Added C++ support in build.xml, to compile the
    xmlBlaster C++ client helper shared library (so, sl, dll) type:

       build.sh cpp-lib

  - Changed C++ file extension .cc to .cpp
    Holger Lehn ported C++ clients to Windows using stlport library

  - Added a message receive timestamp in update QoS, see:
    http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.qos.update.rcvTimestamp.html
    The feature is not yet used by the server.

  - Bugfix when interpreting command line option -xmlrpc.hostname

  - The C++ client helper classes are now collected into a
    shared library, on Linux e.g.
       xmlBlaster/lib/libxmlBlasterClient.so
    The new C++ namespace is
       org::xmlBlaster

  - Added an email callback plugin (protocol="EMAIL").
    This allows callbacks to be send using email instead e.g. CORBA
    See xmlBlaster/demo/javaclients/email/README

  - New 'passwd' style Security Plugin from Cyrille Giquello, see

      xmlBlaster/src/java/org/xmlBlaster> cd authentication/plugins/htpasswd/README

  - Added Update QoS element <queue> with queue informations
    (Thanks to Cyrille)

  - UpdateQos and UpdateKey: Renamed printOn() to toXml()

  - Added default corbaloc to xmlBlaster server and naming service
    This allows connecting to a local naming service without configuration

  - Corrected shell scripts in xmlBlaster/bin directory
    to reflect the new JacORB package names

  - Added a LDAP security plugin, please follow
    instrutions in 

      xmlBlaster/src/java/org/xmlBlaster/authentication/plugins/ldap/README
      
    to test it. It is quite simple.
     

Changes for 0.79c [Sep, 05 2001]
================================

 - Remove your old xmlBlaster.properties, jacorb.properties
   and orb.properties files.
   Use the new files from directory xmlBlaster/config
   if wanted.

 - Backward compatibility:
   * Clients accessing xmlBlaster directly (C++,Python,Perl)
     will run with old xmlBlaster servers.
   * Clients using the Java helper classes will only connect
     to the new xmlBlaster 0.79c, since these classes
     use the new security plugin.

 - Changed <noPtP/> to <ptp>false</ptp>

 - Ported to JacORB 1.3.30
   NOTE: You need to copy the new
      config/jacorb.properties.template
     to
      $HOME/jacorb.properties
     If you use orb.properties, please install the new
      config/orb.properties

 - Extended Java client helper class XmlBlasterConnection
   to allow dispatching callback messages.
   Every subcription may specify its dedicated callback handle.
   See xmlBlaster/demo/javaclients/ClientSubDispatch.java as
   an example.

 - Added Authentication and Authorization framework by Wolfgang Kleinertz

   xmlBlaster.idl has changed, new methods connect() and disconnect()
   as counterpart to login() and logout()

   Please copy the modified config/xmlBlaster.properties.template
   to $HOME/xmlBlaster.properties

   In xmlBlaster.properties uncomment the line
      Security.Client.DefaultPlugin=gui,1.0
   and start for example "java javaclients.ClientSub" to see xmlBlaster
   with GUI based manual authentication/authorization.

   To study raw CORBA access with the new security plugin see
      xmlBlaster/demo/javaclients/corba/ClientRawSecurity.java

 - Changed XML-RPC 'void' method return values to return
   an 'empty string', since 'void' is not supported in the
   XML-RPC spec.
   Bug reported by Cyrille Giquello <cyrille@ktaland.com>

 - Added qos support for get() responses, for example:
   <qos>
     <state>
       OK
     </state>
     <sender>
       Tim
     </sender>
   </qos>

 - Fixed C++ testclients in xmlBlaster/testsuite/c++

 - It is now possible to query the current logged in users
   by "__sys__UserList"
   Feature added by "Gilles Lavaux" <gilles.lavaux@esrin.esa.it>

 - KNOWN BUGS:
   * The "simple" security plugin is needed for the JDBC driver to login.
     This will be changed in a future release.

Changes for 0.79b [March, 11 2001]
==================================

 - Bugfix with Base64 support in xmlrpc (thanks to Nikolai Devereaux)

 - J2EE support added by Peter Antman
   See: xmlBlaster/src/java/org/xmlBlaster/j2ee/k2/README
   See: xmlBlaster/demo/javaclients/j2ee/k2
   New jars for J2EE support:
   connector.jar jaas.jar jta-spec1_0_1.jar
   jms.jar ejb2.0.jar jndi-jdk1_3_1.jar
   (The jndi jar is needed for JDK 1.2 only)

 - Added support for volatile messages (thanks to Peter Antman).
   A volatile messages exists only during publish and processing it (doing the updates).
   A non-volatile messages (which is default) stays in memory as long as the server runs.

 - erase() now reports the correct number of erased messages
   if some of the messages did not exist.

 - Change of behaviour (thanks to Stefan Nickisch):
   If a callback to a client fails, the subscription will be
   automatically canceled for this client.

 - Integrated JacORB CORBA release 1.3.11
   Please copy the new xmlBlaster/config/jacorb.properties.template
   to $HOME/jacorb.properties (replacing the old one).

 - Added _release() calls to avoid JacORB memory leak on shutdown()

 - Bug fixed in JDBC adapter, NullPointerException because of
   missing namespace (thanks to Juergen Freidling).

 - Subscribe Bug fixed (reported by Stefan Nickisch)
   If a subscriber crashes without logout, this will disturb all other
   subscribers.
   No more communication is possible until the crashed subscriber will log on
   again.

 - Added proper RMI server and callback server shutdown

 - Renamed servlet-2.0.jar to servlet.jar

 - Added a simple Python hello world demo,
   see xmlBlaster/demo/python/README

 - Messages from the persistent store now deliver the correct
   sender name, the unique login name of the publisher.
   Thanks to Suhas Bharambe for reporting the bug.

 - Persistent Db integration (code, but no release).

 - Changed to JAXP and DOM2 Sun/crimson XML parser
   jaxp-1.1ea2 from SUN, DOM2 SAX2

 - Changed code to conform to SAX2

 - Login QoS has no <noPtP> element anymore, this is set
   for each CallbackAddress from now on, e.g.:
     <callback type='IOR'>
        http:/www.mars.universe:8080/RPC2
        <PtP>false</PtP> <!-- Set this flag if you don't want to receive any PtP messages -->
                         <!-- prevents 'spamming' -->
     </callback>


Changes for 0.79a [Nov, 16 2000]
================================

 - xmlBlaster license change to 'pure' LGPL

 - JacORB as CORBA default:
   Setting default System properties to
     org.omg.CORBA.ORBClass=org.jacorb.orb.ORB
     org.omg.CORBA.ORBSingletonClass=org.jacorb.orb.ORBSingleton
   in our CORBA drivers (if not set differently from environment).

 - Severe bugfix with CORBA POA sessionId.
   This bug caused sometimes the POA sessionId to be not unique,
   causing a subsecquent login to auto logout another client.

 - FileDriver is switched on as default (persistent store).
   You need to replace your xmlBlaster.properties
   with the new xmlBlaster.properties.template or set
   Persistence.LazyRecovery=true

 - Several smaller fixes.


Changes for 0.79 [Nov, 3 2000]
==============================
  - Bugfix for CORBA client/server running on multi homed hosts:
       java -DOAIAddr=198.197.24.129 javaclients.chat.SimpleChat
    for example forces the chat corba-callback server to use
    the given ip address.
       java -DOAIAddr=198.197.24.129 org.xmlBlaster.Main
    forces xmlBlaster to use the given address.
    xmlBlaster/lib/jacorb.jar is patched (see lib/README).

  - NOTE: CorbaConnection.java removed, please use
    XmlBlasterConnection.java instead.
    This allows to switch the used protocol (IOR,RMI,XML-RPC)
    on command line without recompilation.
    For coding example see demo/javaclients/ClientSub.java
    To switch protocol use the -client.protocol command line option.
    Example:
      jaco javaclients.ClientSub -client.protocol IOR
      jaco javaclients.ClientSub -client.protocol RMI
      jaco javaclients.ClientSub -client.protocol XML-RPC

  - NOTE: You need to use the new xmlBlaster.properties file.
    Remove your old in your HOME directory and use the
    new template from xmlBlaster/config as a base.

  - NOTE: JDK_HOME is not used anymore, use JAVA_HOME instead.

  - NOTE: You need to replace
       import org.xmlBlaster.client.CorbaConnection;
    with
       import org.xmlBlaster.client.protocol.XmlBlasterConnection;
    if you have used this class in your java clients.
    Then replace all occurrences of
       CorbaConnection
    with
       XmlBlasterConnection
    The login() method has changed to return void.

  - The built in http IOR download server is now more close
    to HTTP 1.1 spec RFC 2068

  - New command line argument added to xmlBlaster server:
    -iorHost <host>
    allows to specify where the internal http server publishes
    its bootstrapping IOR (for multi homed hosts).

  - build.xml:  Target 'all' collects demo and testuite classes
    into xmlBlaster.jar as well.

  - NEW: Easy installation: Ready to go in 30 seconds!
    Added customized MANIFEST to xmlBlaster.jar, allowing
    to start xmlBlaster without any CLASSPATH setting:
       java -jar lib/xmlBlaster.jar
    See INSTALL file.

  - RMI driver looks for xmlBlaster.polcy now in CLASSPATH as well, e.g.
       export CLASSPATH=$CLASSPATH:$XMLBLASTER_HOME/config
    whith $XMLBLASTER_HOME/config/xmlBlaster.policy

  - Migrated to XML-RPC java.1.0_beta_4

  - Migrated to Ant 1.2

  - Migrated to JacORB 1.2.2

  - Changed package for FileDriver, modify xmlBlaster.properties to
      Persistence.Driver=org.xmlBlaster.engine.persistence.filestore.FileDriver

  - Changed logging to use jutils Log classes
    NOTE: you need to change in your code:
       import org.jutils.log.Log;
    to
       import org.xmlBlaster.util.Log;

  - Michele completed xml-rpc support

  - Moved xmlBlaster.properties.template to config directory

  - Moved jacorb.properties.template to config directory

  - Moved orb.properties to config directory

Changes for 0.78 [Jul, 14 2000]
==============================
  - Added generic database access from James to xmlBlaster core.
    The JDBC gateway uses now the native interface to xmlBlaster.
    Added advanced JDBC connection pooling. Every user has
    its own pool, allowing heavy load server simultaneous
    database access (thread save).
    See online requirements for more informations/examples:
       http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.service.rdbms.html
       http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.service.rdbms.jdbcpool.html

  - Michele Laghi added complete C++ client support for MICO and ORBacus.
    He implemented all necessary C++ client helper classes for easy and cool
    xmlBlaster access.

  - Moved xmlBlaster/src/idl/xmlBlaster.idl to directory
    xmlBlaster/src/java/org/xmlBlaster/protocol/corba/xmlBlaster.idl

  - Changed package names:
    org.xmlBlaster.engine.persistence.I_PersistenceDriver -> org.xmlBlaster.engine.I_PersistenceDriver
    org.xmlBlaster.engine.persistence.FileDriver          -> org.xmlBlaster.engine.FileDriver
    org.xmlBlaster.util.MessageUnit                       -> org.xmlBlaster.engine.helper.MessageUnit
    org.xmlBlaster.util.Destination                       -> org.xmlBlaster.engine.helper.Destination
    org.xmlBlaster.util.CallbackAddress                   -> org.xmlBlaster.engine.helper.CallbackAddress
    NOTE: You need to replace your xmlBlaster.properties
    with the new xmlBlaster.properties.template!

  - Changed classes:
    MessageUnit now contains the qos
    MessageUnitContainer is removed.
    Note that there is a CORBA MessageUnit and a engine.helper.MessageUnit
    class (same name, same members).

  - xmlBlaster.properties allows variables ${...} replacement.
    see util.property.args.xml, util.property.env.xml, util.property.xml
    NOTE: You need to replace your xmlBlaster.properties
    with the new xmlBlaster.properties.template!

  - The "+" for command line options (e.g. +trace) is not supported
    any more, use for example '-trace true' instead.

  - There is now RMI support for xmlBlaster available.
    The Servers are in
       xmlBlaster/src/java/org/xmlBlaster/protocol/rmi
    A simple demo client is in
       xmlBlaster/demo/javaclients/rmi
    Read the INSTALL file about how to use RMI support.
    This is an alpha release, no test suite etc. yet.
    The reason for RMI support is a future support
    of JINI (which is based on RMI).
    The Discovery and Lookup of Jini are very fault tolerant
    and could be a base for xmlBlaster replication,
    load balancing and master/slave operation.

  - Added XmlBlasterException.java in org.xmlBlaster.util package.
    This allows Corba independend Exception handling.
    The xmlBlaster.idl defined XmlBlasterException
    is not removed and still resides in package
       org.xmlBlaster.protocol.corba.serverIdl
    NOTE: You need to change the package of XmlBlasterException
    in your code as well (if not thrown from Corba).

  - Added new package org.jutils to the xmlBlaster distribution.
    This replaces org.xmlBlaster.util over the time.
    You need to set the environment variable JUTILS_HOME to:
      export JUTILS_HOME=${XMLBLASTER_HOME}
    Changed package names:
       org.xmlBlaster.util.Log          -> org.jutils.log.Log
       org.xmlBlaster.util.FileUtil     -> org.jutils.io.FileUtil
       org.xmlBlaster.util.Queue        -> org.jutils.collection.Queue
       org.xmlBlaster.util.Args         -> org.jutils.init.Args
       org.xmlBlaster.util.Property     -> org.jutils.init.Property
       org.xmlBlaster.util.Memory       -> org.jutils.runtime.Memory
       org.xmlBlaster.util.StringHelper -> org.jutils.text.StringHelper
       org.xmlBlaster.util.StopWatch    -> org.jutils.time.StopWatch
       org.xmlBlaster.util.Timeout      -> org.jutils.time.Timeout
    rm Args.java FileUtil.java LogListener.java Log.java Memory.java Property.java Queue.java StopWatch.java StringHelper.java

  - Compiled successfully xmlBlaster with JDK 1.3 for Linux.
    Performance enhancment for CORBA access ~ 80%

  - Compiled successfully xmlBlaster with TowerJ native compiler.
    Performance enhancment for CORBA access ~ 30%
    See .bashrc for used settings

  - Added protocol plugin possibility in xmlBlaster.properties
    Default settings are Corba drivers, example for RMI is provided as well:
      #------------------------------------------------------------------------------
      # List of all xmlBlaster access protocol drivers (I_Driver and I_Callback implementations)
      # <protocol-type>:<driverClass>,<protocl-type>:<driverClass>,...
      # For protocol types see I_Driver.java
      Protocol.Drivers=IOR:org.xmlBlaster.protocol.corba.CorbaDriver
      Protocol.CallbackDrivers=IOR:org.xmlBlaster.protocol.corba.CallbackCorbaDriver

  - Added native interface for xmlBlaster: I_XmlBlaster.
    All plugged in protocol drivers need to use this interface.
    The authentication is checked there in a controlled way.

  - The package org.xmlBlaster.authenticate is now CORBA independend.
    It uses or generates a unique sessionId string to track a login session
    of a user. This allows easier integration of other
    protocols like xml-rpc.

  - Bug fix in PoolManager.erase() method

  - ClientConnection: removed deprecated logout(server)
                      Added killPing() in logout()

Changes for 0.77 [Jun, 3 2000]
===============================
  - Bugfix in Main - MainGUI swapping and log WARN toggle.

  - browser callback enhancement:
    It is now possible to pass the login name and the password
    through the session object of the servlet (cookie).
    This allows you to use your own authentication.
    See client.browser.xml requirement how to do it.

  - Bugfix for XPath subscription match errors.
    Thanks to "Brett Palmer" <plum001@hotmail.com>
    for finding and describing this bug.

  - Stripped from jacorb.jar unneeded classes.
    This reduces the size from 3.7 MB to 2.3 MB.

  - Bug work around for thread leak: The thread leak from
    JacORB 1.1 is for the bug being fixed in CorbaConnection.java

  - Bugfix in CorbaConnection.java: Cleanup for Callback server added.

  - Changed XML parser to jaxp 1.0.1 and added servlet support
    to xtdash.jar (from original xt.jar).
    NOTE: You need to remove xml.jar from your CLASSPATH and
    add jaxp.jar and parser.jar (see xmlBlaster/lib directory)

  - Changed xmlBlaster.idl
    from
       login(in string loginName, in string passwd,
                  in clientIdl::BlasterCallback cb,
                  in serverIdl::XmlType qos)
    to
       login(in string loginName, in string passwd,
                  in serverIdl::XmlType qos)
    The callback protocol and address is now passed using
    the xml based qos.
    NOTE: You need to change your client code as well!
    See requirement engine.qos.login.callback

  - CORBA implementors other than JACORB and MICO can now be used. ORBACUS
    can work for the xmlBlaster server, java clients and c++ clients. You
    need OB-4.0b3 (for c++) and JOB-4.0b3 (for Java) or higher. You can
    find more about ORBACUS at http://www.ooc.com.

  - Persistent browser callback bugfixes
    * Added proper logout
    * Fixed security hole
    * Added support to set system properties through initArgs
    * Removed memory leak
    * Added ping/pong, to allow servlet to detect a lost browser


Changes for 0.76 [May.8, 2000]
===============================
        - Added a client cache to CorbaConnection class, allowing
          clients cheap synchronous polling for a message (Java only).
          See xmlBlaster/doc/requirements/client.cache.xml

        - Added demo for http browser callback without closing the http
          connection.
          See
            xmlBlaster/doc/requirements/client.browser.xml
            xmlBlaster/demo/html/systemInfo
            xmlBlaster/src/java/org/xmlBlaster/protocol/http
          and online:
            http://www.xmlBlaster.org/systemInfo/systemInfo.html?ActionType=login&loginName=karl&passwd=secret

          Netscape 4.x on Linux/HPUX/Win and
          Netscape 4.7 / MSIE 5 on WinNT and Win98
          runs fine.

        - Bugfixes (especially memory leak fixed) in browser
          callback framework.

        - Logging output can now be customized.
          You can choose the Date and Time formatting and the
          language and country.
          The amount of logging information is adjustable as well.
          Example:
        "Saturday, April 29, 2000 7:05:49 PM GMT+02:00 INFO Published AuthServer IOR on port 7609"
          or    in french:
        "samedi 29 avril 2000 19 h 06 GMT+02:00 INFO Published AuthServer IOR on port 7609"
          or    in short form german:
        "29.04.00 19:07 INFO Published AuthServer IOR on port 7609"
          or    minimal:
        "Published AuthServer IOR on port 7609"
          See xmlBlaster.properties.template    how to use it.

        - Bugfix when logging to file with missing permissions in Util.java
          The bug resulted in a never ending    loop.

        - xmlBlaster.properties can now be placed in    'java.home' directory
          as    well (this is for example /opt/jdk1.2.2/jre/lib).
          This feature may be helpful if you    want to start a deamon
          or    a servlet which has no home directory.
          See org.xmlBlaster.util.Property for more informations

        - xmlBlaster now uses the new JacORB 1.1 with SSL support

        - .jacorb_properties is renamed to jacorb.properties
          YOU NEED TO REMOVE YOUR $HOME/.jacorb_properties and
          configure $HOME/jacorb.properties
          Use the xmlBlaster/jacorb.properties.template as a base

        - Peter added the sweet rainbow fish to our control panel

        - Enhancements with browser callback framework

        - XmlKey.getContentMimeExtended() now returns "" (empty string)
          as    default fallback. Before the default was null.
          This is smarter when used in XSL style sheets.

Changes for 0.75 [Mar.28, 2000]
===============================

        - Konrad completed the fabulous Browser callback framework!
          And it works incredible well.
          Browsers get instant callback updates from xmlBlaster messages
          through a persistent http connection.
          It supports many feature like browser pinging, slow
          browser queuing etc.
          Konrad will write a little tutorial in the next week.
          See xmlBlaster/src/java/org/xmlBlaster/protocol/http
          See xmlBlaster/doc/http/BlasterHttpProxy.gif

        - Added little tool which allows to subscribe
          from command line for a message (for testing/debugging).
          See xmlBlaster/src/java/org/xmlBlaster/client/reader/README

        - Added two internal messages with key oid="__sys__Login"
          and key oid="__sys__Logout"
          You may subscribe on those messages if you want to be informed
          about other client which login or logout

        - Added a xmlBlaster reference handbook to xmlBlaster.org
          This page is generated from the requirement XML files in the
          xmlBlaster/doc/requirements directory of the distribution.
          It is available on our homepage in the 'Doc' section.

        - Bugfix if the Callback of a PtP receiver is disappeared,
          this usually happens when the receiver crashes without a logout.
          Now the XmlBlasterException with e.id="CallbackFailed" is thrown
          to the sender,  and the message is queued for the receiver
          if the qos flag <ForceQueuing> was set.

        - Allow clients to ping xmlBlaster, to test reliable the connection.
          The xmlBlaster.idl was extended with a ping() method.
          Java clients may use CorbaConnection.java to automatically test
          ping the connection.

        - Added <qos> tag <subscriptionId> for update messages.
          This allows the client to find out which of his subscriptions
          caused this update.

        - Added <qos> tag <state> for update messages.
          This is not finished, it always shows OK for the moment.

        - Command line parameters (args) and xmlBlaster.property file entries are
          merged. The 'args' overwrite the property file variables.
          Every xmlBlaster.property variable may as well be specified on
          command line. The leading "-" or "+" from the command line    key is
          stripped before it    is merged into the properties hash table.
          For example, the "-ior.file" command line argument corresponds to the
          "ior.file" variable    in the xmlBlaster.properties file.
          See Property.java


Changes for 0.74 [Feb.29, 2000]
==============================
        - New XML based requirements framework.
          See xmlBlaster/doc/requirements

        - 'Fail save' client connection for Java clients added.
          Clients begin polling and automatic local recording of messages
          if xmlBlaster server disappears.
          See CorbaConnection.java

        - C++ POA demo client added [Michele]
          See xmlBlaster/testsuite/c++

        - Recorder to record/playback of messages in slow/fast motion added.
          See InvocationRecorder.java

        - CorbaConnection: logout(boolean) deprecated -> use logout() now.

        - Changed xmlBlaster.idl: messageUnit    -> msgUnit
                                  messageUnitArr -> msgUnitArr
          Case does not matter, IDL is case-insensitive when detecting name clashes.
          (Thanks to Michele Laghi)

        - Added a guide line for xmlBLaster core developer.
          See xmlBlaster/doc/developer-guidelines.html

        - Set up xmlBLaster to use Ant as it's build system [James]

        - Added the revolutionary XML based JDBC database gateway. [James]
          see xmlBlaster/src/java/org/xmlBlaster/protocol/jdbc
          see xmlBlaster/demo/javaclients/jdbc

        - Added servlet - browser callback framework (not yet finished)
          see xmlBlaster/src/java/org/xmlBlaster/protocol/http


Changes for 0.73 [Feb.20, 2000]
==============================
        - Use the -P    option to check out, so old directories won't show up any more:
          cvs checkout -P xmlBlaster

        - Migrated to JacORB 1.0 beta 15

        - Reorganized package structure
          org.xmlBlaster.authenticateIdl  ->    org.xmlBlaster.protocol.corba.authenticateIdl
          org.xmlBlaster.serverIdl        -> org.xmlBlaster.protocol.corba.serverIdl
          org.xmlBlaster.clientIdl        -> org.xmlBlaster.protocol.corba.clientIdl
          org.xmlBlaster.client.filestore ->    org.xmlBlaster.protocol.corba.client.feeder
          org.xmlBlaster.engine.xml2java  ->    new added

        - Improved client / server connection negotiation (IOR bootstrapping)

        - Introduced DocBook schema
          Documentation is written in xml, and converted
          to html/pdf etc. with XSL style sheets.
          See example in xmlBlaster/doc/whitepaper/README

        - Further minor changes (see cvs log or cvsweb if you really want to know it)


Changes for 0.72 [Feb.1, 2000]
==============================

        - Support for new QoS tag <ForceQueuing /> in PtP style.
          * Without this flag, a message published to a client which is not
                 logged in throws an exception.
          * Using this flag, the message will be queued by xmlBlaster
                 until the client logs in. On login, all queued messages
                 are sent to the client immediately.

        - Added some simple console input mode, to control xmlBlaster
          Type <?> and <Enter> when xmlBlaster is running to get help.

        - Extended control panel GUI to support
          * dumping of xmlBlaster internal state
          * clearing the logging window
          * toggle from control panel GUI to console mode and back again

        - Bug fixed for subscribe with oid and later publish of this message.
          The BigXmlDom was not updated properly.

        - Added support for <qos><Readonly /></qos>,
          where only the first publish is accepted.

        - Added logging redirection to file,
          use on command line "-?" to query possible parameters.

        - Bug fixed for multiple login (without logout) and PtP messages.

        - Bug fixed for multiple <isDurable> messages.

        - Added missing FileDriver.erase().

        - Two bug fixes with    unSubscribe() calls for previous XPATH subscriptions.


Changes for 0.71 [Jan.20 2000]
==============================

        - Added the incredible MOM slide show, see http://www.xmlBlaster.org

        - Added SubscribeKeyWrapper.java SubscribeQosWrapper.java as client helper
          to help to hide raw XML ASCII strings

        - Added simple persistent store (file based)
          Needs to be configured in $HOME/xmlBlaster.properties

        - Added a xmlBlaster.properties file (should be placed into $HOME).
          see xmlBlaster/xmlBlaster.properties.template as a base to start with

        - Renamed file names from ...QoS... to ...Qos...

        - Added a file feeder PublishFile.java (publishes files as message to xmlBlaster)

        - Added some help to xmlBlaster/doc/programming-guide.lyx (still ugly)

        - Added usage text, invoke at command line with -? option

        - Small changes here and there

