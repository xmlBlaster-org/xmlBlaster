Release notes for xmlBlaster    (http://www.xmlBlaster.org)

Changes for 0.xx [xx, xx 2001]
==============================
 - Added Authentication and Authorization framework by Wolfgang Kleinertz

   xmlBlaster.idl has changed, new methods init() and disconnect()
   as counterpart to login() and logout()

   Please copy the modified config/xmlBlaster.properties.template
   to $HOME/xmlBlaster.properties

   In xmlBlaster.properties uncomment the lines
      Security.Client.ForcePlugin=gui,1.0
      Security.Client.Plugin[gui][1.0]=org.xmlBlaster.authentication.plugins.gui.ClientSecurityHelper
   and start for example "java javaclients.ClientSub" to see xmlBlaster
   with GUI based manual authentication/authorization.

 - Changed XML-RPC 'void' method return values to return
   an 'empty string', since 'void' is not supported in the
   XML-RPC spec.
   Bug reported by Cyrille Giquello <cyrille@ktaland.com>

 - Added qos support for get() responses, for example:
   <qos>
     <state>
       OK
     </state>
     <sender>
       Tim
     </sender>
   </qos>

 - Fixed C++ testclients in xmlBlaster/testsuite/c++

 - It is now possible to query the current logged in users
   by "__sys__UserList"
   Feature added by "Gilles Lavaux" <gilles.lavaux@esrin.esa.it>


Changes for 0.79b [March, 11 2001]
==================================

 - Bugfix with Base64 support in xmlrpc (thanks to Nikolai Devereaux)

 - J2EE support added by Peter Antman
   See: xmlBlaster/src/java/org/xmlBlaster/j2ee/k2/README
   See: xmlBlaster/demo/javaclients/j2ee/k2
   New jars for J2EE support:
   connector.jar jaas.jar jta-spec1_0_1.jar
   jms.jar ejb2.0.jar jndi-jdk1_3_1.jar
   (The jndi jar is needed for JDK 1.2 only)

 - Added support for volatile messages (thanks to Peter Antman).
   A volatile messages exists only during publish and processing it (doing the updates).
   A non-volatile messages (which is default) stays in memory as long as the server runs.

 - erase() now reports the correct number of erased messages
   if some of the messages did not exist.

 - Change of behaviour (thanks to Stefan Nickisch):
   If a callback to a client fails, the subscription will be
   automatically canceled for this client.

 - Integrated JacORB CORBA release 1.3.11
   Please copy the new xmlBlaster/config/jacorb.properties.template
   to $HOME/jacorb.properties (replacing the old one).

 - Added _release() calls to avoid JacORB memory leak on shutdown()

 - Bug fixed in JDBC adapter, NullPointerException because of
   missing namespace (thanks to Juergen Freidling).

 - Subscribe Bug fixed (reported by Stefan Nickisch)
   If a subscriber crashes without logout, this will disturb all other
   subscribers.
   No more communication is possible until the crashed subscriber will log on
   again.

 - Added proper RMI server and callback server shutdown

 - Renamed servlet-2.0.jar to servlet.jar

 - Added a simple Python hello world demo,
   see xmlBlaster/demo/python/README

 - Messages from the persistent store now deliver the correct
   sender name, the unique login name of the publisher.
   Thanks to Suhas Bharambe for reporting the bug.

 - Persistent Db integration (code, but no release).

 - Changed to JAXP and DOM2 Sun/crimson XML parser
   jaxp-1.1ea2 from SUN, DOM2 SAX2

 - Changed code to conform to SAX2

 - Login QoS has no <noPtP> element anymore, this is set
   for each CallbackAddress from now on, e.g.:
     <callback type='IOR'>
        http:/www.mars.universe:8080/RPC2
        <PtP>false</PtP> <!-- Set this flag if you don't want to receive any PtP messages -->
                         <!-- prevents 'spamming' -->
     </callback>


Changes for 0.79a [Nov, 16 2000]
================================

 - xmlBlaster license change to 'pure' LGPL

 - JacORB as CORBA default:
   Setting default System properties to
     org.omg.CORBA.ORBClass=jacorb.orb.ORB
     org.omg.CORBA.ORBSingletonClass=jacorb.orb.ORBSingleton
   in our CORBA drivers (if not set differently from environment).

 - Severe bugfix with CORBA POA sessionId.
   This bug caused sometimes the POA sessionId to be not unique,
   causing a subsecquent login to auto logout another client.

 - FileDriver is switched on as default (persistent store).
   You need to replace your xmlBlaster.properties
   with the new xmlBlaster.properties.template or set
   Persistence.LazyRecovery=true

 - Several smaller fixes.


Changes for 0.79 [Nov, 3 2000]
==============================
  - Bugfix for CORBA client/server running on multi homed hosts:
       java -DOAIAddr=198.197.24.129 javaclients.chat.SimpleChat
    for example forces the chat corba-callback server to use
    the given ip address.
       java -DOAIAddr=198.197.24.129 org.xmlBlaster.Main
    forces xmlBlaster to use the given address.
    xmlBlaster/lib/jacorb.jar is patched (see lib/README).

  - NOTE: CorbaConnection.java removed, please use
    XmlBlasterConnection.java instead.
    This allows to switch the used protocol (IOR,RMI,XML-RPC)
    on command line without recompilation.
    For coding example see demo/javaclients/ClientSub.java
    To switch protocol use the -client.protocol command line option.
    Example:
      jaco javaclients.ClientSub -client.protocol IOR
      jaco javaclients.ClientSub -client.protocol RMI
      jaco javaclients.ClientSub -client.protocol XML-RPC

  - NOTE: You need to use the new xmlBlaster.properties file.
    Remove your old in your HOME directory and use the
    new template from xmlBlaster/config as a base.

  - NOTE: JDK_HOME is not used anymore, use JAVA_HOME instead.

  - NOTE: You need to replace
       import org.xmlBlaster.client.CorbaConnection;
    with
       import org.xmlBlaster.client.protocol.XmlBlasterConnection;
    if you have used this class in your java clients.
    Then replace all occurrences of
       CorbaConnection
    with
       XmlBlasterConnection
    The login() method has changed to return void.

  - The built in http IOR download server is now more close
    to HTTP 1.1 spec RFC 2068

  - New command line argument added to xmlBlaster server:
    -iorHost <host>
    allows to specify where the internal http server publishes
    its bootstrapping IOR (for multi homed hosts).

  - build.xml:  Target 'all' collects demo and testuite classes
    into xmlBlaster.jar as well.

  - NEW: Easy installation: Ready to go in 30 seconds!
    Added customized MANIFEST to xmlBlaster.jar, allowing
    to start xmlBlaster without any CLASSPATH setting:
       java -jar lib/xmlBlaster.jar
    See INSTALL file.

  - RMI driver looks for xmlBlaster.polcy now in CLASSPATH as well, e.g.
       export CLASSPATH=$CLASSPATH:$XMLBLASTER_HOME/config
    whith $XMLBLASTER_HOME/config/xmlBlaster.policy

  - Migrated to XML-RPC java.1.0_beta_4

  - Migrated to Ant 1.2

  - Migrated to JacORB 1.2.2

  - Changed package for FileDriver, modify xmlBlaster.properties to
      Persistence.Driver=org.xmlBlaster.engine.persistence.filestore.FileDriver

  - Changed logging to use jutils Log classes
    NOTE: you need to change in your code:
       import org.jutils.log.Log;
    to
       import org.xmlBlaster.util.Log;

  - Michele completed xml-rpc support

  - Moved xmlBlaster.properties.template to config directory

  - Moved jacorb.properties.template to config directory

  - Moved orb.properties to config directory

Changes for 0.78 [Jul, 14 2000]
==============================
  - Added generic database access from James to xmlBlaster core.
    The JDBC gateway uses now the native interface to xmlBlaster.
    Added advanced JDBC connection pooling. Every user has
    its own pool, allowing heavy load server simultaneous
    database access (thread save).
    See online requirements for more informations/examples:
       http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.service.rdbms.html
       http://www.xmlBlaster.org/xmlBlaster/doc/requirements/engine.service.rdbms.jdbcpool.html

  - Michele Laghi added complete C++ client support for MICO and ORBacus.
    He implemented all necessary C++ client helper classes for easy and cool
    xmlBlaster access.

  - Moved xmlBlaster/src/idl/xmlBlaster.idl to directory
    xmlBlaster/src/java/org/xmlBlaster/protocol/corba/xmlBlaster.idl

  - Changed package names:
    org.xmlBlaster.engine.persistence.I_PersistenceDriver -> org.xmlBlaster.engine.I_PersistenceDriver
    org.xmlBlaster.engine.persistence.FileDriver          -> org.xmlBlaster.engine.FileDriver
    org.xmlBlaster.util.MessageUnit                       -> org.xmlBlaster.engine.helper.MessageUnit
    org.xmlBlaster.util.Destination                       -> org.xmlBlaster.engine.helper.Destination
    org.xmlBlaster.util.CallbackAddress                   -> org.xmlBlaster.engine.helper.CallbackAddress
    NOTE: You need to replace your xmlBlaster.properties
    with the new xmlBlaster.properties.template!

  - Changed classes:
    MessageUnit now contains the qos
    MessageUnitContainer is removed.
    Note that there is a CORBA MessageUnit and a engine.helper.MessageUnit
    class (same name, same members).

  - xmlBlaster.properties allows variables ${...} replacement.
    see util.property.args.xml, util.property.env.xml, util.property.xml
    NOTE: You need to replace your xmlBlaster.properties
    with the new xmlBlaster.properties.template!

  - The "+" for command line options (e.g. +trace) is not supported
    any more, use for example '-trace true' instead.

  - There is now RMI support for xmlBlaster available.
    The Servers are in
       xmlBlaster/src/java/org/xmlBlaster/protocol/rmi
    A simple demo client is in
       xmlBlaster/demo/javaclients/rmi
    Read the INSTALL file about how to use RMI support.
    This is an alpha release, no test suite etc. yet.
    The reason for RMI support is a future support
    of JINI (which is based on RMI).
    The Discovery and Lookup of Jini are very fault tolerant
    and could be a base for xmlBlaster replication,
    load balancing and master/slave operation.

  - Added XmlBlasterException.java in org.xmlBlaster.util package.
    This allows Corba independend Exception handling.
    The xmlBlaster.idl defined XmlBlasterException
    is not removed and still resides in package
       org.xmlBlaster.protocol.corba.serverIdl
    NOTE: You need to change the package of XmlBlasterException
    in your code as well (if not thrown from Corba).

  - Added new package org.jutils to the xmlBlaster distribution.
    This replaces org.xmlBlaster.util over the time.
    You need to set the environment variable JUTILS_HOME to:
      export JUTILS_HOME=${XMLBLASTER_HOME}
    Changed package names:
       org.xmlBlaster.util.Log          -> org.jutils.log.Log
       org.xmlBlaster.util.FileUtil     -> org.jutils.io.FileUtil
       org.xmlBlaster.util.Queue        -> org.jutils.collection.Queue
       org.xmlBlaster.util.Args         -> org.jutils.init.Args
       org.xmlBlaster.util.Property     -> org.jutils.init.Property
       org.xmlBlaster.util.Memory       -> org.jutils.runtime.Memory
       org.xmlBlaster.util.StringHelper -> org.jutils.text.StringHelper
       org.xmlBlaster.util.StopWatch    -> org.jutils.time.StopWatch
       org.xmlBlaster.util.Timeout      -> org.jutils.time.Timeout
    rm Args.java FileUtil.java LogListener.java Log.java Memory.java Property.java Queue.java StopWatch.java StringHelper.java

  - Compiled successfully xmlBlaster with JDK 1.3 for Linux.
    Performance enhancment for CORBA access ~ 80%

  - Compiled successfully xmlBlaster with TowerJ native compiler.
    Performance enhancment for CORBA access ~ 30%
    See .bashrc for used settings

  - Added protocol plugin possibility in xmlBlaster.properties
    Default settings are Corba drivers, example for RMI is provided as well:
      #------------------------------------------------------------------------------
      # List of all xmlBlaster access protocol drivers (I_Driver and I_Callback implementations)
      # <protocol-type>:<driverClass>,<protocl-type>:<driverClass>,...
      # For protocol types see I_Driver.java
      Protocol.Drivers=IOR:org.xmlBlaster.protocol.corba.CorbaDriver
      Protocol.CallbackDrivers=IOR:org.xmlBlaster.protocol.corba.CallbackCorbaDriver

  - Added native interface for xmlBlaster: I_XmlBlaster.
    All plugged in protocol drivers need to use this interface.
    The authentication is checked there in a controlled way.

  - The package org.xmlBlaster.authenticate is now CORBA independend.
    It uses or generates a unique sessionId string to track a login session
    of a user. This allows easier integration of other
    protocols like xml-rpc.

  - Bug fix in PoolManager.erase() method

  - ClientConnection: removed deprecated logout(server)
                      Added killPing() in logout()

Changes for 0.77 [Jun, 3 2000]
===============================
  - Bugfix in Main - MainGUI swapping and log WARN toggle.

  - browser callback enhancement:
    It is now possible to pass the login name and the password
    through the session object of the servlet (cookie).
    This allows you to use your own authentication.
    See client.browser.xml requirement how to do it.

  - Bugfix for XPath subscription match errors.
    Thanks to "Brett Palmer" <plum001@hotmail.com>
    for finding and describing this bug.

  - Stripped from jacorb.jar unneeded classes.
    This reduces the size from 3.7 MB to 2.3 MB.

  - Bug work around for thread leak: The thread leak from
    JacORB 1.1 is for the bug being fixed in CorbaConnection.java

  - Bugfix in CorbaConnection.java: Cleanup for Callback server added.

  - Changed XML parser to jaxp 1.0.1 and added servlet support
    to xtdash.jar (from original xt.jar).
    NOTE: You need to remove xml.jar from your CLASSPATH and
    add jaxp.jar and parser.jar (see xmlBlaster/lib directory)

  - Changed xmlBlaster.idl
    from
       login(in string loginName, in string passwd,
                  in clientIdl::BlasterCallback cb,
                  in serverIdl::XmlType qos)
    to
       login(in string loginName, in string passwd,
                  in serverIdl::XmlType qos)
    The callback protocol and address is now passed using
    the xml based qos.
    NOTE: You need to change your client code as well!
    See requirement engine.qos.login.callback

  - CORBA implementors other than JACORB and MICO can now be used. ORBACUS
    can work for the xmlBlaster server, java clients and c++ clients. You
    need OB-4.0b3 (for c++) and JOB-4.0b3 (for Java) or higher. You can
    find more about ORBACUS at http://www.ooc.com.

  - Persistent browser callback bugfixes
    * Added proper logout
    * Fixed security hole
    * Added support to set system properties through initArgs
    * Removed memory leak
    * Added ping/pong, to allow servlet to detect a lost browser


Changes for 0.76 [May.8, 2000]
===============================
        - Added a client cache to CorbaConnection class, allowing
          clients cheap synchronous polling for a message (Java only).
          See xmlBlaster/doc/requirements/client.cache.xml

        - Added demo for http browser callback without closing the http
          connection.
          See
            xmlBlaster/doc/requirements/client.browser.xml
            xmlBlaster/demo/html/systemInfo
            xmlBlaster/src/java/org/xmlBlaster/protocol/http
          and online:
            http://www.xmlBlaster.org/systemInfo/systemInfo.html?ActionType=login&loginName=karl&passwd=secret

          Netscape 4.x on Linux/HPUX/Win and
          Netscape 4.7 / MSIE 5 on WinNT and Win98
          runs fine.

        - Bugfixes (especially memory leak fixed) in browser
          callback framework.

        - Logging output can now be customized.
          You can choose the Date and Time formatting and the
          language and country.
          The amount of logging information is adjustable as well.
          Example:
        "Saturday, April 29, 2000 7:05:49 PM GMT+02:00 INFO Published AuthServer IOR on port 7609"
          or    in french:
        "samedi 29 avril 2000 19 h 06 GMT+02:00 INFO Published AuthServer IOR on port 7609"
          or    in short form german:
        "29.04.00 19:07 INFO Published AuthServer IOR on port 7609"
          or    minimal:
        "Published AuthServer IOR on port 7609"
          See xmlBlaster.properties.template    how to use it.

        - Bugfix when logging to file with missing permissions in Util.java
          The bug resulted in a never ending    loop.

        - xmlBlaster.properties can now be placed in    'java.home' directory
          as    well (this is for example /opt/jdk1.2.2/jre/lib).
          This feature may be helpful if you    want to start a deamon
          or    a servlet which has no home directory.
          See org.xmlBlaster.util.Property for more informations

        - xmlBlaster now uses the new JacORB 1.1 with SSL support

        - .jacorb_properties is renamed to jacorb.properties
          YOU NEED TO REMOVE YOUR $HOME/.jacorb_properties and
          configure $HOME/jacorb.properties
          Use the xmlBlaster/jacorb.properties.template as a base

        - Peter added the sweet rainbow fish to our control panel

        - Enhancements with browser callback framework

        - XmlKey.getContentMimeExtended() now returns "" (empty string)
          as    default fallback. Before the default was null.
          This is smarter when used in XSL style sheets.

Changes for 0.75 [Mar.28, 2000]
===============================

        - Konrad completed the fabulous Browser callback framework!
          And it works incredible well.
          Browsers get instant callback updates from xmlBlaster messages
          through a persistent http connection.
          It supports many feature like browser pinging, slow
          browser queuing etc.
          Konrad will write a little tutorial in the next week.
          See xmlBlaster/src/java/org/xmlBlaster/protocol/http
          See xmlBlaster/doc/http/BlasterHttpProxy.gif

        - Added little tool which allows to subscribe
          from command line for a message (for testing/debugging).
          See xmlBlaster/src/java/org/xmlBlaster/client/reader/README

        - Added two internal messages with key oid="__sys__Login"
          and key oid="__sys__Logout"
          You may subscribe on those messages if you want to be informed
          about other client which login or logout

        - Added a xmlBlaster reference handbook to xmlBlaster.org
          This page is generated from the requirement XML files in the
          xmlBlaster/doc/requirements directory of the distribution.
          It is available on our homepage in the 'Doc' section.

        - Bugfix if the Callback of a PtP receiver is disappeared,
          this usually happens when the receiver crashes without a logout.
          Now the XmlBlasterException with e.id="CallbackFailed" is thrown
          to the sender,  and the message is queued for the receiver
          if the qos flag <ForceQueuing> was set.

        - Allow clients to ping xmlBlaster, to test reliable the connection.
          The xmlBlaster.idl was extended with a ping() method.
          Java clients may use CorbaConnection.java to automatically test
          ping the connection.

        - Added <qos> tag <subscriptionId> for update messages.
          This allows the client to find out which of his subscriptions
          caused this update.

        - Added <qos> tag <state> for update messages.
          This is not finished, it always shows OK for the moment.

        - Command line parameters (args) and xmlBlaster.property file entries are
          merged. The 'args' overwrite the property file variables.
          Every xmlBlaster.property variable may as well be specified on
          command line. The leading "-" or "+" from the command line    key is
          stripped before it    is merged into the properties hash table.
          For example, the "-iorFile" command line argument corresponds to the
          "iorFile" variable    in the xmlBlaster.properties file.
          See Property.java


Changes for 0.74 [Feb.29, 2000]
==============================
        - New XML based requirements framework.
          See xmlBlaster/doc/requirements

        - 'Fail save' client connection for Java clients added.
          Clients begin polling and automatic local recording of messages
          if xmlBlaster server disappears.
          See CorbaConnection.java

        - C++ POA demo client added [Michele]
          See xmlBlaster/testsuite/c++

        - Recorder to record/playback of messages in slow/fast motion added.
          See InvocationRecorder.java

        - CorbaConnection: logout(boolean) deprecated -> use logout() now.

        - Changed xmlBlaster.idl: messageUnit    -> msgUnit
                                  messageUnitArr -> msgUnitArr
          Case does not matter, IDL is case-insensitive when detecting name clashes.
          (Thanks to Michele Laghi)

        - Added a guide line for xmlBLaster core developer.
          See xmlBlaster/doc/developer-guidelines.html

        - Set up xmlBLaster to use Ant as it's build system [James]

        - Added the revolutionary XML based JDBC database gateway. [James]
          see xmlBlaster/src/java/org/xmlBlaster/protocol/jdbc
          see xmlBlaster/demo/javaclients/jdbc

        - Added servlet - browser callback framework (not yet finished)
          see xmlBlaster/src/java/org/xmlBlaster/protocol/http


Changes for 0.73 [Feb.20, 2000]
==============================
        - Use the -P    option to check out, so old directories won't show up any more:
          cvs checkout -P xmlBlaster

        - Migrated to JacORB 1.0 beta 15

        - Reorganized package structure
          org.xmlBlaster.authenticateIdl  ->    org.xmlBlaster.protocol.corba.authenticateIdl
          org.xmlBlaster.serverIdl        -> org.xmlBlaster.protocol.corba.serverIdl
          org.xmlBlaster.clientIdl        -> org.xmlBlaster.protocol.corba.clientIdl
          org.xmlBlaster.client.filestore ->    org.xmlBlaster.protocol.corba.client.feeder
          org.xmlBlaster.engine.xml2java  ->    new added

        - Improved client / server connection negotiation (IOR bootstrapping)

        - Introduced DocBook schema
          Documentation is written in xml, and converted
          to html/pdf etc. with XSL style sheets.
          See example in xmlBlaster/doc/whitepaper/README

        - Further minor changes (see cvs log or cvsweb if you really want to know it)


Changes for 0.72 [Feb.1, 2000]
==============================

        - Support for new QoS tag <ForceQueuing /> in PtP style.
          * Without this flag, a message published to a client which is not
                 logged in throws an exception.
          * Using this flag, the message will be queued by xmlBlaster
                 until the client logs in. On login, all queued messages
                 are sent to the client immediately.

        - Added some simple console input mode, to control xmlBlaster
          Type <?> and <Enter> when xmlBlaster is running to get help.

        - Extended control panel GUI to support
          * dumping of xmlBlaster internal state
          * clearing the logging window
          * toggle from control panel GUI to console mode and back again

        - Bug fixed for subscribe with oid and later publish of this message.
          The BigXmlDom was not updated properly.

        - Added support for <qos><Readonly /></qos>,
          where only the first publish is accepted.

        - Added logging redirection to file,
          use on command line "-?" to query possible parameters.

        - Bug fixed for multiple login (without logout) and PtP messages.

        - Bug fixed for multiple <isDurable> messages.

        - Added missing FileDriver.erase().

        - Two bug fixes with    unSubscribe() calls for previous XPATH subscriptions.


Changes for 0.71 [Jan.20 2000]
==============================

        - Added the incredible MOM slide show, see http://www.xmlBlaster.org

        - Added SubscribeKeyWrapper.java SubscribeQosWrapper.java as client helper
          to help to hide raw XML ASCII strings

        - Added simple persistent store (file based)
          Needs to be configured in $HOME/xmlBlaster.properties

        - Added a xmlBlaster.properties file (should be placed into $HOME).
          see xmlBlaster/xmlBlaster.properties.template as a base to start with

        - Renamed file names from ...QoS... to ...Qos...

        - Added a file feeder PublishFile.java (publishes files as message to xmlBlaster)

        - Added some help to xmlBlaster/doc/programming-guide.lyx (still ugly)

        - Added usage text, invoke at command line with -? option

        - Small changes here and there

