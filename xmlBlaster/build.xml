<?xml version="1.0"?>

<!-- ===========================================================================

 xmlBlaster build file

Authors:
 James Birchfield <jmbirchfield@proteustechnologies.com>
 Marcel Ruff <ruff@swand.lake.de>

ToDo:
 Figure out how not to convert idl to java everytime.
 (Luckily it is fast)

Installing the build tools
==========================

The xmlBlaster build system is based on Jakarta Ant, which is a Java building
tool originally developed for the Jakarta Tomcat project but now used in many
other Apache projects and extended by many developers.

Ant is a little but very handy tool that uses a build file written in XML
(this file) as building instructions. For more information refer to
"http://jakarta.apache.org/ant/".

To make things easier for you, the xmlBlaster distribution contains a
precompiled version of Ant and the build scripts take care of all the
classpath issues.

The only thing that you have to make sure, is the "JAVA_HOME" environment
property should be set to match the JVM you want to use. That's it.


Building instructions
=====================

Ok, let's build the baby. First, make sure your current working directory is
where this very file is located. Then type

  ./build.sh (unix)
  .\build.bat (win32)

if everything is right and all the required packages are visible, this action
will generate a file called "xmlBlaster.jar" in the "./lib" directory.
Note, that if you do further development, compilation time is reduced
since Ant is able to detect which files have changed an to recompile
them at need.

If you use 'xmlBlaster/.bashrc', login again to include xmlBlaster.jar into
your CLASSPATH.
Else add it manually.

============================================================================ -->

<project default="xmlBlaster" basedir=".">

  <property name="name" value="xmlBlaster"/>
  <property name="version" value="0.74-dev"/>
  <property name="year" value="2000"/>

  <property name="build.compiler" value="classic"/>
  <property name="debug" value="off"/>

  <property name="src.dir" value="./src/java"/>
  <property name="dtd.dir" value="./src/dtd"/>
  <property name="idl.dir" value="./src/java/org/xmlBlaster/protocol/corba"/>
  <property name="doc.dir" value="./doc"/>
  <property name="classes.dir" value="./classes"/>
  <property name="javadoc.dir" value="./doc/api"/>
  <property name="testsuite.dir" value="./testsuite"/>
  <property name="demo.dir" value="./demo"/>
  <property name="bin.dir" value="./bin"/>
  <property name="lib.dir" value="./lib"/>
  <property name="packages" value="org.xmlBlaster.*"/>

  <property name="www.dir"              value="${demo.dir}/html"/>
  <property name="WEB-INF"              value="${www.dir}/WEB-INF"/>
  <property name="WEB-INF.classes"      value="${WEB-INF}/classes"/>
  <!-- The document root of the servlet engine (deploy dir for war files): -->
  <property name="WWW_ROOT"             value="${user.home}/jakarta-tomcat-4.0/webapps"/>

  <property name="idl" value="org.xmlBlaster.protocol.corba"/>
  <property name="idl.class" value="jacorb.idl.parser"/>

  <property name="build.dir" value="./build"/>
  <property name="build.src" value="./build/src"/>
  <property name="build.dest" value="./build/classes"/>

  <property name="dist.dir" value="./dist"/>


  <property name="xmlblaster_home" value="."/>
  <property name="classpath" value="./lib/jacorb.jar:./lib/omquery.jar:./lib/parser.jar:./lib/xmlrpc.jar:./lib/jaxp.jar:./lib/test.jar:./lib/xtdash.jar:./lib/servlet.jar:./lib/gnu-regexp-1.0.8.jar:"/>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="xmlBlaster Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   xmlBlaster  --> generates the xmlBlaster.jar file (default)"/>
    <echo message="   demo        --> generates the demo.jar file"/>
    <echo message="   testsuite   --> generates the testsuite.jar file"/>
    <echo message="   all         --> generates xmlBlaster.jar (including demo and testsuite classes)"/>
    <echo message="   javadocs    --> generates the javadoc documentation"/>
    <echo message="   dist        --> generates the xmlBlaster distribution"/>
    <echo message="   clean       --> cleans up the directory"/>
    <echo message="   deploy_war  --> create and deploys a web archive (e.g. for tomcat)"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source code                                            -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>

  </target>

  <!-- =================================================================== -->
  <!-- Compiles the xmlBlaster core source directory                       -->
  <!-- =================================================================== -->
  <target name="xmlBlaster" depends="prepare-src">

    <!-- convert idl -->
    <echo message="Converting idl..."/>
    <java classname="${idl.class}"
          args="-p ${idl} -d ${src.dir} ${idl.dir}/xmlBlaster.idl"/>

    <copy todir="${build.src}/xmlBlaster">
       <fileset dir="${src.dir}">
          <exclude name="README,Makefile,**/ReqBaseServlet.java,**/ReqListServlet.java,**/ReqItemServlet.java,**/OracleSqlFactory.java"/>
          <exclude name="Makefile,**/ReqBaseServlet.java,**/ReqListServlet.java,**/ReqItemServlet.java,**/OracleSqlFactory.java"/>
          <exclude name="**/ReqBaseServlet.java,**/ReqListServlet.java,**/ReqItemServlet.java,**/OracleSqlFactory.java"/>
          <exclude name="**/ReqListServlet.java,**/ReqItemServlet.java,**/OracleSqlFactory.java"/>
          <exclude name="**/ReqItemServlet.java,**/OracleSqlFactory.java"/>
          <exclude name="**/OracleSqlFactory.java"/>
       </fileset>
    </copy>

    <copy file="${classes.dir}/manifest.xmlBlaster" tofile="${build.dest}/manifest.xmlBlaster"/>
    <copy file="./config/xmlBlaster.policy" tofile="${build.dest}/xmlBlaster.policy"/>
    <copy file="${src.dir}/org/xmlBlaster/AppIcon.gif" tofile="${build.dest}/org/xmlBlaster/AppIcon.gif"/>

    <javac srcdir="${build.src}/xmlBlaster"
           destdir="${build.dest}"
           classpath="${classpath}"
           debug="${debug}"/>

    <rmic classname="org.xmlBlaster.client.protocol.rmi.RmiCallbackServer" base="${build.dest}" />
    <rmic classname="org.xmlBlaster.protocol.rmi.AuthServerImpl" base="${build.dest}" />
    <rmic classname="org.xmlBlaster.protocol.rmi.XmlBlasterImpl" base="${build.dest}" />

    <jar jarfile="${build.dir}/${name}.jar" manifest="${build.dest}/manifest.xmlBlaster" basedir="${build.dest}" includes="org/**,xmlBlaster.policy,*.gif"/>

    <copy file="${build.dir}/${name}.jar" tofile="${lib.dir}/${name}.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the xmlBlaster demo source directory                       -->
  <!-- =================================================================== -->
  <target name="demo" depends="xmlBlaster">   <!-- XmlRpcHttpClient.java !!! away again when it compiles -->
    <copy todir="${build.src}/demo">
      <fileset dir="${demo.dir}">
        <exclude name="README"/>
        <exclude name="Makefile"/>
        <exclude name="**/XmlRpcHttpClient.java"/>
      </fileset>
    </copy>
    <javac srcdir="${build.src}/demo"
           destdir="${build.dest}"
           classpath="${classpath}:${lib.dir}/${name}.jar"
           debug="${debug}"/>
    <jar jarfile="${build.dir}/demo.jar" basedir="${build.dest}" includes="javaclients/**/*.class"/>
    <copy file="${build.dir}/demo.jar" tofile="${lib.dir}/demo.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the xmlBlaster, demo, and  testsuite source directories    -->
  <!-- =================================================================== -->
  <target name="all" depends="xmlBlaster,demo,testsuite">
  <!--target name="all" depends="prepare-src"-->
    <delete file="${lib.dir}/demo.jar"/>
    <delete file="${lib.dir}/testsuite.jar"/>
    <delete file="${build.dir}/${name}.jar"/>
    <jar jarfile="${build.dir}/${name}.jar" manifest="${build.dest}/manifest.xmlBlaster" basedir="${build.dest}" includes="org/**/*.*,testsuite/**,javaclients/**/*.class,html/systemInfo/*.class,xmlBlaster.policy,*.gif"/>
    <copy file="${build.dir}/${name}.jar" tofile="${lib.dir}/${name}.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the xmlBlaster testsuite source directory                  -->
  <!-- =================================================================== -->
  <target name="testsuite" depends="xmlBlaster">
    <copy todir="${build.src}/testsuite/org">
      <fileset dir="${testsuite.dir}/org">
        <exclude name="README, Makefile"/>
        <exclude name="Makefile"/>
      </fileset>
    </copy>
    <javac srcdir="${build.src}/testsuite"
           destdir="${build.dest}"
           classpath="${classpath}:${lib.dir}/${name}.jar"
           debug="${debug}"/>
    <jar jarfile="${build.dir}/testsuite.jar" basedir="${build.dest}" includes="testsuite/**"/>
    <copy file="${build.dir}/testsuite.jar" tofile="${lib.dir}/testsuite.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates a web archive (.war) to deploy to a modern servlet engine   -->
  <!-- =================================================================== -->
  <target name="deploy_war">
     <!-- COPY THE SERVLETS IN THE WEB-INF/classes FOLDER -->
     <mkdir dir="${WEB-INF.classes}/html/systemInfo"/>
     <copy todir="${WEB-INF.classes}/html/systemInfo">
       <fileset dir="${build.dest}/html/systemInfo"/>
     </copy>
     <mkdir dir="${WEB-INF.classes}/org/xmlBlaster/protocol/http"/>
     <copy todir="${WEB-INF.classes}/org/xmlBlaster/protocol/http">
       <fileset dir="${build.dest}/org/xmlBlaster/protocol/http"/>
     </copy>

     <delete>
       <fileset dir="${www.dir}/javascript"/>
     </delete>
     <copy todir="${www.dir}/javascript">
       <fileset dir="${src.dir}/org/xmlBlaster/protocol/http/javascript"/>
     </copy>
     <delete>
       <fileset dir="${www.dir}/persistentWindow"/>
     </delete>
     <copy todir="${www.dir}/persistentWindow">
       <fileset dir="${src.dir}/org/xmlBlaster/protocol/http/persistentWindow"/>
     </copy>
     <delete file="${www.dir}/xmlBlaster.css"/>
     <copy file="${doc.dir}/howto/xmlBlaster.css" tofile="${www.dir}/xmlBlaster.css"/>

     <jar jarfile="${build.dir}/xmlBlaster.war"
          basedir="${www.dir}/"
          includes="*.*,systemInfo/*.html,systemInfo/colors/*.*,javascript/**,persistentWindow/**,WEB-INF/**/*.*"/>

     <copy file="${lib.dir}/${name}.jar" tofile="${WWW_ROOT}/../lib/xmlBlaster.jar"/>
     <!-- delete>
       <fileset dir="${WWW_ROOT}/xmlBlaster"/>
     </delete -->
     <delete file="${WWW_ROOT}/xmlBlaster.war"/>
     <copy file="${build.dir}/xmlBlaster.war" tofile="${WWW_ROOT}/xmlBlaster.war"/>
     <!-- unjar src="${WWW_ROOT}/xmlBlaster.war" dest="${WWW_ROOT}" /-->
  </target>

  <!-- =================================================================== -->
  <!-- Creates the core javadoc documentation                              -->
  <!-- =================================================================== -->
  <target name="javadocs" depends="xmlBlaster">
    <mkdir dir="${javadoc.dir}"/>
        <javadoc packagenames="org.xmlBlaster.*"
                sourcepath="${src.dir}"
                classpath="${classpath}"
                destdir="${javadoc.dir}"
                author="true"
                version="true"
                use="true"
                windowtitle="xmlBlaster API"
                doctitle="&lt;h1&gt;xmlBlaster API&lt;/h1&gt;" />

  </target>

  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
  <target name="dist" depends="all">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/bin"/>
    <mkdir dir="${dist.dir}/src"/>
    <mkdir dir="${dist.dir}/demo"/>
    <mkdir dir="${dist.dir}/doc"/>
    <mkdir dir="${dist.dir}/testsuite"/>
    <mkdir dir="${dist.dir}/lib"/>

    <copy todir="${dist.dir}/src/java">
      <fileset dir="${src.dir}"/>
    </copy>
    <copy todir="${dist.dir}/src/dtd">
      <fileset dir="${dtd.dir}"/>
    </copy>
    <copy todir="${dist.dir}/src/idl">
      <fileset dir="${idl.dir}"/>
    </copy>

    <copy todir="${dist.dir}/doc">
      <fileset dir="${doc.dir}"/>
    </copy>
    <copy todir="${dist.dir}/demo">
      <fileset dir="${demo.dir}"/>
    </copy>
    <copy todir="${dist.dir}/lib">
      <fileset dir="${lib.dir}"/>
    </copy>
    <copy todir="${dist.dir}/bin">
      <fileset dir="${bin.dir}"/>
    </copy>

    <copy file="README" tofile="${dist.dir}/README"/>
    <copy file="INSTALL" tofile="${dist.dir}/INSTALL"/>
    <copy file="LICENSE" tofile="${dist.dir}/LICENSE"/>
    <copy file="config/xmlBlaster.properties.template" tofile="${dist.dir}/config/xmlBlaster.properties.template"/>
    <copy file="config/jacorb.properties.template" tofile="${dist.dir}/config/jacorb.properties.template"/>
    <copy file="config/xmlBlaster.policy" tofile="${dist.dir}/config/xmlBlaster.policy"/>
    <copy file=".bashrc" tofile="${dist.dir}/.bashrc"/>
    <copy file="build.xml" tofile="${dist.dir}/build.xml"/>
    <jar jarfile="${name}-${version}.jar" basedir="${dist.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
   <target name="clean">
      <delete>
         <fileset dir="${build.dir}"/>
         <fileset dir="${lib.dir}" includes="${name}.jar,demo.jar,testsuite.jar,${name}-${version}.jar"/>
      </delete>
   </target>

   <target name="delete" depends="clean">
      <delete>
         <fileset dir="${dist.dir}" includes="**"/>
      </delete>
   </target>
</project>
