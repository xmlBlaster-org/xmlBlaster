- Performance: 
  * Implementing of  XtOmQuery for oid access (minimal data in DOM tree)
    This is nonsense, the minimal DOM tree couldn't be parsed by XPath
  * Normalizing the DOM tree
  * Profiling http://www.optimizeit.com/ or
              http://www.klg.com/ - JProbe (no Linux!?)
  * Use SML instead of XML? http://www.xml.com/pub/1999/11/sml/index.html

- Integrate with Java API for XML Parsing 1.0 
  http://developer.java.sun.com/developer/earlyAccess/xml/   

- Testing implementation of unsubscribe() XPath oid

- Testing implementation of erase() with XPath

- Client should be able to query which subscriptions he has

- Automatic disconnect detection of a client e.g. [ Closing connection to 192.168.1.1:1424 ]
  this is important if the client didn't logout

- dtd support 
  Necessary to use XPATH DTD-ID:
  An element node may have a unique identifier (ID).
  This is the value of the attribute that is declared in the DTD as type ID

- Add an AuthenticateException type

- QoS support is still missing

- xmlBlaster.idl
  * rename AuthServer to AuthenticationService
  * rename Server to xmlBlaster

- Authentication (login etc)
  Plugin possibility for existing user management systems
  * JNDI with XML based LDAP access http://www.dsml.org/about.html

- Authorization (ACL access control lists)
  Our ACL should be XML based, so its possible to
  query who may do what through XPath on Client meta informations which
  are XML based, simple approach:
  
  [User]  [Action]  [Data]
  Martin  read      marketing-paper
  Joe     write     homepage-layout

  User:   may be any user based information like role, group, property etc. (XPath query)
  Action: read, write, erase, change
  Data:   Any data in xmlBlaster (XPath query)

- Reliability of update() callback
  The update() method is declared oneway, so the xmlBlaster
  can't guarantee if the update is delivered.

  Perhaps there should be 2 update variants,
  one blocking (no keyword oneway) and one none-blocking (with keyword oneway).
  
  In the blocking mode, xmlBlaster would need a timeout
  or an extra thread per update client, so that not
  one client can block the whole update sequence.

- Transaction support, based on:
  Java(tm) Transaction Service (JTS) 1.0 Specification.    
  JTS specifies the implementation of a Transaction Manager which 
  supports the Java(tm) Transaction API (JTA) 1.0 Specification.
  http://java.sun.com/products/jts/

- Persistence of XmlKey and content:
  - PDOM (Persistent DOM)
    * http://devlinux.com/projects/reiserfs/content_table.html
      A suitable file system for DOM persistence?
    * XDBM free for not commercial use, see http://www.bowerbird.com.au/XDBM/
    * IPSI XQL engine, free for not commercial use, see http://xml.darmstadt.gmd.de/xql/index.html
    * LORE http://www-db.Stanford.edu/lore/
    * DOM - RDBMS see http://www.alphaWorks.ibm.com/tech/databasedom
    * OZONE Database see http://www.ozone-db.org/ozone_main.html
	 * SQL->XML PXSL Servlet: http://www.pault.com/ (store XML in SLQ DB)
  - Content
    How should we store the data blobs?
  - Test FileDriver with ReiserFS 
            The FileDriver is not suitable for production purposes.
            If you really want to use this driver for more than some hundred different messages
            we recommend to use it with the ReiserFS.<br />
            Reiserfs is a file system using a plug-in based object oriented variant on classical balanced tree algorithms.<br />
            See <a href="http://devlinux.com/projects/reiserfs">the ReiserFS homepage</a>
            for further informations, and download it at <a href="ftp://ftp.suse.com:/pub/suse/i386/update/6.3/reiserfs/">Suse ftp site</a>.

- Evaluate other query engines for better performance, see
   http://www-db.research.bell-labs.com/user/simeon/xquery.html

Clients
-------
- Perl (ORB for Perl www.lunatech.com/research/corba/cope)
  Multihtreaded support still missing

- C++ (mico)
  OK runs fine

- Tcl/Tk

- Java

- Phyton
  Python language: http://www.python.org
  Python CORBA:    http://www.dstc.edu.au/Fnorb (not free for commercial use!)
  Python XML:      http://www.python.org/sigs/xml-sig/
  Python XSL:      http://fourthought.com/4Suite/4XSLT  ftp://FourThought.com/pub/4Suite/4XSLT/

(all free CORBA implementation .......)

proprietary Protocol plugins (not CORBA)
----------------------------------------
- Protocol plugins (www.webdav.com)
- state less protocols (email, http, webDav)
  For HTTP and XML see: http://www.xmlrpc.com/spec

xmlBlaster homepage
-------------------
- Allow search e.g. with
     glimpse http://glimpse.cs.arizona.edu/
     Wilma at http://www.hpc.uh.edu/majordomo/#wilma integrates glimpse and MHonArc
  or
     ht://Dig http://www.htdig.org/
  for an example see
     http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/
     http://www.hpc.uh.edu/fvwm/archive/

