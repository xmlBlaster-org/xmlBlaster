<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='engine.qos.publish.priority' type='NEW' prio='LOW' status="CLOSED">
   <topic>XmlBlaster supports message priorities</topic>
   <description>
      <p>
      Using the publish-QoS flag &lt;priority&gt; allows to set the priority of a message.
      A message with priority 9 has highest priority, 0 is lowest, default is 5.
      </p>
      <p>
      Message with higher priority may overtake such with lower, as the queues highest
      sorting criterion is priority followed by the timestamp.
      </p>
      <p>
      Keep in mind that only for messages with equal priority the message
      sequence is guaranteed
      </p>
   </description>
   <example lang="XML">
      <![CDATA[
<qos>  <!-- publish QoS -->
   <priority>9<priority/>  <!-- Highest priority -->
</qos>
      ]]>
   </example>

   <example lang="Java">
import org.xmlBlaster.util.def.Constants;
import org.xmlBlaster.util.MsgUnit;
import org.xmlBlaster.client.key.PublishKey;
import org.xmlBlaster.client.qos.PublishQos;

...

PublishKey pk = new PublishKey(glob, "HelloMsg");
PublishQos pq = new PublishQos(glob);

pq.setPriority(PriorityEnum.MAX_PRIORITY);

MsgUnit msgUnit = new MsgUnit(pk, senderContent.getBytes(), pq);

con.publish(msgUnit);
   </example>

   <see type="API">org.xmlBlaster.client.qos.PublishQos</see>
   <see type="API">org.xmlBlaster.util.def.Constants</see>
   <author>xmlBlaster@marcelruff.info</author>
   <date>2000 01 15</date>
   <revision>$Revision: 1.7 $</revision>
   <testcase status="OPEN">
      <name>-</name>
      <comment>Missing</comment>
      <test tool="SUITE"></test>
   </testcase>
</requirement>

