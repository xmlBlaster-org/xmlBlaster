<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='interface.get' type='NEW' prio='HIGH' status="CLOSED">
   <topic>Synchronous message access with the get() method</topic>
   <description>
      <p>
      The <b>get()</b> method allows to retrieve messages from xmlBlaster.
      You can access exactly one message by passing its oid, or a
      selection of messages by passing an XPATH query.
      </p>
      <p>
      Method detail (CORBA IDL notation):
      </p>
      <pre>
   typedef string XmlType;
   typedef sequence&lt;MessageUnit> MessageUnitArr;

   MessageUnitArr get(in XmlType xmlKey, in XmlType xmlQos)
                                          raises(XmlBlasterException);
      </pre>
         
      <table border="1">
         <tr>
         <td>Parameter</td><td>Type</td><td>Description</td>
         </tr>
         <tr>
         <td>xmlKey</td><td>string</td><td>The XML encoded key containing the oid or XPATH query to select messages to get</td>
         </tr>
         <tr>
         <td>xmlQos</td><td>string</td><td>The XML encoded Quality of Service QoS (see GetQosWrapper link below)</td>
         </tr>
         <tr>
         <td>return</td><td>MessageUnit[]</td><td>An array of messages</td>
         </tr>
         <tr>
         <td>XmlBlasterException</td><td>exception</td><td>Thrown on error</td>
         </tr>
      </table>

      <br />
      <h3>
      A special note how to use get() in cluster environments:
      </h3>
      <p>
      If you invoke get() on a cluster slave node, the request is only
      forwarded to a master node if the key matches the configured
      master selection.
      </p>
      

   </description>


   <example lang="XML" type="HTML">
      <p>
      Here is an example of an exact query:
      </p>
      <table border="1">
         <tr><td>Key</td><td>&lt;key oid='MyMessage' /></td></tr>
         <tr><td>QoS</td><td>&lt;qos/></td></tr>
      </table>
      <p>
      And a return value:
    </p>
     <table border="1">
         <tr><td>Key</td><td>&lt;key oid='MyMessage' /></td></tr>
         <tr><td>content</td><td>Hello world</td></tr>
         <tr><td>QoS</td><td>&lt;qos>&lt;state id='OK'>&lt;/qos></td></tr>
     </table>
   </example>
   
   <example lang="XML" type="HTML">
      <p>
      Here is an example of an XPATH query:
      </p>
      <table border="1">
         <tr><td>Key</td><td>&lt;key oid='' queryType='XPATH'> /xmlBlaster/key[starts-with(@oid,'radar.')]  &lt;/key></td></tr>
         <tr><td>QoS</td><td>&lt;qos/></td></tr>
      </table>
   </example>

   <example lang="XML" type="HTML">
      <p>
      get() in a cluster environment belonging to domain <i>RUGBY_NEWS</i>
      </p>
      <table border="1">
         <tr><td>Key</td><td>&lt;key oid='MyMessage' domain='RUGBY_NEWS' /></td></tr>
         <tr><td>QoS</td><td>&lt;qos/></td></tr>
      </table>
   </example>
   
   <example lang="XmlRpc" type="HTML">
      <p>
      This is the XmlRpc server interface variant:
      </p>
      <pre>
   public Vector get(String sessionId, String xmlKey_literal, String qos_literal)
                     throws XmlBlasterException
      </pre>
   </example>

   <example lang="RMI" type="HTML">
      <p>
      This is the RMI server interface variant:
      </p>
      <pre>
   public MessageUnit[] get(String sessionId, String xmlKey_literal, String qos_literal)
                            throws RemoteException, XmlBlasterException
      </pre>
   </example>

   <example lang="Java" type="HTML">
      <p>
      A typical Java client code for an EXACT subscription:
      </p>
      <pre>
   import org.xmlBlaster.client.*;
   import org.xmlBlaster.engine.helper.MessageUnit;
   ...

   GetKeyWrapper sk = new GetKeyWrapper("MyOid");

   GetQosWrapper sq = new GetQosWrapper();

   MessageUnit[] msgs = con.get(sk.toXml(), sq.toXml());

   System.out.println("Success, retrieved " + msgs.length + " messages.");

      </pre>
   <p>
   See xmlBlaster/demo/javaclients/HelloWorld*.java for more examples.
   </p>
   </example>

   <example lang="Java" type="HTML">
      <p>
      A typical Java client code for an XPATH subscription:
      </p>
      <pre>
   GetKeyWrapper sk = new GetKeyWrapper("/xmlBlaster/key[@oid='radar.track']",
                            Constants.XPATH);

   GetQosWrapper sq = new GetQosWrapper();

   MessageUnit[] msgs = con.get(sk.toXml(), sq.toXml());
      </pre>
   <p>
   The same in raw XML notation:
   </p>
      <pre>
   MessageUnit[] msgs = con.get("&lt;key oid=\"/xmlBlaster/key[@oid='radar.track']\" />", "&lt;qos/>");
      </pre>
   </example>

   <example lang="Java" type="HTML">
      <p>
      A typical Java client code for retrieval in a cluster environment
      which uses selection of master nodes with message domains:
      </p>
      <pre>
   GetKeyWrapper sk = new GetKeyWrapper("MyMessageOid");

   sk.setDomain("RUGBY_NEWS"); // Subscription is forwarded from slaves to master
   // without setting the domain the get would just be handled by the slave connected to

   MessageUnit[] msgs = con.get(sk.toXml(), null);
      </pre>
   </example>


   <configuration>
   </configuration>

   <see type="REQ">interface</see>

   <see type="API">org.xmlBlaster.client.GetQosWrapper</see>
   <see type="API">org.xmlBlaster.client.protocol.XmlBlasterConnection</see>
   <see type="API">org.xmlBlaster.engine.helper.MessageUnit</see>
   <see type="API">org.xmlBlaster.protocol.xmlrpc.XmlBlasterImpl</see>
   <see type="API">org.xmlBlaster.protocol.rmi.XmlBlasterImpl</see>

   <author>ruff@swand.lake.de</author>
   <date>2002 06 30</date>
   <revision>$Revision: 1.2 $</revision>
   <testcase status="OPEN">
      <name>-</name>
      <comment>Tests the get method invocation (cluster test is missing!)</comment>
      <test tool="SUITE">org.xmlBlaster.test.qos.TestGet</test>
   </testcase>
</requirement>

