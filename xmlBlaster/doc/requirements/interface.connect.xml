<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='interface.connect' type='NEW' prio='HIGH' status="CLOSED">
   <topic>Connecting to xmlBlaster</topic>
   <description>
      <p>
      The <b>connect()</b> method allows to login to xmlBlaster.
      </p>
      <p>
      Method detail (CORBA IDL notation):
      </p>
      <pre>
   typedef string XmlType;

   serverIdl::XmlType connect(in serverIdl::XmlType qos)
                              raises (serverIdl::XmlBlasterException);
      </pre>
         
      <table border="1">
         <tr>
         <th>Parameter</th><th>Type</th><th>Description</th>
         </tr>
         <tr>
         <td>qos</td><td>string</td><td>The XML encoded Quality of Service (QoS)</td>
         </tr>
         <tr>
         <td>XmlBlasterException</td><td>exception</td><td>Thrown on error</td>
         </tr>
      </table>
   </description>


   <example lang="XML" type="HTML">
      <p>
      Here is an example QoS:
      </p>
   <table border="1"><tr><td>
   <pre>
&lt;qos>

   &lt;securityService type="htpasswd" version="1.0">
     &lt;![CDATA[
     &lt;user>michele&lt;/user>
     &lt;passwd>secret&lt;/passwd>
     ]]&gt;
   &lt;/securityService>
   
   &lt;ptp>true&lt;/ptp>

   &lt;duplicateUpdates>false&lt;/duplicateUpdates>

   &lt;session name='joe/3' 
               timeout='3600000'
               maxSessions='10'
               clearSessions='false'
               sessionId='4e56890ghdFzj0'/>

   &lt;queue relating='callback' maxMsg='1000' maxBytes='4000000' onOverflow='deadMessage'>
      &lt;callback type='IOR' sessionId='4e56890ghdFzj0'>
         IOR:10000010033200000099000010....
         &lt;burstMode collectTime='400' />
      &lt;/callback>
   &lt;/queue>

&lt;/qos>
   </pre>
   </td></tr></table>
   </example>

   <example lang="XmlRpc" type="HTML">
      <p>
      This is the XmlRpc server interface variant:
      </p>
      <pre>
public String connect(String qos_literal) throws XmlBlasterException
      </pre>
   </example>

   <example lang="RMI" type="HTML">
      <p>
      This is the RMI server interface variant:
      </p>
      <pre>
public String connect(String qos_literal)
                        throws RemoteException, XmlBlasterException
      </pre>
   </example>

   <example lang="Java" type="HTML">
      <p>
      A typical Java client code:
      </p>
      <pre>
import org.xmlBlaster.client.qos.ConnectQos;
import org.xmlBlaster.client.qos.ConnectReturnQos;
...

ConnectQos qos = new ConnectQos(glob, "william", "secretPwd");

ConnectReturnQos retQos = con.connect(qos, new I_Callback() {

   public String update(String cbSessionId, UpdateKey updateKey,
                        byte[] content, UpdateQos updateQos) {
      ...
      if (updateKey.isInternal()) {
         ...
      }

      if (updateQos.isOk()) {
         ...
      }
      else if (updateQos.isErased()) {
         ...
      }
      return "";
   }

});
      </pre>
   </example>

   <configuration>
   </configuration>

   <see type="REQ">interface</see>
   <see type="API">org.xmlBlaster.client.qos.ConnectQos</see>
   <see type="API">org.xmlBlaster.protocol.xmlrpc.AuthenticateImpl</see>
   <see type="API">org.xmlBlaster.protocol.rmi.AuthServerImpl</see>
   <see type="INTERNET">http://www.xmlBlaster.org/xmlBlaster/src/java/org/xmlBlaster/protocol/corba/xmlBlaster.idl</see>

   <author>xmlBlaster@marcelruff.info</author>
   <date>2002 06 26</date>
   <revision>$Revision: 1.9 $</revision>
   <testcase status="OPEN">
      <name>-</name>
      <comment>This uses the Disconnect but does not test it yet</comment>
      <test tool="SUITE">org.xmlBlaster.test.authentication.TestLogout</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.ConnectQosTest</test>
   </testcase>
</requirement>

