<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='admin.jmx' type='NEW' prio='MEDIUM' status='CLOSED'>

   <topic>XmlBlaster provides an JMX-Interface for monitoring and controlling</topic>

   <description>
      <h2>JMX overview</h2>
      <p>
      <a href="http://java.sun.com/products/JavaManagement/index.jsp" target="others">JMX-support</a>
      (Java Management Extension) is available for xmlBlaster.<br />
      You need to pass some configuration parameters on xmlBlaster startup and you
      are ready to observe the running xmlBlaster from a remote GUI application.
      </p>
      <h3>What is JMX?</h3>
      <p>
      JMX is a Sun standard that allows Java developers to rapidly management
      functionality into existing applications.<br />
      JMX defines a standard for writing JMX objects, also called MBeans.
      MBeans basically represent the state and the functionality of a managed ressource.
      It is possible for a JMX client to invoke methods and access attributes on an MBean.
      A JMX Agent enables manageability of these functionalities from local or remote,
      allowing a system administrator to manage the components of the application.
      </p>
      <img src='jmx-xmlBlaster.gif' border='0' alt='JMX - xmlBlaster integration overview' />
      <p>

      <h3>JMX adaptor overview</h3>
      XmlBlaster provides internal informations using <i>MBean</i> as specified by the JMX specification.
      To access those MBeans there are several adaptors available:
      </p>
      <table border="1">
      <tr>
      <th>Adaptor</th>
      <th>Description</th>
      <th>GUI access</th>
      </tr>

      <tr>
      <td>HtmlAdaptor</td>
      <td>The support is delivered
          ready to go with your xmlBlaster distribution and is available for
          JDK >= 1.3</td>
      <td>Access xmlBlaster from any web browser</td>
      </tr>
      
      <tr>
      <td>jconsole adaptor</td>
      <td>Access xmlBlaster from the jconsole adaptor. You need a JDK runtime 1.5 or newer
          to use jconsole. Nevertheless it is possible to compile xmlBlaster with JDK 1.4 as
          the adaptor is loaded by reflection.</td>
      <td>The <a href="http://java.sun.com/developer/JDCTechTips/2005/tt0315.html#2"
           target="others">jconsole GUI</a> application is delivered with JDK 1.5,
          you don't need to install anything else.</td>
      </tr>
      
      <tr>
      <td>Native xmlBlaster adaptor</td>
      <td>This support uses xmlBlaster own communication protocol listening on port 3424.
          The adaptor is developed by Oliver Neubert and provides a pluggable
          swing GUI to monitor. It is currently not functional.
          Within the "normal" xmlBlaster server instance another embedded xmlBlaster instance is started
          that handles the communication with clients.
          </td>
          <td>
            An administration client implemented with SWING is available.
            It can be found at org.xmlBlaster.jmxgui.<br />
            The user interface is pluggable and new plugins, handling other MBeans, can be
            added to the system.
            To show the usage, two plugins have already been added.
          </td>
      </tr>
      <tr>
      <td>SNMP adaptor</td>
      <td>If you need to monitor xmlBlaster from an existing SNMP aware monitoring
          tool you need to install a SNMP adaptor.
          This is currently only available under commercial licenses from SUN with
          the <a href="http://java.sun.com/products/jdmk/" target="others">Java Dynamic Management Kit JDMK</a>
          (~6000 US$)
          or from AdventNet with the 
          <a href="http://www.adventnet.com/products/snmpadaptor/index.html" target="others">SNMP Adaptor for JMX</a> (~500 US$)
          or <a href="http://www.koshna.com/sales/purchase.asp?product=KSX" target="others">" target="others">Koshna SNMP Toolkit for JMX</a> (~1200 US$)
      </td>
      <td>Any existing SNMP aware monitoring
          tool like <a href="http://www.nagios.org/" target="others">NAGIOS</a>
          or <a href="http://www.managementsoftware.hp.com/" target="others"> HP-OpenView</a>
          can be used as front end.
      </td>
      </tr>
      </table>

     <h3>Changing properties using JMX</h3>
     <p>
     <b>
     Important note:</b> When changing properties with JMX you
     need to be aware what you are doing. Not all configurations
     over JMX have been tested. It is best that you check
     any manipulation first on your reference system.
     </p>
   </description>

   <example lang="any" type="HTML">
      <h1 id="htmladaptor">Observing xmlBlaster with a browser</h1>
      <p>On startup of xmlBlaster you need to switch this adaptor on:</p>
   <pre>
java org.xmlBlaster.Main -xmlBlaster/jmx/HtmlAdaptor true

Open URL
   http://localhost:8082
in your browser.
   </pre>
   <p>This adaptor does not support changing of property names containing '[' or ']'
   as it interprets those as an array. A smart work around is currently not known.
   </p>
   <p>Caution: You should protect remote access of xmlBlaster using the html adaptor
   with a login name and password, see the configuration section below how to do it, here
   is an example (type all in one line):
   </p>
   <pre>
java org.xmlBlaster.Main -xmlBlaster/jmx/HtmlAdaptor true 
                         -xmlBlaster/jmx/HtmlAdaptor/loginName admin
                         -xmlBlaster/jmx/HtmlAdaptor/password secret

Open URL
   http://localhost:8082
in your browser and type in the above credentials.
   </pre>
   <p>Note: You need the <tt>jmxtools.jar</tt> file in your CLASSPATH, if you
   create a distribution add it like
    <tt>build -DADD_JMXTOOLS=true ... dist</tt>
   </p>
   <h3>HTML adaptor screenshot</h3>
   <p>
      <img src='jmx-htmlAdaptor.png' border='0' alt='JMX - xmlBlaster HTML adaptor browser screenshot' />
   </p>
   </example>


   <example lang="any" type="HTML">
      <h1 id="jconsole">Observing xmlBlaster with jconsole</h1>
   <pre>
# Start the server
java -Dcom.sun.management.jmxremote org.xmlBlaster.Main

# Start the GUI:
jconsole
   </pre>
   <p>
   You find the <tt>jconsole</tt> application in the <tt>JAVA_HOME\bin</tt> directory of
   JDK 1.5 or above. Start <tt>jconsole</tt> as the same user and on the same
   computer as the server.
   </p>
   <p>In the MBeans tab of <tt>jconsole</tt> you find the <tt>org.xmlBlaster</tt> root node.
   </p>
   <h3>Remote access</h3>
   <p>For remote access try these settings, take care, in this setup
   you have no access control and anybody could log in:</p>
   <pre>
# Start the server
java -Dcom.sun.management.jmxremote.port=1099
     -Dcom.sun.management.jmxremote.ssl=false
     -Dcom.sun.management.jmxremote.authenticate=false org.xmlBlaster.Main

# Start the GUI:
jconsole service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
   </pre>
   <p>Please replace <tt>localhost</tt> in the above example
    with your computer DNS name or IP address.</p>

   <h3>Simple password protection</h3>
   <p>Now we add simple password protection, first we create a password file
   called <tt>jmxremote.password</tt> with clear text password <tt>secret</tt>
   and one read only and one administrative user:
   </p>
   <pre>
monitorRole secret
controlRole secret
   </pre>
   <p>There is an example password file
   <tt>/opt/jdk1.5.0_04/jre/lib/management/jmxremote.password.template</tt>
   delivered with your JDK which contains some guidance.
   </p>
   <pre>
# Start the server
java -Dcom.sun.management.jmxremote.port=1099
     -Dcom.sun.management.jmxremote.ssl=false
     -Dcom.sun.management.jmxremote.password.file=jmxremote.password
      org.xmlBlaster.Main

# Start the GUI (and enter user=controlRole, password=secret):
jconsole service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
   </pre>
   <p>Note: For remote access of xmlBlaster using jconsole with password or SSL
   protection please consult the
   <a href="http://java.sun.com/j2se/1.5.0/docs/guide/management/agent.html" target="others">
   <tt>jconsole</tt> online documentation</a>.</p>

   <h3>Jconsole screenshot</h3>
   <p>
      <img src='jmx-jconsole.png' border='0' alt='JMX - xmlBlaster jconsole screenshot' />
      </p>
   </example>


   <example lang="any" type="HTML">
      <h1 id="mc4j">Observing xmlBlaster with MC4J GUI</h1>
      <p>The <a href="http://mc4j.sourceforge.net/" target="others">MC4J sourceforge project</a>
      offers an advanced Management Console, here is how to start it:
      </p>
   <pre>
java -Dcom.sun.management.jmxremote
     -Dcom.sun.management.jmxremote.port=8999
     -Dcom.sun.management.jmxremote.ssl=false
     -Dcom.sun.management.jmxremote.authenticate=false org.xmlBlaster.Main

MC4J_Console_1.2b9   (start the GUI, choose 'Create Server Connection' -> 'J2SE 5.0')
   </pre>
   <p>
   You find the jconsole application in the JAVA_HOME\bin directory of
   JDK 1.5 or above. Start jconsole as the same user and on the same
   computer as the server.
   </p>
   <p>In the MBeans tab of jconsole you find the <tt>org.xmlBlaster</tt> root node.
   </p>
   <p>Note: The above example is unprotected, you definitely need to configure SSL protection!</p>

   <h3>MC4J screenshot</h3>
   <p>
      <img src='jmx-MC4J.png' border='0' alt='JMX - xmlBlaster MC4J screenshot' />
      </p>
   </example>


   <configuration where="server">
      <p>
         JMX is configured in the <tt>xmlBlaster.properties</tt> configuration file
         or on command line.
      </p>

    <table border="1">
       <tr>
         <th>Id (name)</th>
         <th>Type</th>
         <th>Manda
         tory</th>
         <th>Default value</th>
         <th>Comment</th>
       </tr>

       <tr>
         <td>java -Dcom.sun.management.jmxremote</td>
         <td>String</td>
         <td>no</td>
         <td>-</td>
         <td>
         If given as system property the jconsole monitoring support is switched on.
         </td>
       </tr>
       <tr>
         <td>xmlBlaster/jmx/HtmlAdaptor</td>
         <td>String</td>
         <td>no</td>
         <td>false</td>
         <td>
         HTML adaptor: Switch on with 'true'.
         </td>
       </tr>
       <tr>
         <td>xmlBlaster/jmx/hostname</td>
         <td>String</td>
         <td>no</td>
         <td>localhost</td>
         <td>
         HTML adaptor: Configures the hostname, where to listen for HTTP requests.
         </td>
       </tr>
       <tr>
         <td>xmlBlaster/jmx/port</td>
         <td>int</td>
         <td>no</td>
         <td>8082</td>
         <td>
         HTML adaptor: Configures the port, where to listen for HTTP requests.
         </td>
       </tr>
       <tr>
         <td>xmlBlaster/jmx/HtmlAdaptor/loginName</td>
         <td>String</td>
         <td>no</td>
         <td>null</td>
         <td>
         HTML adaptor: If given the access is restricted to the given user
         </td>
       </tr>
       <tr>
         <td>xmlBlaster/jmx/HtmlAdaptor/password</td>
         <td>String</td>
         <td>no</td>
         <td>secret</td>
         <td>
         HTML adaptor: The password, needed only if xmlBlaster/jmx/HtmlAdaptor/loginName!=null
         </td>
       </tr>
       <tr>
         <td>xmlBlaster/jmx/XmlBlasterAdaptor</td>
         <td>String</td>
         <td>no</td>
         <td>false</td>
         <td>
         XmlBlaster native adaptor: true switches it on.
         </td>
       </tr>
    </table>
   </configuration>

   <todo type="HTML">
    <ol>
      <li>Write some test cases</li>
      <li>Fix native XmlBlaster adaptor</li>
      <li>Strip down embedded xmlBlaster to minimum</li>
      <li>Write some jmxgui plugins</li>
      <li>Find a free SNMP adaptor</li>
      <li>Add notifications</li>
      <li>Add client observation (C/C++/Java clients over internal messages)</li>
      <li>Fix XmlBlasterException (-> Exception)</li>
      <li>Add attribute help, see descriptions like 
         TopicHandlerMBeanDescription in http://mx4j.sourceforge.net/docs/ch04.html or
         XDoclet http://mx4j.sourceforge.net/docs/ch07s15.html#N11001</li>
      <li>Add email notification, e.g. with MX4J http://mx4j.sourceforge.net/docs/ch06s10.html</li>
      <li>Add ManageEngine example, connected over MX4J RMI connector</li>
    </ol>
   </todo>

   <see type="REQ">admin.commands</see>
   <see type="INTERNET" label="JMX homepage">http://java.sun.com/products/JavaManagement/index.jsp</see>
   <see type="INTERNET" label="JMX tutorial">http://java.sun.com/developer/EJTechTips/2005/tt0222.html#1</see>
   <see type="INTERNET" label="JMDK homepage">http://java.sun.com/products/jdmk/</see>
   <see type="INTERNET" label="MC4J homepage">http://mc4j.sourceforge.net/</see>

   <author>oliver.neubert@doubleslash.de</author>
   <author>xmlblast@marcelruff.info</author>
   <hacker>xmlblast@marcelruff.info</hacker>
   <date>2003 06 10</date>
   <revision>$Revision: 1.1 $</revision>

   <testcase status="OPEN">
      <name></name>
      <comment>
      </comment>
      <test tool="SUITE"></test>
   </testcase>

</requirement>
