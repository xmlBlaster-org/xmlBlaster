<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">


<requirement id='queue.jdbc.ldbc' type='NEW' prio='LOW' status='INWORK'>
   <topic>
     JDBC Plugin which stores all queues in a common table using Liberty Database Connectivity Abstraction.
   </topic>

   <description>
      <p>The Liberty data base connectivity package <a href="http://ldbc.sourceforge.net/">http://ldbc.sourceforge.net/</a>
      provides vendor-independant database access. The <i>org.xmlBlaster.util.queue.jdbc.LdbcQueueCommonTablePlugin</i>
      is based on <i>JdbcQueueCommonTablePlugin</i> with changes to accomodate syntax and functionality differences only.
      <b>This code is currently beta and has only been tested with MySQL, Postgres and Hsqldb. Hsqldb is known NOT to work 
      at present.</b>
      </p>
      <p><a href="queue.jdbc.commontable.html">See queue.jdbc.commontable</a> for a description of the common table architecture.
      </p>
   </description>
   
   <example lang="Java" type="HTML">
      <p>This is a configuration example from xmlBlaster.properties:
      </p>
      Configuration for the ldbc plugin in debug mode.
      <pre>
JdbcStorage[MySQL]=org.xmlBlaster.util.queue.jdbc.LdbcQueueCommonTablePlugin,\
           url=jdbc:ldbc:mysql://localhost/xmlb[ldbc.trace=detailed],\
      </pre>
      <p>It is not possible to use the ldbc trace to file functionality as the parameter format
      to pass the file name to ldbc will break xmlBlasters parameter parsing.
      </p>
      <p>[ldbc.trace=on] Method calls, parameters, exceptions and statements.</p>
      <p>[ldbc.trace=detailed] All of On plus prepared statement and result set calls.</p>
      <p>[ldbc.trace=off] Default is off.</p>
      <p><a href="queue.jdbc.mysql.html">See queue.jdbc.mysql</a> for a full configuration example.
      </p>
   </example>
   <configuration where="server">
     <p>To activate persistence please add the following to your properties file:
     </p>
     <pre>
persistence/topicStore/defaultPlugin=JDBC,1.0
persistence/msgUnitStore/defaultPlugin=CACHE,1.0

QueuePlugin[JDBC][1.0]=org.xmlBlaster.util.queue.jdbc.LdbcQueueCommonTablePlugin,\
                    url=jdbc:ldbc:mysql://localhost/xmlb,\
                    user=xmlb,\
                    password=secret,\
                    connectionPoolSize=1,\
                    connectionBusyTimeout=90000,\
                    maxWaitingThreads=300,\
                    tableNamePrefix=XB_,\
                    nodesTableName=NODES,\
                    queuesTableName=QUEUES,\
                    entriesTableName=ENTRIES,\
                    dbAdmin=true
                    
QueuePlugin[RAM][1.0]=org.xmlBlaster.util.queue.ram.RamQueuePlugin
QueuePlugin[CACHE][1.0]=org.xmlBlaster.util.queue.cache.CacheQueueInterceptorPlugin,\
persistentQueue=JDBC,transientQueue=RAM

queue/subject/defaultPlugin=CACHE,1.0
queue/history/defaultPlugin=CACHE,1.0
queue/callback/defaultPlugin=CACHE,1.0
useTopicStore=true

JdbcDriver.drivers=org.ldbc.jdbc.jdbcDriver

#The default mapping below can not be changed when using the ldbc plugin
#This line is informational only and will break the parser because of the decimal(19,0) entry.
#JdbcDriver.mapping[ALL]=string=varchar(128),longint=decimal(19,0),int=int,boolean=char(1),\
#blob=blob,keyAttr=not null,blobVarName=ablob
     </pre>
     <table border="1">
        <tr>
          <td><b>Property</b></td>
          <td><b>default</b></td>
          <td><b>comment</b></td>
        </tr>
        <tr>
          <td>persistence/topicStore/defaultPlugin</td>
          <td>JDBC,1.0</td>
          <td>The default persistance topic store plugin.</td>
        </tr>
        <tr>
          <td>persistence/msgUnitStore/defaultPlugin</td>
          <td>CACHE,1.0</td>
          <td>The default persistance message unit store plugin.</td>
        </tr>
        <tr>
          <td>url</td>
          <td>jdbc:ldbc:mysql://localhost/xmlb</td>
          <td>The database url string. Example jdbc:ldbc:mysql://localhost:3306/xmlb</td>
        </tr>
        <tr>
          <td>user</td>
          <td>xmlb</td>
          <td>The database user name.</td>
        </tr>
        <tr>
          <td>password</td>
          <td>secret</td>
          <td>The database password</td>
        </tr>
        <tr>
            <td>connectionPoolSize</td>
            <td>1</td>
            <td>The number of connections to the DB (tests showed that a low number gives the best performance).</td>
        </tr>
        <tr>
            <td>connectionBusyTimeout</td>
            <td>90000</td>
            <td>The time to wait in milliseconds until to timeout when waiting for a connection to the DB.</td>
        </tr>
        <tr>
            <td>maxWaitingThreads</td>
            <td>300</td>
            <td>The maximum number of threads waiting for a connection to the DB.</td>
        </tr>
        <tr>
          <td>tableNamePrefix</td>
          <td>XB_</td>
          <td>the name prefix for the table containing the entries. Note that the complete names for the 
              tables are created by adding the tableNamePrefix to the names. So if you specify 
              <i>nodeTableName=NODES</i> and <i>tableNamePrefix=XB_</i> you will get the name of the table 
              to be <i>XB_NODES</i>.
          </td>
        </tr>
        <tr>
          <td>nodeTableName</td>
          <td>NODES</td>
          <td>the name postfix for the table containing the cluster nodes.</td>
        </tr>
        <tr>
          <td>queueTableName</td>
          <td>QUEUES</td>
          <td>the name postfix for the table containing the queues.</td>
        </tr>
        <tr>
          <td>entriesTableName</td>
          <td>ENTRIES</td>
          <td>the name postfix for the table containing the entries.</td>
        </tr>
        <tr>
          <td>dbAdmin</td>
          <td>true</td>
          <td>if set to true xmlBlaster will try to create tables if needed.</td>
        </tr>
        <tr>
            <td>maxStatementLength</td>
            <td>2048</td>
            <td>The maximum SQL statement length supported by this JDBC driver.
            If the JDBC meta data delivers this information this property is ignored.</td>
         </tr>
         <tr>
            <td>enableBatchMode</td>
            <td>true</td>
            <td>Tells the driver to make the addition of entries in batch mode, i.e. several entries are
	        added in the same sweep. This can improve performance on some DB's significantly. The 
		drawback is that it could loose performance and create noisy logs in the case you insert
		several entries and one of them is already in the DB. Then everything would be rolled back
		and repeated in single mode (we can not save the current state since PostGres implicitly
		aborts transactions in case of an SQLException is thrown). If the DB used does not support
		batch mode, then this option is ignored.
	          </td>
         </tr>
         <tr>
          <td>QueuePlugin[RAM][1.0]</td>
          <td>org.xmlBlaster.util.queue.ram.RamQueuePlugin</td>
          <td>Ram based plugin.</td>
        </tr>
        <tr>
          <td>QueuePlugin[CACHE][1.0]</td>
          <td>CacheQueueInterceptorPlugin,<br></br>persistentQueue=JDBC,<br></br>transientQueue=RAM</td>
          <td>Cache plugin.</td>
        </tr>
         <tr>
          <td>queue/subject/defaultPlugin</td>
          <td>CACHE,1.0</td>
          <td>The queue subject default plugin.</td>
        </tr>
        <tr>
          <td>queue/history/defaultPlugin</td>
          <td>CACHE,1.0</td>
          <td>The queue history default plugin.</td>
        </tr>
        <tr>
          <td>queue/callback/defaultPlugin</td>
          <td>CACHE,1.0</td>
          <td>The queue callback default plugin.</td>
        </tr>
        <tr>
          <td>useTopicStore</td>
          <td>false</td>
          <td>Use the topic store.</td>
        </tr>
     </table>
   </configuration>

   <see type="API">org.xmlBlaster.util.queue.I_Queue</see>
   <see type="API">org.xmlBlaster.util.queue.jdbc.JdbcQueueCommonTablePlugin</see>
   <see type="API">org.xmlBlaster.util.queue.jdbc.LdbcQueueCommonTablePlugin</see>
   <see type="API">org.xmlBlaster.util.queue.QueuePluginManager</see>
   <see type="API">org.xmlBlaster.util.queue.I_QueueEntry</see>
   <see type="API">org.xmlBlaster.util.qos.storage.QueuePropertyBase</see>
   <see type="API">org.xmlBlaster.util.I_Plugin</see>
   <see type="API">org.xmlBlaster.util.Global</see>
   <see type="REQ">queue</see>
   <see type="REQ">queue.jdbc.mysql</see>

   <author>Peter Bennett</author>
   <date>2003 11 05</date>
   <revision>$Revision: 1.1 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.I_QueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.JdbcQueueTest</test>
   </testcase>
</requirement>

