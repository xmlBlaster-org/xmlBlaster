<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='queue.jdbc.mysql' type='NEW' prio='MIDDLE' status='CLOSED'>
   <topic>
        XmlBlaster has an advanced queuing facility.
		  Among others one tested persistence layer is offered by
        communicating with a MySQL database.
		  Warning MySQL integration is still under development.
		  Use at your own risk
    </topic>
    <description>
       <p>The generic plugin for jdbc based queues has been tested against MySQL Server by
        Peter Bennett (bencom@bencom.co.nz).</p>
        <p>MySQL Server is available from <a href='http://www.mysql.org/' target='others'>http://www.mysql.org/</a>
        where you can find all necessary information and instructions on how to make MySQL Server run.
        </p>
        <p>Once you have a running database you can configure xmlBlaster to make it run against it.
        First you need to download the jdbc driver.
		  <a href='http://www.mysql.com/downloads/api-jdbc.html' target='others'>http://www.mysql.com/downloads/api-jdbc.html</a>
		  You must put these files in the CLASSPATH (for example you can put them into $XMLBLASTER_HOME/lib 
		  and add them to the CLASSPATH or in your runtime library directory jre/lib/ext/.
        </p>
        <h3>Setup MySQL Server</h3>
		  <ol>
		  <li>Note some default installs disable MySQL Networking. See /etc/mysql/my.cnf [mysqld] skip-networking</li>
		  <li>Also increase the Maximum Packet Size. [mysqld] max_allowed_packet MySQL Default on Debian Woody is 1M (meg) xmlBlaster will fail some tests with a setting below 2M</li>
		  <li>Create the database to be used. mysql; create database xmlb;</li>
        <li>Setup xmlBlaster.properties as described in the example section below</li>
		  </ol>
    </description>
    <example lang="Java" type="HTML">
    <p>This is a configuration example from xmlBlaster.properties:
    </p>
    <pre>
   JdbcStorage[MySQL]=org.xmlBlaster.util.queue.jdbc.JdbcQueueCommonTablePlugin,\
      url=jdbc:mysql://localhost:3306/xmlb,\
      user=mysql,\
      password=secret,\
      connectionPoolSize=1,\
      connectionBusyTimeout=90000,\
      maxWaitingThreads=300,\
      tableNamePrefix=XB_,\
      nodesTableName=NODES,\
      queuesTableName=QUEUES,\
      entriesTableName=ENTRIES,\
      dbAdmin=true

   StoragePlugin[JDBC][1.0]=${JdbcStorage[MySQL]
   QueuePlugin[JDBC][1.0]=${JdbcStorage[MySQL]}

   JdbcDriver.drivers=com.mysql.jdbc.Driver:\
      org.postgresql.Driver

   JdbcDriver.mapping[MySQL]=string=varchar(128),longint=bigint,\
      int=int,boolean=char(1),blob=blob,keyAttr=not null,blobVarName=ablob
    </pre>
   </example>
   <configuration where="server">

      <p>
      These parameters allow you to configure a cache queue running with MySQL Server
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default</th>
            <th>Description</th>
            <th>Hot</th>
            <th>Impl</th>
         </tr>
         <tr>
            <td>QueuePlugin[CACHE][1.0]</td>
            <td>org.xmlBlaster.util.queue.cache.CacheQueueInterceptorPlugin</td>
            <td>specifies the cache implementing class to be used</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/maxEntries</td>
            <td>1000</td>
            <td>specifies the maximum number of entries allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/maxBytes</td>
            <td>10485760</td>
            <td>(10MB) specifies the maximum total size allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/persistent/url</td>
            <td>jdbc:mysql://localhost:3306/xmlb</td>
            <td>the url which specifies where to find the DB.</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
            <tr>
            <td>queue/persistent/user</td>
            <td>mysql</td>
            <td>The db user under which to run</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue/persistent/password</td>
            <td>secret</td>
            <td>The password used together with the user 'xmlblaster'</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>

        </table>
        Additionally the configuration parameters for the ram queue and the jdbc queue must be defined.
   </configuration>

   <see type="API">org.xmlBlaster.util.queue.I_Queue</see>
   <see type="API">org.xmlBlaster.util.queue.jdbc.CacheQueuePlugin</see>
   <see type="API">org.xmlBlaster.util.queue.QueuePluginManager</see>
   <see type="API">org.xmlBlaster.util.queue.I_QueueEntry</see>
   <see type="API">org.xmlBlaster.util.qos.storage.QueuePropertyBase</see>
   <see type="API">org.xmlBlaster.util.I_Plugin</see>
   <see type="API">org.xmlBlaster.util.Global</see>
   <see type="REQ">queue</see>

   <author>bencom@bencom.co.nz</author>
   <date>2003 07 11</date>
   <revision>$Revision: 1.1 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.I_QueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.JdbcQueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.CacheQueueTest</test>
   </testcase>
</requirement>

