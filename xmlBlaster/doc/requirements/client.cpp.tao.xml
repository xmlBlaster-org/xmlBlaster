<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='client.cpp.tao' type='NEW' prio='LOW' status="CLOSED">
   <topic>C++ client can access xmlBlaster with the TAO Corba library</topic>

   <description>
     <p>
     There is support for TAO to access xmlBlaster from CORBA clients.
     </p>
     <p>
     Support was developed against TAO 1.2.2 and TAO 1.3. There should be no problem with
     versions prior to this. Make sure to follow the TAO installation instructions.
     Most of all make, sure to have the ACE_ROOT, TAO_ROOT environment vars set correctly.
     The ant build file relies on them being there. 
     </p>
   </description>

   <example lang="CPP" type="HTML">
      <p>Needed components from TAO for xmlBlaster:</p>
      <table border="1">
       <tr>
       <th>Component</th>
       <th>Description</th>
       </tr>
       
       <tr>
       <td>TAO windows only</td>
       <td>When building TAO please be sure to use the %TAO_ROOT%/TAOACE (dsw/sln) project file.
       You are not required to build all of the sub projects located within this project. To build ALL libraries
       and executables required by xmlBlaster please select CosNaming as the sub project to build. 
       You will of course need to build both release and debug versions if you should so require. 
       Any deviation from the %TAO_ROOT%/TAOACE project file is likely to cause file linking problems
       with cpp-tasks enforcing case sensitivity of library file names.
           </td>
           </tr>

       <tr>
       <td>ACE</td>
       <td>The ACE library is needed by TAO. </td>
       </tr>

       <tr>
       <td>TAO</td>
       <td>The TAO core is needed.</td>
       </tr>
       
       <tr>
       <td>TAO_IDL</td>
       <td>The TAO IDL compiler needs to be compiled.</td>
       </tr>

       <tr>
       <td>apps/gperf/src</td>
       <td>The TAO IDL compiler needs the gperf tool.</td>
       </tr>

       <tr>
       <td>TAO/orbsvcs</td>
       <td>From the CORBA services only the CosNaming service is needed.</td>
       </tr>
      </table>
   </example>

   <configuration where="client">
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default / Example</th>
            <th>Description</th>
            <th>Implemented</th>
         </tr>

         <tr>
            <td>-</td>
            <td>-</td>
            <td>-</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
      </table>
      <p>
         To compile you can use the xmlBlaster/build.xml file.
      </p>
      <p>
         Please take a copy from xmlBlaster/build.properties into
         your home directory (it has precedence there) and adjust
         the path settings to find CORBA and the XML parser. Example:
      </p>
      <pre>
#------------------------------------------------------------------------------
# C++ UNIX example with ACE+TAO 1.3 and xerces 2.2 using g++ 3.2
XMLCPP_HOME   = /opt/xerces-c-src2_2_0-bin
XMLCPP_VER    = 
corba.product = TAO
CORBACPP_HOME = /opt/ACE_wrappers/TAO
CORBACPP_VER  = 
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# C++ Windows example with ACE+TAO 1.3 and xerces 2.2 using VC++ 7
use-msvc      = 1
XMLCPP_HOME   = C:/Dev/xerces-c2_2_0-win32
XMLCPP_VER    = _2
corba.product = TAO
CORBACPP_HOME = C:/Dev/ACE_wrappers/TAO
idl.cmd       = C:/Dev/ACE_wrappers/bin/tao_idl.exe
CORBACPP_VER  = 
#------------------------------------------------------------------------------
      </pre>
      <p>
         Compile it with ant:
      </p>
      <pre>
cd xmlBlaster
build -verbose cpp

This creates:
   xmlBlaster\src\c++\tao_build\xmlBlasterClient.dll
and some test clients in
   xmlBlaster\testsuite\src\c++\bin
      </pre>
   </configuration>

   <configuration where="client">
      <h3>Howto configure/access the TAO Nameservive</h3>
      <p>
      This is a cut and paste from the TAO mailing list:
      </p>
      <pre>
Hi omon
if you turned off the multicast option by defining -m 0 and I think thats
the default
 option. you must tell your client how to obtain the reference for the
naming service.

 first run the naming service with the option
  -orbendpoint iiop://1.2@[hostname]:[portnumber]
 which causes nameservice the listen  the requests at designated port
then run your client with
 -orbinitref
NameService=corbaloc:iiop:1.2@[hostname]:[portnumber]/NameService
 this will add the NameService ior to the orbs' initial reference table .

 then you will be able to resolve to initial reference for your nameservice.
 if you dont give the reference your client try the resolve the reference
with multicast opton
 as last resort which is non standart and likely the fail in certain
situations.

 have look at the readme file at the naming_service folder of your ACE+TAO
distribution
 for further   information.

 Hürcan Solter
   </pre>
   </configuration>

   <todo type='HTML'>
      <p>
      Testsuite is missing.
      </p>
   </todo>
   
   <see type="INTERNET">http://www.cs.wustl.edu/~schmidt/TAO.html</see>
   <see type="INTERNET">http://www.xmlblaster.org/xmlBlaster/doc/doxygen/c++/namespaces.html</see>
   <see type="REQ">client.cpp</see>
   <see type="REQ">client.cpp.compile</see>
   
   <author>Martin Johnson, mjhn@bigpond.net.au</author>
   
   <date>2002 08 27</date>
   
   <revision>$Revision: 1.13 $</revision>

   <testcase status="OPEN">
      <name>-</name>
      <comment></comment>
      <test tool="SUITE"></test>
   </testcase>
</requirement>

