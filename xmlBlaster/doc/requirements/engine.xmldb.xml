<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='engine.xmldb' type='NEW' prio='HIGH' status="INWORK">
   <topic>The XmlBlaster stores MessageUnits persistent in a xmldb. The persistence is controlled by a QoS-Flag.</topic>
   
   <description>
      <![CDATA[
      <p>
      The xmldb is a transparent layer and a persistence for the xmlBlaster.
      MessageUnits are stored in a file-database if the QoS-Tag &lt;isDurable /&gt;
      is set. MessageUnits are cached in the memory and mapped on the 
      disk with COPY-BACK-Caching. The xmldb contains of a memory-cache
      ,file-database and a DOM which contanis the XmlKey. The settings
      for the xmldb can be done in the xmlBlaster.properties.<p>
      Caching:<br>
      The caching strategy used is "least recently used" (LRU). If the
      cache has reached the max. Cachesize, then the cache will be swapped
      each MessageUnit with LRU to the file-database.<p>
      Dom:<br>
      A DOM-Tree contains all XmlKey's for each MessageUnits in the cache
      and file-database.<p>

      Persistence:<br>
      If the Qos-Flag &lt;isDurable/&gt; is set, the xmldb writes the MessageUnit
      in a file with write-through-strategy. 
       ]]>     
   </description> 

   <example>
      <![CDATA[
        -----------------------------------------------
       |The settings in the xmlBlaster.properties-file |
        -----------------------------------------------
       xmldb.Cachesize=3000000        # 3MByte Cachsize
       xmldb.Dbpath=${user.home}/tmp
       xmldb.Messagesize=5000         # 5KByte Messagesize


       Example: 

       XmlDb xmldb = new XmlDb();        // Get a xmldb-instance
       xmldb.setMaxCacheSize(2000000L);  // The max. cachesize in Byte
 
       PublishQosWrapper qos = new PublishQosWrapper(true); // = <qos><isDurable /></qos>

       // Construct a MessageUnit which is persistent.
       String xmlKey = "<key oid='sender'>\n" +
                          "<person pid='10' gid='200'>" +
                             "<name age='31' sex='f'>Lisa</name>"+
                          "</person>" +
                       "</key>";
       String content = "Lisa's content";

       MessageUnit       mu = new MessageUnit(xmlKey, contentgetBytes(), qos);
 
       xmldb.insert(mu);   // Insert the MessageUnit to xmldb.
       xmldb.get(oid);     // Get the MessageUnit by oid.

       Enummeration muIter xmldb.query("//key[@oid="100"); // Query by XPATH

       xmldb.delete(oid);     // Delete MessageUnit from db by oid.
 
       xmldb.showCacheState() // Shows you the current state of the cache.
 

   ]]>
   </example>
   <author>manuel.kron@gmx.net</author>
   <date>2000 07 16</date>
   <revision>$Revision: 1.3 $</revision>
</requirement>
