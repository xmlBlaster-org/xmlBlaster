<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">


<requirement id='queue.cache' type='NEW' prio='HIGH' status='CLOSED'>
   <topic>
        XmlBlaster provides a generic cache plugin for storing queue entries on a database and at the same offer
        caching facility for better performance.
    </topic>
    <description>
       <p>The CacheQueueInterceptorPlugin offers the ability to store messages persistently on databases. In case
       a crash occurs, data will be recovered. Since it embeds a jdbc queue and a ram queue, it has the
       ability to cache entries on ram, improving this way the performance. On demand it is possible to inhibit 
       swapping.</p>
       
       
       
       
    </description>

    <example lang="Java" type="HTML">
       These are example QoS of subscribe() invocations:
       <pre>
           &lt;qos>
               &lt;queue maxCacheMsg='1000' maxCacheSize='4000'  maxMsg='10000' maxSize='1000000000' onOverflow='deadMessage'/>
           &lt;/queue>
       </pre>
   </example>
   <configuration where="server">

      <p>
      These parameters allow to configure a cache queue
      </p>
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Default</th>
            <th>Description</th>
            <th>Hot</th>
            <th>Impl</th>
         </tr>
         <tr>
            <td>QueuePlugin[CACHE][1.0]</td>
            <td>org.xmlBlaster.util.queue.cache.CacheQueueInterceptorPlugin</td>
            <td>specifies the cache implementing class to be used</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue.maxMsg</td>
            <td>1000</td>
            <td>specifies the maximum number of entries allowed in the ram portion of this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue.maxSize</td>
            <td>2097152</td>
            <td>(2MB) specifies the maximum total size for the ram portion allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue.persistent.maxMsg</td>
            <td>1000</td>
            <td>specifies the maximum number of entries allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue.persistent.maxSize</td>
            <td>2097152</td>
            <td>(2MB) specifies the maximum total size allowed in this queue</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
         <tr>
            <td>queue.cache.storeSwapLevel</td>
            <td>70 % of the cacheMaxSize in bytes</td>
            <td>The level in bytes over which the cache queue starts swapping, i.e. it will start to take from the ram and put in jdbc storage.</td>
            <td><img src="no.gif" border="0" alt="no" /></td>
            <td><img src="no.gif" border="0" alt="no" /></td>
         </tr>
         <tr>
            <td>queue.cache.storeSwapSize</td>
            <td>25 % of the cacheMaxSize in bytes</td>
            <td>The amount in bytes to swap each time data must be moved from ram to jdbc storage.</td>
            <td><img src="no.gif" border="0" alt="no" /></td>
            <td><img src="no.gif" border="0" alt="no" /></td>
         </tr>
         <tr>
            <td>queue.cache.reloadSwapLevel</td>
            <td>30 % of the cacheMaxSize in bytes</td>
            <td>The level in bytes under which which the cache queue starts reloading data from the persistence and puts it in the ram queue.</td>
            <td><img src="no.gif" border="0" alt="no" /></td>
            <td><img src="no.gif" border="0" alt="no" /></td>
         </tr>
         <tr>
            <td>queue.cache.reloadSwapSize</td>
            <td>25 % of the cacheMaxSize in bytes</td>
            <td>The amount in bytes to swap each time data must be moved from jdbc to ram storage.</td>
            <td><img src="no.gif" border="0" alt="no" /></td>
            <td><img src="no.gif" border="0" alt="no" /></td>
         </tr>
         <tr>
            <td>queue.cache.transientQueue</td>
            <td>RAM,1.0</td>
            <td>The implementation to be used for the transient portion of the cache queue.</td>
            <td><img src="no.gif" border="0" alt="no" /></td>
            <td><img src="no.gif" border="0" alt="no" /></td>
         </tr>
         <tr>
            <td>queue.cache.persistentQueue</td>
            <td>JDBC,1.0</td>
            <td>The implementation to be used for the persistent portion of the cache queue.</td>
            <td><img src="no.gif" border="0" alt="no" /></td>
            <td><img src="no.gif" border="0" alt="no" /></td>
         </tr>
         
        </table>
        Additionally the configuration parameters for the ram queue and the jdbc queue must be defined.
   </configuration>

   <see type="API">org.xmlBlaster.util.queue.I_Queue</see>
   <see type="API">org.xmlBlaster.util.queue.jdbc.CacheQueuePlugin</see>
   <see type="API">org.xmlBlaster.util.queue.QueuePluginManager</see>
   <see type="API">org.xmlBlaster.util.queue.I_QueueEntry</see>
   <see type="API">org.xmlBlaster.engine.helper.QueuePropertyBase</see>
   <see type="API">org.xmlBlaster.util.I_Plugin</see>
   <see type="API">org.xmlBlaster.util.Global</see>
   <see type="REQ">queue</see>

<!--   <see type="REQ">cluster</see> -->
   <author>laghi@swissinfo.org</author>
   <date>2002 11 17</date>
   <revision>$Revision: 1.1 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.I_QueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.JdbcQueueTest</test>
      <test tool="SUITE">org.xmlBlaster.test.classtest.queue.CacheQueueTest</test>
   </testcase>
</requirement>

