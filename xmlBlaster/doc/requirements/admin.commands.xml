<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='admin.commands' type='NEW' prio='MEDIUM' status="CLOSED">
   <topic>Description of the available commands for remote administration of xmlBlaster</topic>
   <description>
     <p>
     XmlBlaster has an internal command interface which allows to
     monitor and control the server. You can connect to this command
     interface with arbitrary administration protocols like SNMP,
     telnet, JMX or xmlBlaster-command-messages.
     </p>
     <h3>
     What data can we monitor and control?
     </h3>
     <p>
     To understand the command syntax imagine a simple xml representation of xmlBlaster nodes
     (an xmlBlaster node is an xmlBlaster server instance in a cluster environment, read
     the <a href="cluster.html">cluster requirement</a> for more informations):
     </p>
     <pre><!-- pre class="BORDER" netscape does not like this --><![CDATA[
<node>
   <numNodes>5</numNodes>
   <nodeList>heron,avalon,golan,frodo,bilbo</nodeList>
   <heron>
      <uptime>34000</uptime>      <!-- sec -->
      <runlevel>9</runlevel>
      <freeMem>13000000</freeMem> <!-- bytes -->
      
      <nodeId>heron</nodeId>
      <version>0.79f</version>
      
      <hostname>server.mycomp.com</hostname>
      <port>3412</host>

      <buildTimestamp>06/17/2002 01:59 PM</buildTimestamp>
      <buildJavaVendor>Sun Microsystems Inc.</buildJavaVendor>
      <buildJavaVersion>1.3.1-beta</buildJavaVersion>
      <time>Mon Jun 17 15:54:16 CEST 2002<time/> <!-- server time -->
      <gc/>   <!-- run garbage collector in xmlBlaster JVM -->
      <exit/> <!-- exit xmlBlaster server -->

      <dump>heronDump.txt</dump>

      <numClients>4</numClients>
      <maxClients>10000</maxClients>
      <clientList>joe,jack,averell,william</clientList>
      <client>
         <joe>
            <uptime>10050</uptime>

            <cbQueueNumMsgs>247</cbQueueMumMsgs>
            <cbQueueMaxMsgs>1000</cbQueueMaxMsgs>

            <numSessions>2</numSessions>
            <maxSessions>10</maxSessions>
            <sessionList>ses3,ses17</sessionList>
            <ses17>
               <uptime>10050</uptime>

               <numPublished>4</numPublished>
               <numGets>7</numGets>
               <numUpdates>614050</numUpdates>

               <cbQueueNumMsgs>37</cbQueueNumMsgs>
               <cbQueueMaxMsgs>1000</cbQueueMaxMsgs>
               <cbQueueThreshold>80</cbQueueThreshold> <!-- 80% -->
               <cbQueueThresholdOverflow>numMsg=199,
                 maxMsg=203</cbQueueThresholdOverflow> <!-- a trap -->
            </ses17>

            <ses32>
               ...
            </ses32>
         </joe>

         <jack>
            ...
         </jack>

      </client>

      <numSysprop>117</numSysprop>
      <syspropList>java.io.tmpdir,java.vm.version,...</syspropList>
      <sysprop>
         <java.io.tmpdir>/tmp</java.io.tmpdir>
         <java.vm.version>1.3.1</java.vm.version>
         <user.language>es</user.language>
         <Persistence.Path>/home/mom/data</Persistence.Path>
         ...
      </sysprop>

      <numMsgs>7140</numMsgs>
      <msgList>hello,radar.track,myMessage,...</msgList>
      <msg>
         <hello>
            <key></key>
            <content>world</content>
            <qos></qos>
         </hello>

         <radar.track>
            ...
         </radar.track>
      </msg>
   </heron>

   <avalon>
      ...
   </avalon>
</node>
     ]]></pre>

      <p>
         As you have probably noticed, the tree syntax is a mixture of class names
         like <i>node</i> or <i>client</i> and instance names
         like <i>heron</i> or <i>joe</i>. This is conceptually a bit strange
         but it resulted in a simple view of xmlBlaster so we have chosen it like this.
      </p>
      <p>
         Lets have a look at the xmlBlaster cluster node <i>heron</i>. This is 
         an xmlBlaster server running somewhere on the net (<i>server.mycomp.com:3412</i>).<br />
         <i>heron</i> has its own attributes like <i>uptime</i> and <i>freeMem</i>
         which are leafs in the tree. In addition <i>heron</i> has tags which
         have children themselves, more exact the tags:
      </p>
      <ol>
        <li><i>client</i> Allows you to survey the logged in clients</li>
        <li><i>sysprop</i> Inspect the system properties, xmlBlaster.properties and command line arguments</li>
        <li><i>msg</i> Examine or manipulate the messages in xmlBlaster</li>
      </ol>
      <h3>
         What is allowed to do with these attributes?
      </h3>
      <table border="1">
         <tr>
            <td>Command</td>
            <td>Description</td>
            <td>MOM</td>
            <td>telnet</td>
            <td>SNMP</td>
            <td>JMX</td>
            <td>Impl</td>
         </tr>
         <tr>
            <td>GET</td>
            <td>We can read all attributes</td>
            <td>get()</td>
            <td>get</td>
            <td>get</td>
            <td>getAttributes()</td>
            <td>only telnet</td>
         </tr>
         <tr>
            <td>SET</td>
            <td>We can write/change selective attributes</td>
            <td>publish()</td>
            <td>set</td>
            <td>set</td>
            <td>setAttributes()</td>
            <td>only telnet</td>
         </tr>
         <tr>
            <td>SUBSCRIBE</td>
            <td>We can subscribe for change events on selective attributes</td>
            <td>subscribe()</td>
            <td>subscribe</td>
            <td>trap</td>
            <td>Notification</td>
            <td>no</td>
         </tr>
         <tr>
            <td>POLL</td>
            <td>We can ask xmlBlaster to send us the current value of an attribute
               for example every 10 seconds (every specified amount of cycle time)</td>
            <td>subscribe()</td>
            <td>poll</td>
            <td>trap</td>
            <td>Notification</td>
            <td>no</td>
         </tr>
         <tr>
            <td>SCHEDULE</td>
            <td>We can ask xmlBlaster to send us the current value of an attribute
              on fixed times, for example always at midnight</td>
            <td>subscribe()</td>
            <td>schedule</td>
            <td>trap</td>
            <td>Notification</td>
            <td>no</td>
         </tr>
      </table>

      <p>The column <i>Impl</i> states if the feature is implemented.</p>
      <p>For JMX the DynamicMBean and Notification interface is used.</p>

      <h3>
         How can we query these attributes?
      </h3>
      <p>
         The following table gives an overview of the query syntax, it
         is URL conforming to allow direct queries from a browser
         and it is simple to allow typing it into a telnet terminal.
      </p>
      <table border="1">
         <tr>
            <td>Command</td>
            <td>Description</td>
         </tr>
         <tr>
            <td>/node/?numNodes</td>
            <td>Query the number of xmlBlaster cluster nodes (running xmlBlaster instances)</td>
         </tr>
         <tr>
            <td>/node/heron/?freeMem</td>
            <td>Query the free memory in bytes</td>
         </tr>
         <tr>
            <td>/node/heron/?runlevel=3</td>
            <td>Switch run level of heron to 3 (STANDBY)</td>
         </tr>
         <tr>
            <td>/node/heron/?numClients</td>
            <td>How many clients are logged in to heron</td>
         </tr>
         <tr>
            <td>/node/heron/client/joe/?sessionList</td>
            <td>Retrieve the public session IDs of joe (if joe is logged in three times, there will be three entries)</td>
         </tr>
         <tr>
            <td>client/joe/?sessionList</td>
            <td>Same as above but relative addressed</td>
         </tr>
         <tr>
            <td>client/joe/ses17/?uptime</td>
            <td>How long is session ID 17 logged in (in seconds)</td>
         </tr>
         <tr>
            <td>client/*/?uptime</td>
            <td>The uptime of all users (in seconds)</td>
         </tr>
         <tr>
            <td>client/joe/ses17/?cbQueueMaxMsgs=30000</td>
            <td>Change to max. callback queue size of joe-session-ID 17 to 30 thousand messages</td>
         </tr>
         <tr>
            <td>/node/heron/sysprop/?java.vm.version</td>
            <td>Access the JDK version</td>
         </tr>
         <tr>
            <td>sysprop/?user.language=es</td>
            <td>Change the language to spanish (relative addressed)</td>
         </tr>
         <tr>
            <td>sysprop/?info=false</td>
            <td>Switch off logging of infos</td>
         </tr>
         <tr>
            <td>sysprop/?trace[corba]=true</td>
            <td>Switch on trace mode for the corba layer</td>
         </tr>
         <tr>
            <td>/node/heron/?numMsgs</td>
            <td>How many messages are currently in heron</td>
         </tr>
         <tr>
            <td>/node/heron/msg/Hello/?content</td>
            <td>Access the message content of the message with key-oid="Hello"</td>
         </tr>
         <tr>
            <td>/node/heron/msg/Hello/?content=How are you</td>
            <td>Change the message content of the message with key-oid="Hello" to "How are you"</td>
         </tr>
         <tr>
            <td>/node/heron/msg/?Hello</td>
            <td>Return the complete message (oid=Hello)</td>
         </tr>
         <tr>
            <td>/node/heron/msg/Hello/?key</td>
            <td>Return the complete key of this message</td>
         </tr>
         <tr>
            <td>/node/heron/msg/Hello/?key.contentMime</td>
            <td>Return the MIME type of this message</td>
         </tr>
      </table>
      <p>
      You can address an attribute with global scope <i>/node/heron/client/joe/?uptime</i>
      or with relative scope <i>client/joe/?uptime</i>. The relative query assumes
      the current xmlBlaster node you are connected to.
      </p>

      <h3>
      How does the return value look like?
      </h3>
      <p>
      Responses for telnet clients are described in the requirement <i>admin.telnet</i>.
      </p>
      <p>
      Mom clients receive messages with the value in the message content, see requirement <i>admin.momClient</i>.
      </p>

      <h3>
      How can we use these commands?
      </h3>
      <p>
         Here are example invocations from different clients:
      </p>
      <table border="1">
         <tr>
            <td>Protocol</td>
            <td>Example</td>
            <td>Description</td>
            <td>Impl</td>
         </tr>

         <tr>
            <td>MoM clients</td>
            <td><pre>con.get(
"&lt;key oid='__cmd:?freeMem'/>",
"&lt;qos/>")</pre></td>
            <td>The token <i>__cmd:</i> marks the oid to be used as a command.<br />
            Here we have used relative addressing, absolute <i>__cmd:/node/heron/?freeMem</i>
            would be identical.<br /><br />
            For example try (in one line)
            <pre>java org.xmlBlaster.client.reader.GetMessage
-oid __cmd:?clientList</pre>
            Here we change the logging level of the corba plugin:
            <pre>
java org.xmlBlaster.client.feeder.PublishFile
-xmlKey "&lt;key oid='__cmd:sysprop/?trace[corba]=true'/>"</pre>
            Exit xmlBlaster with exit value 9:
            <pre>
java org.xmlBlaster.client.feeder.PublishFile
-xmlKey "&lt;key oid='__cmd:?exit=9'/>"</pre>
            </td>
            <td>yes</td>
         </tr>
      
         <tr>
            <td>telnet</td>
            <td><pre>
get ?runlevel
set /node/heron/?runlevel=3
set sysprop/?trace[corba]=true
            </pre></td>
            <td>With telnet you give the command <i>get</i> or <i>set</i> followed by the query (separated with a blank)
            </td>
            <td>yes</td>
         </tr>

         <tr>
            <td>SNMP</td>
            <td><pre>snmpget -v 1 -c public
  192.168.1.4 
  1.3.6.1.4.1.11662.1.2.1.3</pre></td>
            <td>-c is community password, usually 'public', the IP is where the master agent runs
            <pre>
1.3.6.1.4.1.11662   xmlBlaster
1.3.6.1.4.1.11662.1 objects
1.3.6.1.4.1.11662.2 traps
1.3.6.1.4.1.11662.1.2.1.3 
 objects momTable momEntry uptime
            </pre>
            </td>
            <td>no</td>
         </tr>

         <tr>
            <td>JMX</td>
            <td><pre>getAttribute(
"/node/heron/?freeMem")</pre></td>
            <td>This is a method of DynamicMBean</td>
            <td>no</td>
         </tr>

      </table>

      <h3>
         How does authentication work?
      </h3>
      For MoM clients the usual authentication applies.<br />
      For telnet clients you have to use the connect command on startup.<br />
      For SNMP access the authentication is done in SNMP<br />
      For JMX we have not investigated yet.

   </description>


   <example lang="any" type="HTML">
      <p>
         Here is an example of a complete and valid URI, we should try
         not to break this syntax with our query language:
      </p>
      <pre> <!-- class="BORDER" -->
http://joe:mypasswd@www.xmlBlaster.org:3412/myPath/?key.oid=MyMessage#myFragment

Protocol: http
Host:     www.xmlBlaster.org
Port:     3412
File:     /myPath/?key.oid=MyMessage
Path:     /myPath/
Query:    key.oid=MyMessage
Ref:      myFragment
UserInfo: joe:mypasswd
      </pre>
   </example>

   <configuration where="server">
      <p>
      The available commands are marked as R=readable, W=writable, S=subscribable
      T=schedulable, P=pollable
      </p>
      <p>
      If you want to change a value, you need to use a <i>publish()</i> message,
      or with telnet you would use <i>set</i>, for SNMP you use a <i>set</i>
      command as well.
      </p>
      <table border="1">
         <tr>
            <td>Command</td>
            <td>Type</td>
            <td>Read/Write</td>
            <td>Description</td>
            <td>Implemented</td>
         </tr>

         <tr>
            <td>client/joe/?uptime</td>
            <td>int</td>
            <td>R</td>
            <td>Get the number of seconds the user is logged in
            </td>
            <td>yes (telnet)</td>
         </tr>
      
         <tr>
            <td>sysprop/?trace[auth]</td>
            <td>boolean</td>
            <td>R/W</td>
            <td>Monitor or change the <i>trace</i> log level, but
            only for authentication issues
            </td>
            <td>no</td>
         </tr>

         <tr>
            <td>TODO</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
         </tr>

      </table>
      <p>See the API links of I_AdminNode, I_AdminSubject, I_AdminSession below of the
      available core properties to monitor or configure</p>
   </configuration>

   <todo type="HTML">
      Read access with telnet on system properties and internal states
      is implemented.<br />
      The rest is missing.
   </todo>

   <see type="API">org.xmlBlaster.engine.admin.I_AdminNode</see>
   <see type="API">org.xmlBlaster.engine.admin.I_AdminSubject</see>
   <see type="API">org.xmlBlaster.engine.admin.I_AdminSession</see>
   <see type="API">org.xmlBlaster.engine.admin.extern.TelnetGateway</see>
   <see type="REQ">admin</see>
   <see type="REQ">admin.telnet</see>
   <see type="REQ">admin.momClient</see>
   <see type="REQ">engine.runlevel</see>

   <author>Heinrich.Goetzger@exploding-systems.de</author>
   <author>Michele.Laghi@swisscom.com</author>
   <author>ruff@swand.lake.de</author>
   <date>2002 06 12</date>
   <revision>$Revision: 1.19 $</revision>
   <testcase status="OPEN">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">classtest.CommandWrapperTest</test>
   </testcase>
</requirement>

