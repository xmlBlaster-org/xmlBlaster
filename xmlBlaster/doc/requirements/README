XmlBlaster requirements
=======================

The requirement document layout is described in requirement.dtd

Each requirement is described in an own xml file

Requirements have no numbers but a unique describing name,
the filename is the same as the <requirement id=""> ID.

Every requirement needs a <testcase> tag, which refers to the testsuite
with one to many full automatic test cases.

Every bug is noted here and checked with a testsuite case.

The example tag allows to use the "<", all other tags need to write &lt; instead
(example uses CDATA section and no 'disable-output-escaping' in XLS)

You can query a closed requirement as follows:
   java DomQueryTest  engine.get.no.xml  "requirement/fix[@status='CLOSED']/.."

The html.xsl files needs the all.xml file to go though all xml requirements
and build a HTML table.

CollectXml.java is a little helper which generates all.xml
containing all xml requirements.
all.html is used by the XSL stylesheet to process all xml files into
one html file


Generate HTML output with Sun XML parser:
=========================================
   java -Dcom.jclark.xsl.sax.parser=com.jclark.xsl.dom.SunXMLProcessorImpl com.jclark.xsl.sax.Driver all.xml html.xsl requirement.html


Generate HTML output with James Clarks XML parser:
================================================w==
   export CLASSPATH=/www/xp/xp.jar:$CLASSPATH
   java -Dcom.jclark.xsl.sax.parser=com.jclark.xml.sax.CommentDriver com.jclark.xsl.sax.Driver all.xml html.xsl requirement.html


Validating with IBM parser:
===========================
export CLASSPATH=/www/xml4j/xml4j.jar:/www/xml4j/xml4jSamples.jar:$CLASSPATH
java dom.DOMCount -p dom.wrappers.DOMParser engine.get.no.xml
java dom.DOMWriter -p dom.wrappers.DOMParser engine.get.no.xml 



ruff@swand.lake.de




---- snippet how to pass parameters from command line ----
If I try this from the command-line with Oracle XSLT,
passing a value for the parameter, I get:

$ oraxsl -p key='9988' data.xml test.xsl

http://localhost:8000/servlet/servletName?objectKey=9988
http://localhost:8000/servlet/servletName?objectKey=9988


