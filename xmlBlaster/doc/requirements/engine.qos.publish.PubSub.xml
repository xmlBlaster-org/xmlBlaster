<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='engine.qos.publish.PubSub' type='NEW' prio='HIGH' status="CLOSED">
   <topic>Published messages without a qos &lt;destination> tag are published in Publish/Subscribe mode</topic>
   <description>
      If you publish a message using the publish() message, it is sent to xmlBlaster only.
      Interested client may access this message using the synchronous get() or the asynchronous subscribe() method.
      This is called the Publish/Subscribe pattern, which allows a maximum decoupling of distributed
      components.
      Note that if a subscriber callback fails, the publisher won't notice this.
   </description>
   <example lang="Java">
      <![CDATA[
      <qos>   <!-- no <destination> specified! -->
      </qos>
      ]]>
   </example>
   <see type="REQ">engine.qos.publish.forceUpdate</see>
   <see type="REQ">engine.qos.publish.isDurable</see>
   <see type="REQ">engine.qos.publish.isVolatile</see>
   <see type="REQ">engine.qos.publish.readonly</see>
   <see type="REQ">engine.queue</see>
   <see type="REQ">mime.plugin.publishfilter</see>
   <see type="API">org.xmlBlaster.client.PublishQosWrapper</see>
   <see type="API">org.xmlBlaster.client.PublishKeyWrapper</see>
   <author>ruff@swand.lake.de</author>
   <date>2000 01 02</date>
   <revision>$Revision: 1.6 $</revision>

   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">testsuite.org.xmlBlaster.TestPub</test>
   </testcase>
</requirement>

