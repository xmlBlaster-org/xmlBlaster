<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='engine.message.lifecycle' type='NEW' prio='HIGH' status='CLOSED'>
   <topic>State charts and configuration of message and topic lifecycles</topic>
   <description>
      <p>
      In xmlBlaster we define a topic as a single key oid whereas
      a message instances are the single messages published (probably with identical oid).
      The message instances build a history queue of a topic.
      </p>
      <h3>
      Message lifecycle overview
      </h3>
      <br /><a NAME="lifecylceOverview"></a>
      <img src="engine.message.expiry.gif" border="0" title="Message lifecycle overview" alt="Message lifecycle overview" />
      <br />
      <p>
      Every message key oid defines a topic. You publish any number of messages with the
      same oid, those MsgUnit instances are distinguished by the unique receive timestamp.
      </p>
      <p>
      The messages are queryable from the history queue. The history queue only
      contains references to the real messageUnit.
      </p>
      <p>
      Every subscription puts a reference of a messageUnit into the client specific
      callback queue, from where the messages are sent to the client.
      </p>
      <p>
      The real messageUnit (the <i>meat</i>)
      is handled by the cache implementation.
      The pointers on the cache entries are reference counted. If no weak reference
      exists anymore the cache entry is destroyed.
      </p>
      <p>
      If a cache entry is swapped to harddisk, the weak references are set
      to null by the Java virtual machine. In this case, the access forces 
      a lookup and the message is swapped back to the cache.
      </p>
      <br />
      <br />


      <h3>
      The logical states of a topic (= messages with same key oid)
      </h3>
      <br /><a NAME="topicLifecylce"></a>
      <img src="TopicLifecycle.gif" border="0" title="Lifecycle of an xmlBlaster topic" alt="Lifecycle of an xmlBlaster topic" />
      <br />
      <p>
      The above states break down to internal conditions.
      </p>
      <br />
      <br />


      <h3>
      Internal conditions of a topic:
      </h3>
      <table border="1">
         <tr>
            <th>state</th>
            <th>Is visible?<br />XPATH queries are possible<br />has BigXmlDom entry</th>
            <th>Referenced by<br />history queue</th>
            <th>Referenced by<br />callback queue</th>
            <th>Has subscriptions</th>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>true</td>
            <td>true</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>true</td>
            <td>true</td>
            <td>false</td>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>true</td>
            <td>false</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>true</td>
            <td>false</td>
            <td>false</td>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>false</td>
            <td>true</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>false</td>
            <td>true</td>
            <td>false</td>
         </tr>
         <tr>
            <td><b>alive</b></td>
            <td>true</td>
            <td>false</td>
            <td>false</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>unreferenced</b></td>
            <td>true</td>
            <td>false</td>
            <td>false</td>
            <td>false</td>
         </tr>

         <tr>
            <td><b>invalid</b></td>
            <td>false</td>
            <td>true</td>
            <td>true</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>invalid</b></td>
            <td>false</td>
            <td>true</td>
            <td>true</td>
            <td>false</td>
         </tr>
         <tr>
            <td><b>invalid</b></td>
            <td>false</td>
            <td>true</td>
            <td>false</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>invalid</b></td>
            <td>false</td>
            <td>true</td>
            <td>false</td>
            <td>false</td>
         </tr>
         <tr>
            <td><b>invalid</b></td>
            <td>false</td>
            <td>false</td>
            <td>true</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>softErased</b></td>
            <td>false</td>
            <td>false</td>
            <td>true</td>
            <td>false</td>
         </tr>
         <tr>
            <td><b>unconfigured</b></td>
            <td>false</td>
            <td>false</td>
            <td>false</td>
            <td>true</td>
         </tr>
         <tr>
            <td><b>start/dead</b></td>
            <td>false</td>
            <td>false</td>
            <td>false</td>
            <td>false</td>
         </tr>
      </table>

      <p>
      </p>
      <br />
      <br />

      <h3>
      Possible states of a message instance:<a NAME="messageLifecylce"></a>
      </h3>
      <br />
      <img src="MessageInstanceLifecycle.gif" border="0" title="Lifecycle of an xmlBlaster message instance" alt="Lifecycle of an xmlBlaster message instance" />
      <br />
   </description>
   <configuration where="server">

      <p>
      The configuration of topics and messages are done by publishing a message and
      setting certain publish QoS tags:
      </p>
      <br />
      <img src="PublishQosOverview.gif" border="0" title="Topic and message scope of a publish QoS" alt="Topic and message scope of a publish QoS" />
      <br />
   </configuration>
   <see type="API">org.xmlBlaster.util.qos.MsgQosSaxFactory</see>
   <see type="REQ">interface.publish</see>
   <see type="REQ">engine.message</see>
   <author>xmlBlaster@marcelruff.info</author>
   <date>2002 11 17</date>
   <revision>$Revision: 1.10 $</revision>
   <testcase status="CLOSED">
      <name>-</name>
      <comment>-</comment>
      <test tool="SUITE">org.xmlBlaster.test.topic.TestTopicLifeCycle</test>
   </testcase>
</requirement>

