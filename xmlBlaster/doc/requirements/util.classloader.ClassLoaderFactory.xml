<?xml version='1.0' encoding='ISO-8859-1' ?>
<!DOCTYPE requirement SYSTEM "requirement.dtd">

<requirement id='util.classloader.ClassLoaderFactory' type='NEW' prio='MEDIUM' status='CLOSED'>

   <topic>XmlBlaster provides a pluggable ClassLoaderFactory to create instances of xmlBlaster specific classloaders.</topic>

   <description>
      <p>The ClassLoaderFactory is an interface specifying factory methods to 
      get classloaders for loading XmlBlaster classes and plugin classes. The
      factory is pluggable by using the property <code>classLoaderFactory</code> and is acceable through org.xmlBlaster.util.Global.getClassLoaderFactory().</p>

      <p>One and only one ClassLoaderFactory instance will be created per Global instance.
      </p>
     <h3>StandaloneClassLoaderFactory</h3>
      <p>The default implementation used is StandaloneClassLoaderFactory wich
      tries to manipulate the classpath of the running JVM, and especially honours the classpath property of plugins. This is typically used in standalone mode.This classloader strategy may however be problematic when running XmlBlaster embedded in other appservers, therefore other strategies exists.</p>
     <h3>ContextClassLoaderFactory</h3>
    <p>The ContextClassLoaderFactory will return the current context classloader to load both XmlBlaster classes and plugins. In some cases it works better in embedded environments. Its important to note however that the classpath property of plugins are not used by this factory.</p>

   </description>
  <configuration where="server">
      <table border="1">
         <tr>
            <th>Property</th>
            <th>Example</th>
            <th>Description</th>
            <th>Implemented</th>
         </tr>

         <tr>
            <td>classLoaderFactory</td>
            <td>org.xmlBlaster.util.classloader.ContextClassLoaderFactory</td>
            <td>Use another ClassLoaderFactory than StandaloneClassLoaderFactory</td>
            <td><img src="ok.gif" border="0" alt="yes" /></td>
         </tr>
      </table>
   </configuration>
   <todo>
   <p>Write some TestCase!</p>
   </todo>

   <see type="REQ">util.classloader.XmlBlasterClassLoader</see>
   <see type="REQ">util.classloader.PluginClassLoader</see>
   <see type="API">org.xmlBlaster.util.classloader.ClassLoaderFactory</see>
   <see type="API">org.xmlBlaster.util.classloader.StandaloneClassLoaderFactory</see>
   <see type="API">org.xmlBlaster.util.classloader.ContextClassLoaderFactory</see>
   <see type="API">org.xmlBlaster.util.classloader.XmlBlasterClassLoader</see>
   <see type="API">org.xmlBlaster.util.classloader.PluginClassLoader</see>

   <author>konrad.krafft@doubleslash.de</author>
   <author>pra@tim.se</author>
   <date>2002 07 12</date>
   <revision>$Revision: 1.3 $</revision>

   <testcase status="OPEN">
      <name></name>
      <comment>
      </comment>
      <test tool="SUITE"></test>
   </testcase>

</requirement>
