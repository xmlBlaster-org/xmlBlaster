/*
 * This Java file has been generated by smidump 0.3.1. Do not edit!
 * It is intended to be used within a Java AgentX sub-agent environment.
 *
 * $Id$
 */
package org.xmlBlaster.engine.admin.extern.snmp;

/**
    This class represents a Java AgentX (JAX) implementation of
    the scalar group nodeScalar defined in XMLBLASTER-MIB.

    @version 1
    @author  smidump 0.3.1
    @see     AgentXGroup, AgentXScalars
 */

import java.util.Vector;
import java.util.Enumeration;
import jax.AgentXOID;
import jax.AgentXVarBind;
import jax.AgentXSetPhase;
import jax.AgentXResponsePDU;
import jax.AgentXScalars;

public class NodeScalar extends AgentXScalars
{

    private final static long[] NodeScalarOID = {1, 3, 6, 1, 4, 1, 11662, 1, 1};

    protected AgentXOID NumNodesOID;
    protected final static long[] NumNodesName = {1, 3, 6, 1, 4, 1, 11662, 1, 1, 1, 0};
    protected long numNodes = 0;
    public NodeScalar()
    {
        oid = new AgentXOID(NodeScalarOID);
        data = new Vector();
        NumNodesOID = new AgentXOID(NumNodesName);
        data.addElement(NumNodesOID);
    }

    public long get_numNodes()
    {
        return numNodes;
    }

    public AgentXVarBind getScalar(AgentXOID pos, AgentXOID oid)
    {
        if ((pos == null) || (pos.compareTo(oid) != 0))
            return new AgentXVarBind(oid, AgentXVarBind.NOSUCHOBJECT);
        else {
            if (pos == NumNodesOID)
                return new AgentXVarBind(oid, AgentXVarBind.GAUGE32, 
                                         get_numNodes());
        }
        return new AgentXVarBind(oid, AgentXVarBind.NOSUCHOBJECT);
    }

    public int setScalar(AgentXSetPhase phase, AgentXOID pos,
                         AgentXVarBind inVb)
    {
        if ((pos == null) || (pos.compareTo(inVb.getOID()) != 0))
            return AgentXResponsePDU.INCONSISTENT_NAME;
        else {
        }
        return AgentXResponsePDU.NOT_WRITABLE;
    }

    public AgentXVarBind getNextScalar(AgentXOID pos, AgentXOID oid)
    {
        if ((pos == null) || (pos.compareTo(oid) <= 0))
            return new AgentXVarBind(oid, AgentXVarBind.ENDOFMIBVIEW);
        else {
            if (pos == NumNodesOID)
                return new AgentXVarBind(pos, AgentXVarBind.GAUGE32, 
                                         get_numNodes());
        }
        return new AgentXVarBind(pos, AgentXVarBind.ENDOFMIBVIEW);
    }

}

